// Memory map of Commodore 64
// $A000-$BFFF: BASIC interpreter
//
// Reference sites:
// Hypertext map: https://skoolkid.github.io/sk6502/c64rom/maps/all.html
// Line-by-line comments (text format): https://www.zimmers.net/anonftp/pub/cbm/src/c64/c64_rom_disassembly.txt


BASIC_all=[
  {
    "addr": "A000",
    "hex1": "94",
    "hex2": "E3",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "BASIC cold start entry point",
    "desc": "start of the BASIC ROM",
    "parent": "this",
    "entry": true,
    "label": "start_of_the_basic_r"
  },
  {
    "addr": "A002",
    "hex1": "7B",
    "hex2": "E3",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "BASIC warm start entry point",
    "parent": "start_of_the_basic_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of start_of_the_basic_r)"
  },
  {
    "addr": "A00C",
    "hex1": "30",
    "hex2": "A8",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform END     $80",
    "desc": "action addresses for primary commands these are called by pushing the address onto the stack and doing an RTS so the actual address -1 needs to be pushed",
    "parent": "this",
    "entry": true,
    "label": "action_addresses_for"
  },
  {
    "addr": "A00E",
    "hex1": "41",
    "hex2": "A7",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform FOR     $81",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A010",
    "hex1": "1D",
    "hex2": "AD",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform NEXT    $82",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A012",
    "hex1": "F7",
    "hex2": "A8",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform DATA    $83",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A014",
    "hex1": "A4",
    "hex2": "AB",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform INPUT#  $84",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A016",
    "hex1": "BE",
    "hex2": "AB",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform INPUT   $85",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A018",
    "hex1": "80",
    "hex2": "B0",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform DIM     $86",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A01A",
    "hex1": "05",
    "hex2": "AC",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform READ    $87",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A01C",
    "hex1": "A4",
    "hex2": "A9",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform LET     $88",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A01E",
    "hex1": "9F",
    "hex2": "A8",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform GOTO    $89",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A020",
    "hex1": "70",
    "hex2": "A8",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform RUN     $8A",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A022",
    "hex1": "27",
    "hex2": "A9",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform IF      $8B",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A024",
    "hex1": "1C",
    "hex2": "A8",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform RESTORE $8C",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A026",
    "hex1": "82",
    "hex2": "A8",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform GOSUB   $8D",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A028",
    "hex1": "D1",
    "hex2": "A8",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform RETURN  $8E",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A02A",
    "hex1": "3A",
    "hex2": "A9",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform REM     $8F",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A02C",
    "hex1": "2E",
    "hex2": "A8",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform STOP    $90",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A02E",
    "hex1": "4A",
    "hex2": "A9",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform ON      $91",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A030",
    "hex1": "2C",
    "hex2": "B8",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform WAIT    $92",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A032",
    "hex1": "67",
    "hex2": "E1",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform LOAD    $93",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A034",
    "hex1": "55",
    "hex2": "E1",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform SAVE    $94",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A036",
    "hex1": "64",
    "hex2": "E1",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform VERIFY  $95",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A038",
    "hex1": "B2",
    "hex2": "B3",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform DEF     $96",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A03A",
    "hex1": "23",
    "hex2": "B8",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform POKE    $97",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A03C",
    "hex1": "7F",
    "hex2": "AA",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform PRINT#  $98",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A03E",
    "hex1": "9F",
    "hex2": "AA",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform PRINT   $99",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A040",
    "hex1": "56",
    "hex2": "A8",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform CONT    $9A",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A042",
    "hex1": "9B",
    "hex2": "A6",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform LIST    $9B",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A044",
    "hex1": "5D",
    "hex2": "A6",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform CLR     $9C",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A046",
    "hex1": "85",
    "hex2": "AA",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform CMD     $9D",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A048",
    "hex1": "29",
    "hex2": "E1",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform SYS     $9E",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A04A",
    "hex1": "BD",
    "hex2": "E1",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform OPEN    $9F",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A04C",
    "hex1": "C6",
    "hex2": "E1",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform CLOSE   $A0",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A04E",
    "hex1": "7A",
    "hex2": "AB",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform GET     $A1",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A050",
    "hex1": "41",
    "hex2": "A6",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform NEW     $A2",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A052",
    "hex1": "39",
    "hex2": "BC",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform SGN     $B4",
    "desc": "action addresses for functions",
    "parent": "this",
    "entry": true,
    "label": "action_addresses_for"
  },
  {
    "addr": "A054",
    "hex1": "CC",
    "hex2": "BC",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform INT     $B5",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A056",
    "hex1": "58",
    "hex2": "BC",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform ABS     $B6",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A058",
    "hex1": "10",
    "hex2": "03",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform USR     $B7",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A05A",
    "hex1": "7D",
    "hex2": "B3",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform FRE     $B8",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A05C",
    "hex1": "9E",
    "hex2": "B3",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform POS     $B9",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A05E",
    "hex1": "71",
    "hex2": "BF",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform SQR     $BA",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A060",
    "hex1": "97",
    "hex2": "E0",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform RND     $BB",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A062",
    "hex1": "EA",
    "hex2": "B9",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform LOG     $BC",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A064",
    "hex1": "ED",
    "hex2": "BF",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform EXP     $BD",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A066",
    "hex1": "64",
    "hex2": "E2",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform COS     $BE",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A068",
    "hex1": "6B",
    "hex2": "E2",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform SIN     $BF",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A06A",
    "hex1": "B4",
    "hex2": "E2",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform TAN     $C0",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A06C",
    "hex1": "0E",
    "hex2": "E3",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform ATN     $C1",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A06E",
    "hex1": "0D",
    "hex2": "B8",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform PEEK    $C2",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A070",
    "hex1": "7C",
    "hex2": "B7",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform LEN     $C3",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A072",
    "hex1": "65",
    "hex2": "B4",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform STR$    $C4",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A074",
    "hex1": "AD",
    "hex2": "B7",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform VAL     $C5",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A076",
    "hex1": "8B",
    "hex2": "B7",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform ASC     $C6",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A078",
    "hex1": "EC",
    "hex2": "B6",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform CHR$    $C7",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A07A",
    "hex1": "00",
    "hex2": "B7",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform LEFT$   $C8",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A07C",
    "hex1": "2C",
    "hex2": "B7",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform RIGHT$  $C9",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A07E",
    "hex1": "37",
    "hex2": "B7",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "perform MID$    $CA",
    "parent": "action_addresses_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of action_addresses_for)"
  },
  {
    "addr": "A080",
    "hex1": "79",
    "hex2": "69",
    "hex3": "B8",
    "opcode": "",
    "argument": "",
    "comment": "+",
    "desc": "precedence byte and action addresses for operators like the primary commands these are called by pushing the address onto the stack and doing an RTS, so again the actual address -1 needs to be pushed",
    "parent": "this",
    "entry": true,
    "label": "precedence_byte_and_"
  },
  {
    "addr": "A083",
    "hex1": "79",
    "hex2": "52",
    "hex3": "B8",
    "opcode": "",
    "argument": "",
    "comment": "-",
    "parent": "precedence_byte_and_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of precedence_byte_and_)"
  },
  {
    "addr": "A086",
    "hex1": "7B",
    "hex2": "2A",
    "hex3": "BA",
    "opcode": "",
    "argument": "",
    "comment": "*",
    "parent": "precedence_byte_and_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of precedence_byte_and_)"
  },
  {
    "addr": "A089",
    "hex1": "7B",
    "hex2": "11",
    "hex3": "BB",
    "opcode": "",
    "argument": "",
    "comment": "/",
    "parent": "precedence_byte_and_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of precedence_byte_and_)"
  },
  {
    "addr": "A08C",
    "hex1": "7F",
    "hex2": "7A",
    "hex3": "BF",
    "opcode": "",
    "argument": "",
    "comment": "^",
    "parent": "precedence_byte_and_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of precedence_byte_and_)"
  },
  {
    "addr": "A08F",
    "hex1": "50",
    "hex2": "E8",
    "hex3": "AF",
    "opcode": "",
    "argument": "",
    "comment": "AND",
    "parent": "precedence_byte_and_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of precedence_byte_and_)"
  },
  {
    "addr": "A092",
    "hex1": "46",
    "hex2": "E5",
    "hex3": "AF",
    "opcode": "",
    "argument": "",
    "comment": "OR",
    "parent": "precedence_byte_and_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of precedence_byte_and_)"
  },
  {
    "addr": "A095",
    "hex1": "7D",
    "hex2": "B3",
    "hex3": "BF",
    "opcode": "",
    "argument": "",
    "comment": ">",
    "parent": "precedence_byte_and_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of precedence_byte_and_)"
  },
  {
    "addr": "A098",
    "hex1": "5A",
    "hex2": "D3",
    "hex3": "AE",
    "opcode": "",
    "argument": "",
    "comment": "=",
    "parent": "precedence_byte_and_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of precedence_byte_and_)"
  },
  {
    "addr": "A09B",
    "hex1": "64",
    "hex2": "15",
    "hex3": "B0",
    "opcode": "",
    "argument": "",
    "comment": "<",
    "parent": "precedence_byte_and_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of precedence_byte_and_)"
  },
  {
    "addr": "A09E",
    "hex1": "45",
    "hex2": "4E",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "end",
    "desc": "BASIC keywords each word has b7 set in it's last character as an end marker, even the one character keywords such as \"<\" or \"=\" first are the primary command keywords, only these can start a statement",
    "parent": "this",
    "entry": true,
    "label": "basic_keywords_each_"
  },
  {
    "addr": "A0A0",
    "hex1": "C4",
    "hex2": "46",
    "hex3": "4F",
    "opcode": "D2",
    "argument": "E 45 58 D4",
    "comment": "for next",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A0A8",
    "hex1": "44",
    "hex2": "41",
    "hex3": "54",
    "opcode": "C1",
    "argument": "9 4E 50 55",
    "comment": "data input#",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A0B0",
    "hex1": "54",
    "hex2": "A3",
    "hex3": "49",
    "opcode": "4E",
    "argument": "0 55 D4 44",
    "comment": "input dim",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A0B8",
    "hex1": "49",
    "hex2": "CD",
    "hex3": "52",
    "opcode": "45",
    "argument": "1 C4 4C 45",
    "comment": "read let",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A0C0",
    "hex1": "D4",
    "hex2": "47",
    "hex3": "4F",
    "opcode": "54",
    "argument": "F 52 55 CE",
    "comment": "goto run",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A0C8",
    "hex1": "49",
    "hex2": "C6",
    "hex3": "52",
    "opcode": "45",
    "argument": "3 54 4F 52",
    "comment": "if restore",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A0D0",
    "hex1": "C5",
    "hex2": "47",
    "hex3": "4F",
    "opcode": "53",
    "argument": "5 C2 52 45",
    "comment": "gosub return",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A0D8",
    "hex1": "54",
    "hex2": "55",
    "hex3": "52",
    "opcode": "CE",
    "argument": "2 45 CD 53",
    "comment": "rem stop",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A0E0",
    "hex1": "54",
    "hex2": "4F",
    "hex3": "D0",
    "opcode": "4F",
    "argument": "E 57 41 49",
    "comment": "on wait",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A0E8",
    "hex1": "D4",
    "hex2": "4C",
    "hex3": "4F",
    "opcode": "41",
    "argument": "4 53 41 56",
    "comment": "load save",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A0F0",
    "hex1": "C5",
    "hex2": "56",
    "hex3": "45",
    "opcode": "52",
    "argument": "9 46 D9 44",
    "comment": "verify def",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A0F8",
    "hex1": "45",
    "hex2": "C6",
    "hex3": "50",
    "opcode": "4F",
    "argument": "B C5 50 52",
    "comment": "poke print#",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A100",
    "hex1": "49",
    "hex2": "4E",
    "hex3": "54",
    "opcode": "A3",
    "argument": "0 52 49 4E",
    "comment": "print",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A108",
    "hex1": "D4",
    "hex2": "43",
    "hex3": "4F",
    "opcode": "4E",
    "argument": "4 4C 49 53",
    "comment": "cont list",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A110",
    "hex1": "D4",
    "hex2": "43",
    "hex3": "4C",
    "opcode": "D2",
    "argument": "3 4D C4 53",
    "comment": "clr cmd sys",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A118",
    "hex1": "59",
    "hex2": "D3",
    "hex3": "4F",
    "opcode": "50",
    "argument": "5 CE 43 4C",
    "comment": "open close",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A120",
    "hex1": "4F",
    "hex2": "53",
    "hex3": "C5",
    "opcode": "47",
    "argument": "5 D4 4E 45",
    "comment": "get new next are the secondary command keywords, these can not start a statement",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A128",
    "hex1": "D7",
    "hex2": "54",
    "hex3": "41",
    "opcode": "42",
    "argument": "8 54 CF 46",
    "comment": "tab( to",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A130",
    "hex1": "CE",
    "hex2": "53",
    "hex3": "50",
    "opcode": "43",
    "argument": "8 54 48 45",
    "comment": "spc( then",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A138",
    "hex1": "CE",
    "hex2": "4E",
    "hex3": "4F",
    "opcode": "D4",
    "argument": "3 54 45 D0",
    "comment": "not step next are the operators",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A140",
    "hex1": "AB",
    "hex2": "AD",
    "hex3": "AA",
    "opcode": "AF",
    "argument": "E 41 4E C4",
    "comment": "+ - * / ' and",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A148",
    "hex1": "4F",
    "hex2": "D2",
    "hex3": "BE",
    "opcode": "BD",
    "argument": "C",
    "comment": "or <=>",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A14D",
    "hex1": "",
    "hex2": "",
    "hex3": null,
    "opcode": "",
    "argument": "53 47 CE",
    "comment": "sgn and finally the functions",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A150",
    "hex1": "49",
    "hex2": "4E",
    "hex3": "D4",
    "opcode": "41",
    "argument": "2 D3 55 53",
    "comment": "int abs usr",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A158",
    "hex1": "D2",
    "hex2": "46",
    "hex3": "52",
    "opcode": "C5",
    "argument": "0 4F D3 53",
    "comment": "fre pos sqr",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A160",
    "hex1": "51",
    "hex2": "D2",
    "hex3": "52",
    "opcode": "4E",
    "argument": "4 4C 4F C7",
    "comment": "rnd log",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A168",
    "hex1": "45",
    "hex2": "58",
    "hex3": "D0",
    "opcode": "43",
    "argument": "F D3 53 49",
    "comment": "exp cos sin",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A170",
    "hex1": "CE",
    "hex2": "54",
    "hex3": "41",
    "opcode": "CE",
    "argument": "1 54 CE 50",
    "comment": "tan atn peek",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A178",
    "hex1": "45",
    "hex2": "45",
    "hex3": "CB",
    "opcode": "4C",
    "argument": "5 CE 53 54",
    "comment": "len str$",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A180",
    "hex1": "52",
    "hex2": "A4",
    "hex3": "56",
    "opcode": "41",
    "argument": "C 41 53 C3",
    "comment": "val asc",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A188",
    "hex1": "43",
    "hex2": "48",
    "hex3": "52",
    "opcode": "A4",
    "argument": "C 45 46 54",
    "comment": "chr$ left$",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A190",
    "hex1": "A4",
    "hex2": "52",
    "hex3": "49",
    "opcode": "47",
    "argument": "8 54 A4 4D",
    "comment": "right$ mid$ lastly is GO, this is an add on so that GO TO, as well as GOTO, will work",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A198",
    "hex1": "49",
    "hex2": "44",
    "hex3": "A4",
    "opcode": "47",
    "argument": "F",
    "comment": "go",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A19D",
    "hex1": "00",
    "hex2": "",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "end marker",
    "parent": "basic_keywords_each_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_keywords_each_)"
  },
  {
    "addr": "A19E",
    "hex1": "54",
    "hex2": "4F",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "1 too many files",
    "desc": "BASIC error messages",
    "parent": "this",
    "entry": true,
    "label": "basic_error_messages"
  },
  {
    "addr": "A1A0",
    "hex1": "4F",
    "hex2": "20",
    "hex3": "4D",
    "opcode": "41",
    "argument": "E 59 20 46",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A1A8",
    "hex1": "49",
    "hex2": "4C",
    "hex3": "45",
    "opcode": "D3",
    "argument": "6 49 4C 45",
    "comment": "2 file open",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A1B0",
    "hex1": "20",
    "hex2": "4F",
    "hex3": "50",
    "opcode": "45",
    "argument": "E 46 49 4C",
    "comment": "3 file not open",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A1B8",
    "hex1": "45",
    "hex2": "20",
    "hex3": "4E",
    "opcode": "4F",
    "argument": "4 20 4F 50",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A1C0",
    "hex1": "45",
    "hex2": "CE",
    "hex3": "46",
    "opcode": "49",
    "argument": "C 45 20 4E",
    "comment": "4 file not found",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A1C8",
    "hex1": "4F",
    "hex2": "54",
    "hex3": "20",
    "opcode": "46",
    "argument": "F 55 4E C4",
    "comment": "5 device not present",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A1D0",
    "hex1": "44",
    "hex2": "45",
    "hex3": "56",
    "opcode": "49",
    "argument": "3 45 20 4E",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A1D8",
    "hex1": "4F",
    "hex2": "54",
    "hex3": "20",
    "opcode": "50",
    "argument": "2 45 53 45",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A1E0",
    "hex1": "4E",
    "hex2": "D4",
    "hex3": "4E",
    "opcode": "4F",
    "argument": "4 20 49 4E",
    "comment": "6 not input file",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A1E8",
    "hex1": "50",
    "hex2": "55",
    "hex3": "54",
    "opcode": "20",
    "argument": "6 49 4C C5",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A1F0",
    "hex1": "4E",
    "hex2": "4F",
    "hex3": "54",
    "opcode": "20",
    "argument": "F 55 54 50",
    "comment": "7 not output file",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A1F8",
    "hex1": "55",
    "hex2": "54",
    "hex3": "20",
    "opcode": "46",
    "argument": "9 4C C5 4D",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A200",
    "hex1": "49",
    "hex2": "53",
    "hex3": "53",
    "opcode": "49",
    "argument": "E 47 20 46",
    "comment": "8 missing filename",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A208",
    "hex1": "49",
    "hex2": "4C",
    "hex3": "45",
    "opcode": "20",
    "argument": "E 41 4D C5",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A210",
    "hex1": "49",
    "hex2": "4C",
    "hex3": "4C",
    "opcode": "45",
    "argument": "7 41 4C 20",
    "comment": "9 illegal device number",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A218",
    "hex1": "44",
    "hex2": "45",
    "hex3": "56",
    "opcode": "49",
    "argument": "3 45 20 4E",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A220",
    "hex1": "55",
    "hex2": "4D",
    "hex3": "42",
    "opcode": "45",
    "argument": "2 4E 45 58",
    "comment": "10 next without for",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A228",
    "hex1": "54",
    "hex2": "20",
    "hex3": "57",
    "opcode": "49",
    "argument": "4 48 4F 55",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A230",
    "hex1": "54",
    "hex2": "20",
    "hex3": "46",
    "opcode": "4F",
    "argument": "2 53 59 4E",
    "comment": "11 syntax",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A238",
    "hex1": "54",
    "hex2": "41",
    "hex3": "D8",
    "opcode": "52",
    "argument": "5 54 55 52",
    "comment": "12 return without gosub",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A240",
    "hex1": "4E",
    "hex2": "20",
    "hex3": "57",
    "opcode": "49",
    "argument": "4 48 4F 55",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A248",
    "hex1": "54",
    "hex2": "20",
    "hex3": "47",
    "opcode": "4F",
    "argument": "3 55 C2 4F",
    "comment": "13 out of data",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A250",
    "hex1": "55",
    "hex2": "54",
    "hex3": "20",
    "opcode": "4F",
    "argument": "6 20 44 41",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A258",
    "hex1": "54",
    "hex2": "C1",
    "hex3": "49",
    "opcode": "4C",
    "argument": "C 45 47 41",
    "comment": "14 illegal quantity",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A260",
    "hex1": "4C",
    "hex2": "20",
    "hex3": "51",
    "opcode": "55",
    "argument": "1 4E 54 49",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A268",
    "hex1": "54",
    "hex2": "D9",
    "hex3": "4F",
    "opcode": "56",
    "argument": "5 52 46 4C",
    "comment": "15 overflow",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A270",
    "hex1": "4F",
    "hex2": "D7",
    "hex3": "4F",
    "opcode": "55",
    "argument": "4 20 4F 46",
    "comment": "16 out of memory",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A278",
    "hex1": "20",
    "hex2": "4D",
    "hex3": "45",
    "opcode": "4D",
    "argument": "F 52 D9 55",
    "comment": "17 undef'd statement",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A280",
    "hex1": "4E",
    "hex2": "44",
    "hex3": "45",
    "opcode": "46",
    "argument": "7 44 20 53",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A288",
    "hex1": "54",
    "hex2": "41",
    "hex3": "54",
    "opcode": "45",
    "argument": "D 45 4E D4",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A290",
    "hex1": "42",
    "hex2": "41",
    "hex3": "44",
    "opcode": "20",
    "argument": "3 55 42 53",
    "comment": "18 bad subscript",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A298",
    "hex1": "43",
    "hex2": "52",
    "hex3": "49",
    "opcode": "50",
    "argument": "4 52 45 44",
    "comment": "19 redim'd array",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A2A0",
    "hex1": "49",
    "hex2": "4D",
    "hex3": "27",
    "opcode": "44",
    "argument": "0 41 52 52",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A2A8",
    "hex1": "41",
    "hex2": "D9",
    "hex3": "44",
    "opcode": "49",
    "argument": "6 49 53 49",
    "comment": "20 division by zero",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A2B0",
    "hex1": "4F",
    "hex2": "4E",
    "hex3": "20",
    "opcode": "42",
    "argument": "9 20 5A 45",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A2B8",
    "hex1": "52",
    "hex2": "CF",
    "hex3": "49",
    "opcode": "4C",
    "argument": "C 45 47 41",
    "comment": "21 illegal direct",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A2C0",
    "hex1": "4C",
    "hex2": "20",
    "hex3": "44",
    "opcode": "49",
    "argument": "2 45 43 D4",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A2C8",
    "hex1": "54",
    "hex2": "59",
    "hex3": "50",
    "opcode": "45",
    "argument": "0 4D 49 53",
    "comment": "22 type mismatch",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A2D0",
    "hex1": "4D",
    "hex2": "41",
    "hex3": "54",
    "opcode": "43",
    "argument": "8 53 54 52",
    "comment": "23 string too long",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A2D8",
    "hex1": "49",
    "hex2": "4E",
    "hex3": "47",
    "opcode": "20",
    "argument": "4 4F 4F 20",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A2E0",
    "hex1": "4C",
    "hex2": "4F",
    "hex3": "4E",
    "opcode": "C7",
    "argument": "6 49 4C 45",
    "comment": "24 file data",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A2E8",
    "hex1": "20",
    "hex2": "44",
    "hex3": "41",
    "opcode": "54",
    "argument": "1 46 4F 52",
    "comment": "25 formula too complex",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A2F0",
    "hex1": "4D",
    "hex2": "55",
    "hex3": "4C",
    "opcode": "41",
    "argument": "0 54 4F 4F",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A2F8",
    "hex1": "20",
    "hex2": "43",
    "hex3": "4F",
    "opcode": "4D",
    "argument": "0 4C 45 D8",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A300",
    "hex1": "43",
    "hex2": "41",
    "hex3": "4E",
    "opcode": "27",
    "argument": "4 20 43 4F",
    "comment": "26 can't continue",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A308",
    "hex1": "4E",
    "hex2": "54",
    "hex3": "49",
    "opcode": "4E",
    "argument": "5 C5 55 4E",
    "comment": "27 undef'd function",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A310",
    "hex1": "44",
    "hex2": "45",
    "hex3": "46",
    "opcode": "27",
    "argument": "4 20 46 55",
    "comment": "",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A318",
    "hex1": "4E",
    "hex2": "43",
    "hex3": "54",
    "opcode": "49",
    "argument": "F CE 56 45",
    "comment": "28 verify",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A320",
    "hex1": "52",
    "hex2": "49",
    "hex3": "46",
    "opcode": "D9",
    "argument": "C 4F 41 C4",
    "comment": "29 load",
    "parent": "basic_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_error_messages)"
  },
  {
    "addr": "A328",
    "hex1": "9E",
    "hex2": "A1",
    "hex3": "AC",
    "opcode": "A1",
    "argument": "5 A1 C2 A1",
    "comment": "",
    "desc": "error message pointer table",
    "parent": "this",
    "entry": true,
    "label": "error_message_pointe"
  },
  {
    "addr": "A330",
    "hex1": "D0",
    "hex2": "A1",
    "hex3": "E2",
    "opcode": "A1",
    "argument": "0 A1 FF A1",
    "comment": "",
    "parent": "error_message_pointe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of error_message_pointe)"
  },
  {
    "addr": "A338",
    "hex1": "10",
    "hex2": "A2",
    "hex3": "25",
    "opcode": "A2",
    "argument": "5 A2 3B A2",
    "comment": "",
    "parent": "error_message_pointe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of error_message_pointe)"
  },
  {
    "addr": "A340",
    "hex1": "4F",
    "hex2": "A2",
    "hex3": "5A",
    "opcode": "A2",
    "argument": "A A2 72 A2",
    "comment": "",
    "parent": "error_message_pointe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of error_message_pointe)"
  },
  {
    "addr": "A348",
    "hex1": "7F",
    "hex2": "A2",
    "hex3": "90",
    "opcode": "A2",
    "argument": "D A2 AA A2",
    "comment": "",
    "parent": "error_message_pointe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of error_message_pointe)"
  },
  {
    "addr": "A350",
    "hex1": "BA",
    "hex2": "A2",
    "hex3": "C8",
    "opcode": "A2",
    "argument": "5 A2 E4 A2",
    "comment": "",
    "parent": "error_message_pointe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of error_message_pointe)"
  },
  {
    "addr": "A358",
    "hex1": "ED",
    "hex2": "A2",
    "hex3": "00",
    "opcode": "A3",
    "argument": "E A3 1E A3",
    "comment": "",
    "parent": "error_message_pointe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of error_message_pointe)"
  },
  {
    "addr": "A360",
    "hex1": "24",
    "hex2": "A3",
    "hex3": "83",
    "opcode": "A3",
    "argument": "",
    "comment": "",
    "parent": "error_message_pointe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of error_message_pointe)"
  },
  {
    "addr": "A364",
    "hex1": "0D",
    "hex2": "4F",
    "hex3": "4B",
    "opcode": "0D",
    "argument": "",
    "comment": "OK",
    "desc": "BASIC messages",
    "parent": "this",
    "entry": true,
    "label": "basic_messages"
  },
  {
    "addr": "A368",
    "hex1": "00",
    "hex2": "20",
    "hex3": "20",
    "opcode": "45",
    "argument": "2 52 4F 52",
    "comment": "ERROR",
    "parent": "basic_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_messages)"
  },
  {
    "addr": "A370",
    "hex1": "00",
    "hex2": "20",
    "hex3": "49",
    "opcode": "4E",
    "argument": "0 00 0D 0A",
    "comment": "IN",
    "parent": "basic_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_messages)"
  },
  {
    "addr": "A378",
    "hex1": "52",
    "hex2": "45",
    "hex3": "41",
    "opcode": "44",
    "argument": "9 2E 0D 0A",
    "comment": "READY.",
    "parent": "basic_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_messages)"
  },
  {
    "addr": "A380",
    "hex1": "00",
    "hex2": "0D",
    "hex3": "0A",
    "opcode": "42",
    "argument": "2 45 41 4B",
    "comment": "BREAK",
    "parent": "basic_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_messages)"
  },
  {
    "addr": "A388",
    "hex1": "00",
    "hex2": "",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "",
    "parent": "basic_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_messages)"
  },
  {
    "addr": "A389",
    "hex1": "A0",
    "hex2": "",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "unused",
    "desc": "spare byte, not referenced",
    "parent": "this",
    "entry": true,
    "label": "spare_byte_not_refer"
  },
  {
    "addr": "A38A",
    "hex1": "BA",
    "hex2": "",
    "hex3": null,
    "opcode": "TSX",
    "argument": "",
    "comment": "copy stack pointer",
    "desc": "search the stack for FOR or GOSUB activity return Zb=1 if FOR variable found",
    "parent": "this",
    "entry": true,
    "label": "search_the_stack_for"
  },
  {
    "addr": "A38B",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "+1 pass return address",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A38C",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "+2 pass return address",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A38D",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "+3 pass calling routine return address",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A38E",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "+4 pass calling routine return address",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A38F",
    "hex1": "BD",
    "hex2": "01",
    "hex3": "01",
    "opcode": "LDA",
    "argument": "$0101,X",
    "comment": "get the token byte from the stack",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A392",
    "hex1": "C9",
    "hex2": "81",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$81",
    "comment": "is it the FOR token",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A394",
    "hex1": "D0",
    "hex2": "21",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A3B7",
    "comment": "if not FOR token just exit it was the FOR token",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A396",
    "hex1": "A5",
    "hex2": "4A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$4A",
    "comment": "get FOR/NEXT variable pointer high byte",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A398",
    "hex1": "D0",
    "hex2": "0A",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A3A4",
    "comment": "branch if not null",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A39A",
    "hex1": "BD",
    "hex2": "02",
    "hex3": "01",
    "opcode": "LDA",
    "argument": "$0102,X",
    "comment": "get FOR variable pointer low byte",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A39D",
    "hex1": "85",
    "hex2": "49",
    "hex3": null,
    "opcode": "STA",
    "argument": "$49",
    "comment": "save FOR/NEXT variable pointer low byte",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A39F",
    "hex1": "BD",
    "hex2": "03",
    "hex3": "01",
    "opcode": "LDA",
    "argument": "$0103,X",
    "comment": "get FOR variable pointer high byte",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A3A2",
    "hex1": "85",
    "hex2": "4A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$4A",
    "comment": "save FOR/NEXT variable pointer high byte",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A3A4",
    "hex1": "DD",
    "hex2": "03",
    "hex3": "01",
    "opcode": "CMP",
    "argument": "$0103,X",
    "comment": "compare variable pointer with stacked variable pointer high byte",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A3A7",
    "hex1": "D0",
    "hex2": "07",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A3B0",
    "comment": "branch if no match",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A3A9",
    "hex1": "A5",
    "hex2": "49",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$49",
    "comment": "get FOR/NEXT variable pointer low byte",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A3AB",
    "hex1": "DD",
    "hex2": "02",
    "hex3": "01",
    "opcode": "CMP",
    "argument": "$0102,X",
    "comment": "compare variable pointer with stacked variable pointer low byte",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A3AE",
    "hex1": "F0",
    "hex2": "07",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A3B7",
    "comment": "exit if match found",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A3B0",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy index",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A3B1",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A3B2",
    "hex1": "69",
    "hex2": "12",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$12",
    "comment": "add FOR stack use size",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A3B4",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy back to index",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A3B5",
    "hex1": "D0",
    "hex2": "D8",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A38F",
    "comment": "loop if not at start of stack",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A3B7",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "search_the_stack_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_the_stack_for)"
  },
  {
    "addr": "A3B8",
    "hex1": "20",
    "hex2": "08",
    "hex3": "A4",
    "opcode": "JSR",
    "argument": "$A408",
    "comment": "check available memory, do out of memory error if no room",
    "desc": "open up a space in the memory, set the end of arrays",
    "parent": "this",
    "entry": true,
    "label": "open_up_a_space_in_t"
  },
  {
    "addr": "A3BB",
    "hex1": "85",
    "hex2": "31",
    "hex3": null,
    "opcode": "STA",
    "argument": "$31",
    "comment": "set end of arrays low byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3BD",
    "hex1": "84",
    "hex2": "32",
    "hex3": null,
    "opcode": "STY",
    "argument": "$32",
    "comment": "set end of arrays high byte open up a space in the memory, don't set the array end",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3BF",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3C0",
    "hex1": "A5",
    "hex2": "5A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$5A",
    "comment": "get block end low byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3C2",
    "hex1": "E5",
    "hex2": "5F",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$5F",
    "comment": "subtract block start low byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3C4",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save MOD(block length/$100) byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3C6",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy MOD(block length/$100) byte to Y",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3C7",
    "hex1": "A5",
    "hex2": "5B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$5B",
    "comment": "get block end high byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3C9",
    "hex1": "E5",
    "hex2": "60",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$60",
    "comment": "subtract block start high byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3CB",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy block length high byte to X",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3CC",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "+1 to allow for count=0 exit",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3CD",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "copy block length low byte to A",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3CE",
    "hex1": "F0",
    "hex2": "23",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A3F3",
    "comment": "branch if length low byte=0 block is (X-1)*256+Y bytes, do the Y bytes first",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3D0",
    "hex1": "A5",
    "hex2": "5A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$5A",
    "comment": "get block end low byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3D2",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3D3",
    "hex1": "E5",
    "hex2": "22",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$22",
    "comment": "subtract MOD(block length/$100) byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3D5",
    "hex1": "85",
    "hex2": "5A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$5A",
    "comment": "save corrected old block end low byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3D7",
    "hex1": "B0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A3DC",
    "comment": "branch if no underflow",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3D9",
    "hex1": "C6",
    "hex2": "5B",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$5B",
    "comment": "else decrement block end high byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3DB",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3DC",
    "hex1": "A5",
    "hex2": "58",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$58",
    "comment": "get destination end low byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3DE",
    "hex1": "E5",
    "hex2": "22",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$22",
    "comment": "subtract MOD(block length/$100) byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3E0",
    "hex1": "85",
    "hex2": "58",
    "hex3": null,
    "opcode": "STA",
    "argument": "$58",
    "comment": "save modified new block end low byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3E2",
    "hex1": "B0",
    "hex2": "08",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A3EC",
    "comment": "branch if no underflow",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3E4",
    "hex1": "C6",
    "hex2": "59",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$59",
    "comment": "else decrement block end high byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3E6",
    "hex1": "90",
    "hex2": "04",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A3EC",
    "comment": "branch always",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3E8",
    "hex1": "B1",
    "hex2": "5A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5A),Y",
    "comment": "get byte from source",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3EA",
    "hex1": "91",
    "hex2": "58",
    "hex3": null,
    "opcode": "STA",
    "argument": "($58),Y",
    "comment": "copy byte to destination",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3EC",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3ED",
    "hex1": "D0",
    "hex2": "F9",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A3E8",
    "comment": "loop until Y=0 now do Y=0 indexed byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3EF",
    "hex1": "B1",
    "hex2": "5A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5A),Y",
    "comment": "get byte from source",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3F1",
    "hex1": "91",
    "hex2": "58",
    "hex3": null,
    "opcode": "STA",
    "argument": "($58),Y",
    "comment": "save byte to destination",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3F3",
    "hex1": "C6",
    "hex2": "5B",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$5B",
    "comment": "decrement source pointer high byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3F5",
    "hex1": "C6",
    "hex2": "59",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$59",
    "comment": "decrement destination pointer high byte",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3F7",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement block count",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3F8",
    "hex1": "D0",
    "hex2": "F2",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A3EC",
    "comment": "loop until count = $0",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3FA",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "open_up_a_space_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of open_up_a_space_in_t)"
  },
  {
    "addr": "A3FB",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "*2",
    "desc": "check room on stack for A bytes if stack too deep do out of memory error",
    "parent": "this",
    "entry": true,
    "label": "check_room_on_stack_"
  },
  {
    "addr": "A3FC",
    "hex1": "69",
    "hex2": "3E",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$3E",
    "comment": "need at least $3E bytes free",
    "parent": "check_room_on_stack_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_room_on_stack_)"
  },
  {
    "addr": "A3FE",
    "hex1": "B0",
    "hex2": "35",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A435",
    "comment": "if overflow go do out of memory error then warm start",
    "parent": "check_room_on_stack_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_room_on_stack_)"
  },
  {
    "addr": "A400",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save result in temp byte",
    "parent": "check_room_on_stack_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_room_on_stack_)"
  },
  {
    "addr": "A402",
    "hex1": "BA",
    "hex2": "",
    "hex3": null,
    "opcode": "TSX",
    "argument": "",
    "comment": "copy stack",
    "parent": "check_room_on_stack_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_room_on_stack_)"
  },
  {
    "addr": "A403",
    "hex1": "E4",
    "hex2": "22",
    "hex3": null,
    "opcode": "CPX",
    "argument": "$22",
    "comment": "compare new limit with stack",
    "parent": "check_room_on_stack_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_room_on_stack_)"
  },
  {
    "addr": "A405",
    "hex1": "90",
    "hex2": "2E",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A435",
    "comment": "if stack < limit do out of memory error then warm start",
    "parent": "check_room_on_stack_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_room_on_stack_)"
  },
  {
    "addr": "A407",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "check_room_on_stack_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_room_on_stack_)"
  },
  {
    "addr": "A408",
    "hex1": "C4",
    "hex2": "34",
    "hex3": null,
    "opcode": "CPY",
    "argument": "$34",
    "comment": "compare with bottom of string space high byte",
    "desc": "check available memory, do out of memory error if no room",
    "parent": "this",
    "entry": true,
    "label": "check_available_memo"
  },
  {
    "addr": "A40A",
    "hex1": "90",
    "hex2": "28",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A434",
    "comment": "if less then exit (is ok)",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A40C",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A412",
    "comment": "skip next test if greater (tested <) high byte was =, now do low byte",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A40E",
    "hex1": "C5",
    "hex2": "33",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$33",
    "comment": "compare with bottom of string space low byte",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A410",
    "hex1": "90",
    "hex2": "22",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A434",
    "comment": "if less then exit (is ok) address is > string storage ptr (oops!)",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A412",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push address low byte",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A413",
    "hex1": "A2",
    "hex2": "09",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$09",
    "comment": "set index to save $57 to $60 inclusive",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A415",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "copy address high byte (to push on stack) save misc numeric work area",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A416",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push byte",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A417",
    "hex1": "B5",
    "hex2": "57",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$57,X",
    "comment": "get byte from $57 to $60",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A419",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement index",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A41A",
    "hex1": "10",
    "hex2": "FA",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$A416",
    "comment": "loop until all done",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A41C",
    "hex1": "20",
    "hex2": "26",
    "hex3": "B5",
    "opcode": "JSR",
    "argument": "$B526",
    "comment": "do garbage collection routine restore misc numeric work area",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A41F",
    "hex1": "A2",
    "hex2": "F7",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$F7",
    "comment": "set index to restore bytes",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A421",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop byte",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A422",
    "hex1": "95",
    "hex2": "61",
    "hex3": null,
    "opcode": "STA",
    "argument": "$61,X",
    "comment": "save byte to $57 to $60",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A424",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment index",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A425",
    "hex1": "30",
    "hex2": "FA",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$A421",
    "comment": "loop while -ve",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A427",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop address high byte",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A428",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy back to Y",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A429",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop address low byte",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A42A",
    "hex1": "C4",
    "hex2": "34",
    "hex3": null,
    "opcode": "CPY",
    "argument": "$34",
    "comment": "compare with bottom of string space high byte",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A42C",
    "hex1": "90",
    "hex2": "06",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A434",
    "comment": "if less then exit (is ok)",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A42E",
    "hex1": "D0",
    "hex2": "05",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A435",
    "comment": "if greater do out of memory error then warm start high byte was =, now do low byte",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A430",
    "hex1": "C5",
    "hex2": "33",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$33",
    "comment": "compare with bottom of string space low byte",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A432",
    "hex1": "B0",
    "hex2": "01",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A435",
    "comment": "if >= do out of memory error then warm start ok exit, carry clear",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A434",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "check_available_memo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_available_memo)"
  },
  {
    "addr": "A435",
    "hex1": "A2",
    "hex2": "10",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$10",
    "comment": "error code $10, out of memory error do error #X then warm start",
    "desc": "do out of memory error then warm start",
    "parent": "this",
    "entry": true,
    "label": "do_out_of_memory_err"
  },
  {
    "addr": "A437",
    "hex1": "6C",
    "hex2": "00",
    "hex3": "03",
    "opcode": "JMP",
    "argument": "($0300)",
    "comment": "do error message",
    "parent": "do_out_of_memory_err",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_out_of_memory_err)"
  },
  {
    "addr": "A43A",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy error number",
    "desc": "do error #X then warm start, the error message vector is initialised to point here",
    "parent": "this",
    "entry": true,
    "label": "do_error_x_then_warm"
  },
  {
    "addr": "A43B",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "*2",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A43C",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy to index",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A43D",
    "hex1": "BD",
    "hex2": "26",
    "hex3": "A3",
    "opcode": "LDA",
    "argument": "$A326,X",
    "comment": "get error message pointer low byte",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A440",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save it",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A442",
    "hex1": "BD",
    "hex2": "27",
    "hex3": "A3",
    "opcode": "LDA",
    "argument": "$A327,X",
    "comment": "get error message pointer high byte",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A445",
    "hex1": "85",
    "hex2": "23",
    "hex3": null,
    "opcode": "STA",
    "argument": "$23",
    "comment": "save it",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A447",
    "hex1": "20",
    "hex2": "CC",
    "hex3": "FF",
    "opcode": "JSR",
    "argument": "$FFCC",
    "comment": "close input and output channels",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A44A",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A44C",
    "hex1": "85",
    "hex2": "13",
    "hex3": null,
    "opcode": "STA",
    "argument": "$13",
    "comment": "clear current I/O channel, flag default",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A44E",
    "hex1": "20",
    "hex2": "D7",
    "hex3": "AA",
    "opcode": "JSR",
    "argument": "$AAD7",
    "comment": "print CR/LF",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A451",
    "hex1": "20",
    "hex2": "45",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB45",
    "comment": "print \"?\"",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A454",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A456",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get byte from message",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A458",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save status",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A459",
    "hex1": "29",
    "hex2": "7F",
    "hex3": null,
    "opcode": "AND",
    "argument": "#$7F",
    "comment": "mask 0xxx xxxx, clear b7",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A45B",
    "hex1": "20",
    "hex2": "47",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB47",
    "comment": "output character",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A45E",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A45F",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "restore status",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A460",
    "hex1": "10",
    "hex2": "F4",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$A456",
    "comment": "loop if character was not end marker",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A462",
    "hex1": "20",
    "hex2": "7A",
    "hex3": "A6",
    "opcode": "JSR",
    "argument": "$A67A",
    "comment": "flush BASIC stack and clear continue pointer",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A465",
    "hex1": "A9",
    "hex2": "69",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$69",
    "comment": "set \" ERROR\" pointer low byte",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A467",
    "hex1": "A0",
    "hex2": "A3",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$A3",
    "comment": "set \" ERROR\" pointer high byte",
    "parent": "do_error_x_then_warm",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_error_x_then_warm)"
  },
  {
    "addr": "A469",
    "hex1": "20",
    "hex2": "1E",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB1E",
    "comment": "print null terminated string",
    "desc": "print string and do warm start, break entry",
    "parent": "this",
    "entry": true,
    "label": "print_string_and_do_"
  },
  {
    "addr": "A46C",
    "hex1": "A4",
    "hex2": "3A",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$3A",
    "comment": "get current line number high byte",
    "parent": "print_string_and_do_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_and_do_)"
  },
  {
    "addr": "A46E",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment it",
    "parent": "print_string_and_do_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_and_do_)"
  },
  {
    "addr": "A46F",
    "hex1": "F0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A474",
    "comment": "branch if was in immediate mode",
    "parent": "print_string_and_do_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_and_do_)"
  },
  {
    "addr": "A471",
    "hex1": "20",
    "hex2": "C2",
    "hex3": "BD",
    "opcode": "JSR",
    "argument": "$BDC2",
    "comment": "do \" IN \" line number message",
    "parent": "print_string_and_do_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_and_do_)"
  },
  {
    "addr": "A474",
    "hex1": "A9",
    "hex2": "76",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$76",
    "comment": "set \"READY.\" pointer low byte",
    "desc": "do warm start",
    "parent": "this",
    "entry": true,
    "label": "do_warm_start"
  },
  {
    "addr": "A476",
    "hex1": "A0",
    "hex2": "A3",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$A3",
    "comment": "set \"READY.\" pointer high byte",
    "parent": "do_warm_start",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_warm_start)"
  },
  {
    "addr": "A478",
    "hex1": "20",
    "hex2": "1E",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB1E",
    "comment": "print null terminated string",
    "parent": "do_warm_start",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_warm_start)"
  },
  {
    "addr": "A47B",
    "hex1": "A9",
    "hex2": "80",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$80",
    "comment": "set for control messages only",
    "parent": "do_warm_start",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_warm_start)"
  },
  {
    "addr": "A47D",
    "hex1": "20",
    "hex2": "90",
    "hex3": "FF",
    "opcode": "JSR",
    "argument": "$FF90",
    "comment": "control kernal messages",
    "parent": "do_warm_start",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_warm_start)"
  },
  {
    "addr": "A480",
    "hex1": "6C",
    "hex2": "02",
    "hex3": "03",
    "opcode": "JMP",
    "argument": "($0302)",
    "comment": "do BASIC warm start",
    "parent": "do_warm_start",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_warm_start)"
  },
  {
    "addr": "A483",
    "hex1": "20",
    "hex2": "60",
    "hex3": "A5",
    "opcode": "JSR",
    "argument": "$A560",
    "comment": "call for BASIC input",
    "desc": "BASIC warm start, the warm start vector is initialised to point here",
    "parent": "this",
    "entry": true,
    "label": "basic_warm_start_the"
  },
  {
    "addr": "A486",
    "hex1": "86",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STX",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte",
    "parent": "basic_warm_start_the",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_warm_start_the)"
  },
  {
    "addr": "A488",
    "hex1": "84",
    "hex2": "7B",
    "hex3": null,
    "opcode": "STY",
    "argument": "$7B",
    "comment": "save BASIC execute pointer high byte",
    "parent": "basic_warm_start_the",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_warm_start_the)"
  },
  {
    "addr": "A48A",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "basic_warm_start_the",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_warm_start_the)"
  },
  {
    "addr": "A48D",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy byte to set flags",
    "parent": "basic_warm_start_the",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_warm_start_the)"
  },
  {
    "addr": "A48E",
    "hex1": "F0",
    "hex2": "F0",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A480",
    "comment": "loop if no input got to interpret the input line now ....",
    "parent": "basic_warm_start_the",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_warm_start_the)"
  },
  {
    "addr": "A490",
    "hex1": "A2",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$FF",
    "comment": "current line high byte to -1, indicates immediate mode",
    "parent": "basic_warm_start_the",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_warm_start_the)"
  },
  {
    "addr": "A492",
    "hex1": "86",
    "hex2": "3A",
    "hex3": null,
    "opcode": "STX",
    "argument": "$3A",
    "comment": "set current line number high byte",
    "parent": "basic_warm_start_the",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_warm_start_the)"
  },
  {
    "addr": "A494",
    "hex1": "90",
    "hex2": "06",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A49C",
    "comment": "if numeric character go handle new BASIC line no line number .. immediate mode",
    "parent": "basic_warm_start_the",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_warm_start_the)"
  },
  {
    "addr": "A496",
    "hex1": "20",
    "hex2": "79",
    "hex3": "A5",
    "opcode": "JSR",
    "argument": "$A579",
    "comment": "crunch keywords into BASIC tokens",
    "parent": "basic_warm_start_the",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_warm_start_the)"
  },
  {
    "addr": "A499",
    "hex1": "4C",
    "hex2": "E1",
    "hex3": "A7",
    "opcode": "JMP",
    "argument": "$A7E1",
    "comment": "go scan and interpret code",
    "parent": "basic_warm_start_the",
    "entry": false,
    "label": "n/a",
    "desc": "(part of basic_warm_start_the)"
  },
  {
    "addr": "A49C",
    "hex1": "20",
    "hex2": "6B",
    "hex3": "A9",
    "opcode": "JSR",
    "argument": "$A96B",
    "comment": "get fixed-point number into temporary integer",
    "desc": "handle new BASIC line",
    "parent": "this",
    "entry": true,
    "label": "handle_new_basic_lin"
  },
  {
    "addr": "A49F",
    "hex1": "20",
    "hex2": "79",
    "hex3": "A5",
    "opcode": "JSR",
    "argument": "$A579",
    "comment": "crunch keywords into BASIC tokens",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4A2",
    "hex1": "84",
    "hex2": "0B",
    "hex3": null,
    "opcode": "STY",
    "argument": "$0B",
    "comment": "save index pointer to end of crunched line",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4A4",
    "hex1": "20",
    "hex2": "13",
    "hex3": "A6",
    "opcode": "JSR",
    "argument": "$A613",
    "comment": "search BASIC for temporary integer line number",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4A7",
    "hex1": "90",
    "hex2": "44",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A4ED",
    "comment": "if not found skip the line delete line # already exists so delete it",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4A9",
    "hex1": "A0",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$01",
    "comment": "set index to next line pointer high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4AB",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get next line pointer high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4AD",
    "hex1": "85",
    "hex2": "23",
    "hex3": null,
    "opcode": "STA",
    "argument": "$23",
    "comment": "save it",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4AF",
    "hex1": "A5",
    "hex2": "2D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2D",
    "comment": "get start of variables low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4B1",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save it",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4B3",
    "hex1": "A5",
    "hex2": "60",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$60",
    "comment": "get found line pointer high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4B5",
    "hex1": "85",
    "hex2": "25",
    "hex3": null,
    "opcode": "STA",
    "argument": "$25",
    "comment": "save it",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4B7",
    "hex1": "A5",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$5F",
    "comment": "get found line pointer low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4B9",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4BA",
    "hex1": "F1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "SBC",
    "argument": "($5F),Y",
    "comment": "subtract next line pointer low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4BC",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4BD",
    "hex1": "65",
    "hex2": "2D",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$2D",
    "comment": "add start of variables low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4BF",
    "hex1": "85",
    "hex2": "2D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$2D",
    "comment": "set start of variables low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4C1",
    "hex1": "85",
    "hex2": "24",
    "hex3": null,
    "opcode": "STA",
    "argument": "$24",
    "comment": "save destination pointer low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4C3",
    "hex1": "A5",
    "hex2": "2E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2E",
    "comment": "get start of variables high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4C5",
    "hex1": "69",
    "hex2": "FF",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$FF",
    "comment": "-1 + carry",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4C7",
    "hex1": "85",
    "hex2": "2E",
    "hex3": null,
    "opcode": "STA",
    "argument": "$2E",
    "comment": "set start of variables high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4C9",
    "hex1": "E5",
    "hex2": "60",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$60",
    "comment": "subtract found line pointer high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4CB",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy to block count",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4CC",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4CD",
    "hex1": "A5",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$5F",
    "comment": "get found line pointer low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4CF",
    "hex1": "E5",
    "hex2": "2D",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$2D",
    "comment": "subtract start of variables low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4D1",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy to bytes in first block count",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4D2",
    "hex1": "B0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A4D7",
    "comment": "branch if no underflow",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4D4",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment block count, correct for = 0 loop exit",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4D5",
    "hex1": "C6",
    "hex2": "25",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$25",
    "comment": "decrement destination high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4D7",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4D8",
    "hex1": "65",
    "hex2": "22",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$22",
    "comment": "add source pointer low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4DA",
    "hex1": "90",
    "hex2": "03",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A4DF",
    "comment": "branch if no overflow",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4DC",
    "hex1": "C6",
    "hex2": "23",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$23",
    "comment": "else decrement source pointer high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4DE",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry close up memory to delete old line",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4DF",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get byte from source",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4E1",
    "hex1": "91",
    "hex2": "24",
    "hex3": null,
    "opcode": "STA",
    "argument": "($24),Y",
    "comment": "copy to destination",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4E3",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4E4",
    "hex1": "D0",
    "hex2": "F9",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A4DF",
    "comment": "while <> 0 do this block",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4E6",
    "hex1": "E6",
    "hex2": "23",
    "hex3": null,
    "opcode": "INC",
    "argument": "$23",
    "comment": "increment source pointer high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4E8",
    "hex1": "E6",
    "hex2": "25",
    "hex3": null,
    "opcode": "INC",
    "argument": "$25",
    "comment": "increment destination pointer high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4EA",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement block count",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4EB",
    "hex1": "D0",
    "hex2": "F2",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A4DF",
    "comment": "loop until all done got new line in buffer and no existing same #",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4ED",
    "hex1": "20",
    "hex2": "59",
    "hex3": "A6",
    "opcode": "JSR",
    "argument": "$A659",
    "comment": "reset execution to start, clear variables, flush stack and return",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4F0",
    "hex1": "20",
    "hex2": "33",
    "hex3": "A5",
    "opcode": "JSR",
    "argument": "$A533",
    "comment": "rebuild BASIC line chaining",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4F3",
    "hex1": "AD",
    "hex2": "00",
    "hex3": "02",
    "opcode": "LDA",
    "argument": "$0200",
    "comment": "get first byte from buffer",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4F6",
    "hex1": "F0",
    "hex2": "88",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A480",
    "comment": "if no line go do BASIC warm start else insert line into memory",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4F8",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4F9",
    "hex1": "A5",
    "hex2": "2D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2D",
    "comment": "get start of variables low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4FB",
    "hex1": "85",
    "hex2": "5A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$5A",
    "comment": "save as source end pointer low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4FD",
    "hex1": "65",
    "hex2": "0B",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$0B",
    "comment": "add index pointer to end of crunched line",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A4FF",
    "hex1": "85",
    "hex2": "58",
    "hex3": null,
    "opcode": "STA",
    "argument": "$58",
    "comment": "save as destination end pointer low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A501",
    "hex1": "A4",
    "hex2": "2E",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$2E",
    "comment": "get start of variables high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A503",
    "hex1": "84",
    "hex2": "5B",
    "hex3": null,
    "opcode": "STY",
    "argument": "$5B",
    "comment": "save as source end pointer high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A505",
    "hex1": "90",
    "hex2": "01",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A508",
    "comment": "branch if no carry to high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A507",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "else increment high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A508",
    "hex1": "84",
    "hex2": "59",
    "hex3": null,
    "opcode": "STY",
    "argument": "$59",
    "comment": "save as destination end pointer high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A50A",
    "hex1": "20",
    "hex2": "B8",
    "hex3": "A3",
    "opcode": "JSR",
    "argument": "$A3B8",
    "comment": "open up space in memory most of what remains to do is copy the crunched line into the space opened up in memory, however, before the crunched line comes the next line pointer and the line number. the line number is retrieved from the temporary integer and stored in memory, this overwrites the bottom two bytes on the stack. next the line is copied and the next line pointer is filled with whatever was in two bytes above the line number in the stack. this is ok because the line pointer gets fixed in the line chain re-build.",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A50D",
    "hex1": "A5",
    "hex2": "14",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$14",
    "comment": "get line number low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A50F",
    "hex1": "A4",
    "hex2": "15",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$15",
    "comment": "get line number high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A511",
    "hex1": "8D",
    "hex2": "FE",
    "hex3": "01",
    "opcode": "STA",
    "argument": "$01FE",
    "comment": "save line number low byte before crunched line",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A514",
    "hex1": "8C",
    "hex2": "FF",
    "hex3": "01",
    "opcode": "STY",
    "argument": "$01FF",
    "comment": "save line number high byte before crunched line",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A517",
    "hex1": "A5",
    "hex2": "31",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$31",
    "comment": "get end of arrays low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A519",
    "hex1": "A4",
    "hex2": "32",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$32",
    "comment": "get end of arrays high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A51B",
    "hex1": "85",
    "hex2": "2D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$2D",
    "comment": "set start of variables low byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A51D",
    "hex1": "84",
    "hex2": "2E",
    "hex3": null,
    "opcode": "STY",
    "argument": "$2E",
    "comment": "set start of variables high byte",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A51F",
    "hex1": "A4",
    "hex2": "0B",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$0B",
    "comment": "get index to end of crunched line",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A521",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "-1",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A522",
    "hex1": "B9",
    "hex2": "FC",
    "hex3": "01",
    "opcode": "LDA",
    "argument": "$01FC,Y",
    "comment": "get byte from crunched line",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A525",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "save byte to memory",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A527",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A528",
    "hex1": "10",
    "hex2": "F8",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$A522",
    "comment": "loop while more to do reset execution, clear variables, flush stack, rebuild BASIC chain and do warm start",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A52A",
    "hex1": "20",
    "hex2": "59",
    "hex3": "A6",
    "opcode": "JSR",
    "argument": "$A659",
    "comment": "reset execution to start, clear variables and flush stack",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A52D",
    "hex1": "20",
    "hex2": "33",
    "hex3": "A5",
    "opcode": "JSR",
    "argument": "$A533",
    "comment": "rebuild BASIC line chaining",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A530",
    "hex1": "4C",
    "hex2": "80",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A480",
    "comment": "go do BASIC warm start",
    "parent": "handle_new_basic_lin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of handle_new_basic_lin)"
  },
  {
    "addr": "A533",
    "hex1": "A5",
    "hex2": "2B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2B",
    "comment": "get start of memory low byte",
    "desc": "rebuild BASIC line chaining",
    "parent": "this",
    "entry": true,
    "label": "rebuild_basic_line_c"
  },
  {
    "addr": "A535",
    "hex1": "A4",
    "hex2": "2C",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$2C",
    "comment": "get start of memory high byte",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A537",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "set line start pointer low byte",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A539",
    "hex1": "84",
    "hex2": "23",
    "hex3": null,
    "opcode": "STY",
    "argument": "$23",
    "comment": "set line start pointer high byte",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A53B",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A53C",
    "hex1": "A0",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$01",
    "comment": "set index to pointer to next line high byte",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A53E",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get pointer to next line high byte",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A540",
    "hex1": "F0",
    "hex2": "1D",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A55F",
    "comment": "exit if null, [EOT]",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A542",
    "hex1": "A0",
    "hex2": "04",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$04",
    "comment": "point to first code byte of line there is always 1 byte + [EOL] as null entries are deleted",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A544",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "next code byte",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A545",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get byte",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A547",
    "hex1": "D0",
    "hex2": "FB",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A544",
    "comment": "loop if not [EOL]",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A549",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "point to byte past [EOL], start of next line",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A54A",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "copy it",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A54B",
    "hex1": "65",
    "hex2": "22",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$22",
    "comment": "add line start pointer low byte",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A54D",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy to X",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A54E",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index, point to this line's next line pointer",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A550",
    "hex1": "91",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "($22),Y",
    "comment": "set next line pointer low byte",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A552",
    "hex1": "A5",
    "hex2": "23",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$23",
    "comment": "get line start pointer high byte",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A554",
    "hex1": "69",
    "hex2": "00",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$00",
    "comment": "add any overflow",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A556",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index to high byte",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A557",
    "hex1": "91",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "($22),Y",
    "comment": "set next line pointer high byte",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A559",
    "hex1": "86",
    "hex2": "22",
    "hex3": null,
    "opcode": "STX",
    "argument": "$22",
    "comment": "set line start pointer low byte",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A55B",
    "hex1": "85",
    "hex2": "23",
    "hex3": null,
    "opcode": "STA",
    "argument": "$23",
    "comment": "set line start pointer high byte",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A55D",
    "hex1": "90",
    "hex2": "DD",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A53C",
    "comment": "go do next line, branch always",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A55F",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "call for BASIC input",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A560",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "set channel $00, keyboard",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A562",
    "hex1": "20",
    "hex2": "12",
    "hex3": "E1",
    "opcode": "JSR",
    "argument": "$E112",
    "comment": "input character from channel with error check",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A565",
    "hex1": "C9",
    "hex2": "0D",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$0D",
    "comment": "compare with [CR]",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A567",
    "hex1": "F0",
    "hex2": "0D",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A576",
    "comment": "if [CR] set XY to $200 - 1, print [CR] and exit character was not [CR]",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A569",
    "hex1": "9D",
    "hex2": "00",
    "hex3": "02",
    "opcode": "STA",
    "argument": "$0200,X",
    "comment": "save character to buffer",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A56C",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment buffer index",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A56D",
    "hex1": "E0",
    "hex2": "59",
    "hex3": null,
    "opcode": "CPX",
    "argument": "#$59",
    "comment": "compare with max+1",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A56F",
    "hex1": "90",
    "hex2": "F1",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A562",
    "comment": "branch if < max+1",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A571",
    "hex1": "A2",
    "hex2": "17",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$17",
    "comment": "error $17, string too long error",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A573",
    "hex1": "4C",
    "hex2": "37",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A437",
    "comment": "do error #X then warm start",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A576",
    "hex1": "4C",
    "hex2": "CA",
    "hex3": "AA",
    "opcode": "JMP",
    "argument": "$AACA",
    "comment": "set XY to $200 - 1 and print [CR]",
    "parent": "rebuild_basic_line_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of rebuild_basic_line_c)"
  },
  {
    "addr": "A579",
    "hex1": "6C",
    "hex2": "04",
    "hex3": "03",
    "opcode": "JMP",
    "argument": "($0304)",
    "comment": "do crunch BASIC tokens",
    "desc": "crunch BASIC tokens vector",
    "parent": "this",
    "entry": true,
    "label": "crunch_basic_tokens_"
  },
  {
    "addr": "A57C",
    "hex1": "A6",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$7A",
    "comment": "get BASIC execute pointer low byte",
    "desc": "crunch BASIC tokens, the crunch BASIC tokens vector is initialised to point here",
    "parent": "this",
    "entry": true,
    "label": "crunch_basic_tokens_"
  },
  {
    "addr": "A57E",
    "hex1": "A0",
    "hex2": "04",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$04",
    "comment": "set save index",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A580",
    "hex1": "84",
    "hex2": "0F",
    "hex3": null,
    "opcode": "STY",
    "argument": "$0F",
    "comment": "clear open quote/DATA flag",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A582",
    "hex1": "BD",
    "hex2": "00",
    "hex3": "02",
    "opcode": "LDA",
    "argument": "$0200,X",
    "comment": "get a byte from the input buffer",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A585",
    "hex1": "10",
    "hex2": "07",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$A58E",
    "comment": "if b7 clear go do crunching",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A587",
    "hex1": "C9",
    "hex2": "FF",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$FF",
    "comment": "compare with the token for PI, this toke is input directly from the keyboard as the PI character",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A589",
    "hex1": "F0",
    "hex2": "3E",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A5C9",
    "comment": "if PI save byte then continue crunching this is the bit of code that stops you being able to enter some keywords as just single shifted characters. If this dropped through you would be able to enter GOTO as just [SHIFT]G",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A58B",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment read index",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A58C",
    "hex1": "D0",
    "hex2": "F4",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A582",
    "comment": "loop if more to do, branch always",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A58E",
    "hex1": "C9",
    "hex2": "20",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$20",
    "comment": "compare with [SPACE]",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A590",
    "hex1": "F0",
    "hex2": "37",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A5C9",
    "comment": "if [SPACE] save byte then continue crunching",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A592",
    "hex1": "85",
    "hex2": "08",
    "hex3": null,
    "opcode": "STA",
    "argument": "$08",
    "comment": "save buffer byte as search character",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A594",
    "hex1": "C9",
    "hex2": "22",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$22",
    "comment": "compare with quote character",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A596",
    "hex1": "F0",
    "hex2": "56",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A5EE",
    "comment": "if quote go copy quoted string",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A598",
    "hex1": "24",
    "hex2": "0F",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$0F",
    "comment": "get open quote/DATA token flag",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A59A",
    "hex1": "70",
    "hex2": "2D",
    "hex3": null,
    "opcode": "BVS",
    "argument": "$A5C9",
    "comment": "branch if b6 of Oquote set, was DATA go save byte then continue crunching",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A59C",
    "hex1": "C9",
    "hex2": "3F",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$3F",
    "comment": "compare with \"?\" character",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A59E",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A5A4",
    "comment": "if not \"?\" continue crunching",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5A0",
    "hex1": "A9",
    "hex2": "99",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$99",
    "comment": "else the keyword token is $99, PRINT",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5A2",
    "hex1": "D0",
    "hex2": "25",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A5C9",
    "comment": "go save byte then continue crunching, branch always",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5A4",
    "hex1": "C9",
    "hex2": "30",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$30",
    "comment": "compare with \"0\"",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5A6",
    "hex1": "90",
    "hex2": "04",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A5AC",
    "comment": "branch if <, continue crunching",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5A8",
    "hex1": "C9",
    "hex2": "3C",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$3C",
    "comment": "compare with \"<\"",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5AA",
    "hex1": "90",
    "hex2": "1D",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A5C9",
    "comment": "if <, 0123456789:; go save byte then continue crunching gets here with next character not numeric, \";\" or \":\"",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5AC",
    "hex1": "84",
    "hex2": "71",
    "hex3": null,
    "opcode": "STY",
    "argument": "$71",
    "comment": "copy save index",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5AE",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear table pointer",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5B0",
    "hex1": "84",
    "hex2": "0B",
    "hex3": null,
    "opcode": "STY",
    "argument": "$0B",
    "comment": "clear word index",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5B2",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "adjust for pre increment loop",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5B3",
    "hex1": "86",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STX",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte, buffer index",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5B5",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "adjust for pre increment loop",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5B6",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "next table byte",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5B7",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "next buffer byte",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5B8",
    "hex1": "BD",
    "hex2": "00",
    "hex3": "02",
    "opcode": "LDA",
    "argument": "$0200,X",
    "comment": "get byte from input buffer",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5BB",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5BC",
    "hex1": "F9",
    "hex2": "9E",
    "hex3": "A0",
    "opcode": "SBC",
    "argument": "$A09E,Y",
    "comment": "subtract table byte",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5BF",
    "hex1": "F0",
    "hex2": "F5",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A5B6",
    "comment": "go compare next if match",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5C1",
    "hex1": "C9",
    "hex2": "80",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$80",
    "comment": "was it end marker match ?",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5C3",
    "hex1": "D0",
    "hex2": "30",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A5F5",
    "comment": "branch if not, not found keyword actually this works even if the input buffer byte is the end marker, i.e. a shifted character. As you can't enter any keywords as a single shifted character, see above, you can enter keywords in shorthand by shifting any character after the first. so RETURN can be entered as R[SHIFT]E, RE[SHIFT]T, RET[SHIFT]U or RETU[SHIFT]R. RETUR[SHIFT]N however will not work because the [SHIFT]N will match the RETURN end marker so the routine will try to match the next character. else found keyword",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5C5",
    "hex1": "05",
    "hex2": "0B",
    "hex3": null,
    "opcode": "ORA",
    "argument": "$0B",
    "comment": "OR with word index, +$80 in A makes token",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5C7",
    "hex1": "A4",
    "hex2": "71",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$71",
    "comment": "restore save index save byte then continue crunching",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5C9",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment buffer read index",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5CA",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment save index",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5CB",
    "hex1": "99",
    "hex2": "FB",
    "hex3": "01",
    "opcode": "STA",
    "argument": "$01FB,Y",
    "comment": "save byte to output",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5CE",
    "hex1": "B9",
    "hex2": "FB",
    "hex3": "01",
    "opcode": "LDA",
    "argument": "$01FB,Y",
    "comment": "get byte from output, set flags",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5D1",
    "hex1": "F0",
    "hex2": "36",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A609",
    "comment": "branch if was null [EOL] A holds the token here",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5D3",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5D4",
    "hex1": "E9",
    "hex2": "3A",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$3A",
    "comment": "subtract \":\"",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5D6",
    "hex1": "F0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A5DC",
    "comment": "branch if it was (is now $00) A now holds token-':'",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5D8",
    "hex1": "C9",
    "hex2": "49",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$49",
    "comment": "compare with the token for DATA-':'",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5DA",
    "hex1": "D0",
    "hex2": "02",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A5DE",
    "comment": "if not DATA go try REM token was : or DATA",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5DC",
    "hex1": "85",
    "hex2": "0F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$0F",
    "comment": "save the token-$3A",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5DE",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5DF",
    "hex1": "E9",
    "hex2": "55",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$55",
    "comment": "subtract the token for REM-':'",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5E1",
    "hex1": "D0",
    "hex2": "9F",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A582",
    "comment": "if wasn't REM crunch next bit of line",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5E3",
    "hex1": "85",
    "hex2": "08",
    "hex3": null,
    "opcode": "STA",
    "argument": "$08",
    "comment": "else was REM so set search for [EOL] loop for \"...\" etc.",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5E5",
    "hex1": "BD",
    "hex2": "00",
    "hex3": "02",
    "opcode": "LDA",
    "argument": "$0200,X",
    "comment": "get byte from input buffer",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5E8",
    "hex1": "F0",
    "hex2": "DF",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A5C9",
    "comment": "if null [EOL] save byte then continue crunching",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5EA",
    "hex1": "C5",
    "hex2": "08",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$08",
    "comment": "compare with stored character",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5EC",
    "hex1": "F0",
    "hex2": "DB",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A5C9",
    "comment": "if match save byte then continue crunching",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5EE",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment save index",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5EF",
    "hex1": "99",
    "hex2": "FB",
    "hex3": "01",
    "opcode": "STA",
    "argument": "$01FB,Y",
    "comment": "save byte to output",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5F2",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment buffer index",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5F3",
    "hex1": "D0",
    "hex2": "F0",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A5E5",
    "comment": "loop while <> 0, should never reach 0 not found keyword this go",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5F5",
    "hex1": "A6",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$7A",
    "comment": "restore BASIC execute pointer low byte",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5F7",
    "hex1": "E6",
    "hex2": "0B",
    "hex3": null,
    "opcode": "INC",
    "argument": "$0B",
    "comment": "increment word index (next word) now find end of this word in the table",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5F9",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment table index",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5FA",
    "hex1": "B9",
    "hex2": "9D",
    "hex3": "A0",
    "opcode": "LDA",
    "argument": "$A09D,Y",
    "comment": "get table byte",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5FD",
    "hex1": "10",
    "hex2": "FA",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$A5F9",
    "comment": "loop if not end of word yet",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A5FF",
    "hex1": "B9",
    "hex2": "9E",
    "hex3": "A0",
    "opcode": "LDA",
    "argument": "$A09E,Y",
    "comment": "get byte from keyword table",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A602",
    "hex1": "D0",
    "hex2": "B4",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A5B8",
    "comment": "go test next word if not zero byte, end of table reached end of table with no match",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A604",
    "hex1": "BD",
    "hex2": "00",
    "hex3": "02",
    "opcode": "LDA",
    "argument": "$0200,X",
    "comment": "restore byte from input buffer",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A607",
    "hex1": "10",
    "hex2": "BE",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$A5C7",
    "comment": "branch always, all unmatched bytes in the buffer are $00 to $7F, go save byte in output and continue crunching reached [EOL]",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A609",
    "hex1": "99",
    "hex2": "FD",
    "hex3": "01",
    "opcode": "STA",
    "argument": "$01FD,Y",
    "comment": "save [EOL]",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A60C",
    "hex1": "C6",
    "hex2": "7B",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$7B",
    "comment": "decrement BASIC execute pointer high byte",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A60E",
    "hex1": "A9",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$FF",
    "comment": "point to start of buffer-1",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A610",
    "hex1": "85",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7A",
    "comment": "set BASIC execute pointer low byte",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A612",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "crunch_basic_tokens_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of crunch_basic_tokens_)"
  },
  {
    "addr": "A613",
    "hex1": "A5",
    "hex2": "2B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2B",
    "comment": "get start of memory low byte",
    "desc": "search BASIC for temporary integer line number",
    "parent": "this",
    "entry": true,
    "label": "search_basic_for_tem"
  },
  {
    "addr": "A615",
    "hex1": "A6",
    "hex2": "2C",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$2C",
    "comment": "get start of memory high byte",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A617",
    "hex1": "A0",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$01",
    "comment": "set index to next line pointer high byte",
    "desc": "search Basic for temp integer line number from AX returns carry set if found",
    "parent": "this",
    "entry": true,
    "label": "search_basic_for_tem"
  },
  {
    "addr": "A619",
    "hex1": "85",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$5F",
    "comment": "save low byte as current",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A61B",
    "hex1": "86",
    "hex2": "60",
    "hex3": null,
    "opcode": "STX",
    "argument": "$60",
    "comment": "save high byte as current",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A61D",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get next line pointer high byte from address",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A61F",
    "hex1": "F0",
    "hex2": "1F",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A640",
    "comment": "pointer was zero so done, exit",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A621",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index ...",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A622",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "... to line # high byte",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A623",
    "hex1": "A5",
    "hex2": "15",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$15",
    "comment": "get temporary integer high byte",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A625",
    "hex1": "D1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "CMP",
    "argument": "($5F),Y",
    "comment": "compare with line # high byte",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A627",
    "hex1": "90",
    "hex2": "18",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A641",
    "comment": "exit if temp < this line, target line passed",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A629",
    "hex1": "F0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A62E",
    "comment": "go check low byte if =",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A62B",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "else decrement index",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A62C",
    "hex1": "D0",
    "hex2": "09",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A637",
    "comment": "branch always",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A62E",
    "hex1": "A5",
    "hex2": "14",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$14",
    "comment": "get temporary integer low byte",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A630",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index to line # low byte",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A631",
    "hex1": "D1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "CMP",
    "argument": "($5F),Y",
    "comment": "compare with line # low byte",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A633",
    "hex1": "90",
    "hex2": "0C",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A641",
    "comment": "exit if temp < this line, target line passed",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A635",
    "hex1": "F0",
    "hex2": "0A",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A641",
    "comment": "exit if temp = (found line#) not quite there yet",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A637",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index to next line pointer high byte",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A638",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get next line pointer high byte",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A63A",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy to X",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A63B",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index to next line pointer low byte",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A63C",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get next line pointer low byte",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A63E",
    "hex1": "B0",
    "hex2": "D7",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A617",
    "comment": "go search for line # in temporary integer from AX, carry always set",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A640",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear found flag",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A641",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "search_basic_for_tem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_basic_for_tem)"
  },
  {
    "addr": "A642",
    "hex1": "D0",
    "hex2": "FD",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A641",
    "comment": "exit if following byte to allow syntax error",
    "desc": "perform NEW",
    "parent": "this",
    "entry": true,
    "label": "perform_new"
  },
  {
    "addr": "A644",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A",
    "parent": "perform_new",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_new)"
  },
  {
    "addr": "A646",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "clear index",
    "parent": "perform_new",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_new)"
  },
  {
    "addr": "A647",
    "hex1": "91",
    "hex2": "2B",
    "hex3": null,
    "opcode": "STA",
    "argument": "($2B),Y",
    "comment": "clear pointer to next line low byte",
    "parent": "perform_new",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_new)"
  },
  {
    "addr": "A649",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "perform_new",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_new)"
  },
  {
    "addr": "A64A",
    "hex1": "91",
    "hex2": "2B",
    "hex3": null,
    "opcode": "STA",
    "argument": "($2B),Y",
    "comment": "clear pointer to next line high byte, erase program",
    "parent": "perform_new",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_new)"
  },
  {
    "addr": "A64C",
    "hex1": "A5",
    "hex2": "2B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2B",
    "comment": "get start of memory low byte",
    "parent": "perform_new",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_new)"
  },
  {
    "addr": "A64E",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "perform_new",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_new)"
  },
  {
    "addr": "A64F",
    "hex1": "69",
    "hex2": "02",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$02",
    "comment": "add null program length",
    "parent": "perform_new",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_new)"
  },
  {
    "addr": "A651",
    "hex1": "85",
    "hex2": "2D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$2D",
    "comment": "set start of variables low byte",
    "parent": "perform_new",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_new)"
  },
  {
    "addr": "A653",
    "hex1": "A5",
    "hex2": "2C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2C",
    "comment": "get start of memory high byte",
    "parent": "perform_new",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_new)"
  },
  {
    "addr": "A655",
    "hex1": "69",
    "hex2": "00",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$00",
    "comment": "add carry",
    "parent": "perform_new",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_new)"
  },
  {
    "addr": "A657",
    "hex1": "85",
    "hex2": "2E",
    "hex3": null,
    "opcode": "STA",
    "argument": "$2E",
    "comment": "set start of variables high byte",
    "parent": "perform_new",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_new)"
  },
  {
    "addr": "A659",
    "hex1": "20",
    "hex2": "8E",
    "hex3": "A6",
    "opcode": "JSR",
    "argument": "$A68E",
    "comment": "set BASIC execute pointer to start of memory - 1",
    "desc": "reset execute pointer and do CLR",
    "parent": "this",
    "entry": true,
    "label": "reset_execute_pointe"
  },
  {
    "addr": "A65C",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "set Zb for CLR entry",
    "parent": "reset_execute_pointe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of reset_execute_pointe)"
  },
  {
    "addr": "A65E",
    "hex1": "D0",
    "hex2": "2D",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A68D",
    "comment": "exit if following byte to allow syntax error",
    "desc": "perform CLR",
    "parent": "this",
    "entry": true,
    "label": "perform_clr"
  },
  {
    "addr": "A660",
    "hex1": "20",
    "hex2": "E7",
    "hex3": "FF",
    "opcode": "JSR",
    "argument": "$FFE7",
    "comment": "close all channels and files",
    "parent": "perform_clr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_clr)"
  },
  {
    "addr": "A663",
    "hex1": "A5",
    "hex2": "37",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$37",
    "comment": "get end of memory low byte",
    "parent": "perform_clr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_clr)"
  },
  {
    "addr": "A665",
    "hex1": "A4",
    "hex2": "38",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$38",
    "comment": "get end of memory high byte",
    "parent": "perform_clr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_clr)"
  },
  {
    "addr": "A667",
    "hex1": "85",
    "hex2": "33",
    "hex3": null,
    "opcode": "STA",
    "argument": "$33",
    "comment": "set bottom of string space low byte, clear strings",
    "parent": "perform_clr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_clr)"
  },
  {
    "addr": "A669",
    "hex1": "84",
    "hex2": "34",
    "hex3": null,
    "opcode": "STY",
    "argument": "$34",
    "comment": "set bottom of string space high byte",
    "parent": "perform_clr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_clr)"
  },
  {
    "addr": "A66B",
    "hex1": "A5",
    "hex2": "2D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2D",
    "comment": "get start of variables low byte",
    "parent": "perform_clr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_clr)"
  },
  {
    "addr": "A66D",
    "hex1": "A4",
    "hex2": "2E",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$2E",
    "comment": "get start of variables high byte",
    "parent": "perform_clr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_clr)"
  },
  {
    "addr": "A66F",
    "hex1": "85",
    "hex2": "2F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$2F",
    "comment": "set end of variables low byte, clear variables",
    "parent": "perform_clr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_clr)"
  },
  {
    "addr": "A671",
    "hex1": "84",
    "hex2": "30",
    "hex3": null,
    "opcode": "STY",
    "argument": "$30",
    "comment": "set end of variables high byte",
    "parent": "perform_clr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_clr)"
  },
  {
    "addr": "A673",
    "hex1": "85",
    "hex2": "31",
    "hex3": null,
    "opcode": "STA",
    "argument": "$31",
    "comment": "set end of arrays low byte, clear arrays",
    "parent": "perform_clr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_clr)"
  },
  {
    "addr": "A675",
    "hex1": "84",
    "hex2": "32",
    "hex3": null,
    "opcode": "STY",
    "argument": "$32",
    "comment": "set end of arrays high byte",
    "parent": "perform_clr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_clr)"
  },
  {
    "addr": "A677",
    "hex1": "20",
    "hex2": "1D",
    "hex3": "A8",
    "opcode": "JSR",
    "argument": "$A81D",
    "comment": "perform RESTORE",
    "desc": "do RESTORE and clear stack",
    "parent": "this",
    "entry": true,
    "label": "do_restore_and_clear"
  },
  {
    "addr": "A67A",
    "hex1": "A2",
    "hex2": "19",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$19",
    "comment": "get the descriptor stack start",
    "desc": "flush BASIC stack and clear the continue pointer",
    "parent": "this",
    "entry": true,
    "label": "flush_basic_stack_an"
  },
  {
    "addr": "A67C",
    "hex1": "86",
    "hex2": "16",
    "hex3": null,
    "opcode": "STX",
    "argument": "$16",
    "comment": "set the descriptor stack pointer",
    "parent": "flush_basic_stack_an",
    "entry": false,
    "label": "n/a",
    "desc": "(part of flush_basic_stack_an)"
  },
  {
    "addr": "A67E",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull the return address low byte",
    "parent": "flush_basic_stack_an",
    "entry": false,
    "label": "n/a",
    "desc": "(part of flush_basic_stack_an)"
  },
  {
    "addr": "A67F",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy it",
    "parent": "flush_basic_stack_an",
    "entry": false,
    "label": "n/a",
    "desc": "(part of flush_basic_stack_an)"
  },
  {
    "addr": "A680",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull the return address high byte",
    "parent": "flush_basic_stack_an",
    "entry": false,
    "label": "n/a",
    "desc": "(part of flush_basic_stack_an)"
  },
  {
    "addr": "A681",
    "hex1": "A2",
    "hex2": "FA",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$FA",
    "comment": "set the cleared stack pointer",
    "parent": "flush_basic_stack_an",
    "entry": false,
    "label": "n/a",
    "desc": "(part of flush_basic_stack_an)"
  },
  {
    "addr": "A683",
    "hex1": "9A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXS",
    "argument": "",
    "comment": "set the stack",
    "parent": "flush_basic_stack_an",
    "entry": false,
    "label": "n/a",
    "desc": "(part of flush_basic_stack_an)"
  },
  {
    "addr": "A684",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push the return address high byte",
    "parent": "flush_basic_stack_an",
    "entry": false,
    "label": "n/a",
    "desc": "(part of flush_basic_stack_an)"
  },
  {
    "addr": "A685",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "restore the return address low byte",
    "parent": "flush_basic_stack_an",
    "entry": false,
    "label": "n/a",
    "desc": "(part of flush_basic_stack_an)"
  },
  {
    "addr": "A686",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push the return address low byte",
    "parent": "flush_basic_stack_an",
    "entry": false,
    "label": "n/a",
    "desc": "(part of flush_basic_stack_an)"
  },
  {
    "addr": "A687",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A",
    "parent": "flush_basic_stack_an",
    "entry": false,
    "label": "n/a",
    "desc": "(part of flush_basic_stack_an)"
  },
  {
    "addr": "A689",
    "hex1": "85",
    "hex2": "3E",
    "hex3": null,
    "opcode": "STA",
    "argument": "$3E",
    "comment": "clear the continue pointer high byte",
    "parent": "flush_basic_stack_an",
    "entry": false,
    "label": "n/a",
    "desc": "(part of flush_basic_stack_an)"
  },
  {
    "addr": "A68B",
    "hex1": "85",
    "hex2": "10",
    "hex3": null,
    "opcode": "STA",
    "argument": "$10",
    "comment": "clear the subscript/FNX flag",
    "parent": "flush_basic_stack_an",
    "entry": false,
    "label": "n/a",
    "desc": "(part of flush_basic_stack_an)"
  },
  {
    "addr": "A68D",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "flush_basic_stack_an",
    "entry": false,
    "label": "n/a",
    "desc": "(part of flush_basic_stack_an)"
  },
  {
    "addr": "A68E",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "desc": "set BASIC execute pointer to start of memory - 1",
    "parent": "this",
    "entry": true,
    "label": "set_basic_execute_po"
  },
  {
    "addr": "A68F",
    "hex1": "A5",
    "hex2": "2B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2B",
    "comment": "get start of memory low byte",
    "parent": "set_basic_execute_po",
    "entry": false,
    "label": "n/a",
    "desc": "(part of set_basic_execute_po)"
  },
  {
    "addr": "A691",
    "hex1": "69",
    "hex2": "FF",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$FF",
    "comment": "add -1 low byte",
    "parent": "set_basic_execute_po",
    "entry": false,
    "label": "n/a",
    "desc": "(part of set_basic_execute_po)"
  },
  {
    "addr": "A693",
    "hex1": "85",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7A",
    "comment": "set BASIC execute pointer low byte",
    "parent": "set_basic_execute_po",
    "entry": false,
    "label": "n/a",
    "desc": "(part of set_basic_execute_po)"
  },
  {
    "addr": "A695",
    "hex1": "A5",
    "hex2": "2C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2C",
    "comment": "get start of memory high byte",
    "parent": "set_basic_execute_po",
    "entry": false,
    "label": "n/a",
    "desc": "(part of set_basic_execute_po)"
  },
  {
    "addr": "A697",
    "hex1": "69",
    "hex2": "FF",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$FF",
    "comment": "add -1 high byte",
    "parent": "set_basic_execute_po",
    "entry": false,
    "label": "n/a",
    "desc": "(part of set_basic_execute_po)"
  },
  {
    "addr": "A699",
    "hex1": "85",
    "hex2": "7B",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7B",
    "comment": "save BASIC execute pointer high byte",
    "parent": "set_basic_execute_po",
    "entry": false,
    "label": "n/a",
    "desc": "(part of set_basic_execute_po)"
  },
  {
    "addr": "A69B",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "set_basic_execute_po",
    "entry": false,
    "label": "n/a",
    "desc": "(part of set_basic_execute_po)"
  },
  {
    "addr": "A69C",
    "hex1": "90",
    "hex2": "06",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A6A4",
    "comment": "branch if next character not token (LIST n...)",
    "desc": "perform LIST",
    "parent": "this",
    "entry": true,
    "label": "perform_list"
  },
  {
    "addr": "A69E",
    "hex1": "F0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A6A4",
    "comment": "branch if next character [NULL] (LIST)",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6A0",
    "hex1": "C9",
    "hex2": "AB",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$AB",
    "comment": "compare with token for -",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6A2",
    "hex1": "D0",
    "hex2": "E9",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A68D",
    "comment": "exit if not - (LIST -m) LIST [[n][-m]] this bit sets the n , if present, as the start and end",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6A4",
    "hex1": "20",
    "hex2": "6B",
    "hex3": "A9",
    "opcode": "JSR",
    "argument": "$A96B",
    "comment": "get fixed-point number into temporary integer",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6A7",
    "hex1": "20",
    "hex2": "13",
    "hex3": "A6",
    "opcode": "JSR",
    "argument": "$A613",
    "comment": "search BASIC for temporary integer line number",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6AA",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6AD",
    "hex1": "F0",
    "hex2": "0C",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A6BB",
    "comment": "branch if no more chrs this bit checks the - is present",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6AF",
    "hex1": "C9",
    "hex2": "AB",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$AB",
    "comment": "compare with token for -",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6B1",
    "hex1": "D0",
    "hex2": "8E",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A641",
    "comment": "return if not \"-\" (will be SN error) LIST [n]-m the - was there so set m as the end value",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6B3",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6B6",
    "hex1": "20",
    "hex2": "6B",
    "hex3": "A9",
    "opcode": "JSR",
    "argument": "$A96B",
    "comment": "get fixed-point number into temporary integer",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6B9",
    "hex1": "D0",
    "hex2": "86",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A641",
    "comment": "exit if not ok",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6BB",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "dump return address low byte, exit via warm start",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6BC",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "dump return address high byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6BD",
    "hex1": "A5",
    "hex2": "14",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$14",
    "comment": "get temporary integer low byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6BF",
    "hex1": "05",
    "hex2": "15",
    "hex3": null,
    "opcode": "ORA",
    "argument": "$15",
    "comment": "OR temporary integer high byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6C1",
    "hex1": "D0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A6C9",
    "comment": "branch if start set",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6C3",
    "hex1": "A9",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$FF",
    "comment": "set for -1",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6C5",
    "hex1": "85",
    "hex2": "14",
    "hex3": null,
    "opcode": "STA",
    "argument": "$14",
    "comment": "set temporary integer low byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6C7",
    "hex1": "85",
    "hex2": "15",
    "hex3": null,
    "opcode": "STA",
    "argument": "$15",
    "comment": "set temporary integer high byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6C9",
    "hex1": "A0",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$01",
    "comment": "set index for line",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6CB",
    "hex1": "84",
    "hex2": "0F",
    "hex3": null,
    "opcode": "STY",
    "argument": "$0F",
    "comment": "clear open quote flag",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6CD",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get next line pointer high byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6CF",
    "hex1": "F0",
    "hex2": "43",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A714",
    "comment": "if null all done so exit",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6D1",
    "hex1": "20",
    "hex2": "2C",
    "hex3": "A8",
    "opcode": "JSR",
    "argument": "$A82C",
    "comment": "do CRTL-C check vector",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6D4",
    "hex1": "20",
    "hex2": "D7",
    "hex3": "AA",
    "opcode": "JSR",
    "argument": "$AAD7",
    "comment": "print CR/LF",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6D7",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index for line",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6D8",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get line number low byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6DA",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy to X",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6DB",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6DC",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get line number high byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6DE",
    "hex1": "C5",
    "hex2": "15",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$15",
    "comment": "compare with temporary integer high byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6E0",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A6E6",
    "comment": "branch if no high byte match",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6E2",
    "hex1": "E4",
    "hex2": "14",
    "hex3": null,
    "opcode": "CPX",
    "argument": "$14",
    "comment": "compare with temporary integer low byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6E4",
    "hex1": "F0",
    "hex2": "02",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A6E8",
    "comment": "branch if = last line to do, < will pass next branch else",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6E6",
    "hex1": "B0",
    "hex2": "2C",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A714",
    "comment": "if greater all done so exit",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6E8",
    "hex1": "84",
    "hex2": "49",
    "hex3": null,
    "opcode": "STY",
    "argument": "$49",
    "comment": "save index for line",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6EA",
    "hex1": "20",
    "hex2": "CD",
    "hex3": "BD",
    "opcode": "JSR",
    "argument": "$BDCD",
    "comment": "print XA as unsigned integer",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6ED",
    "hex1": "A9",
    "hex2": "20",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$20",
    "comment": "space is the next character",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6EF",
    "hex1": "A4",
    "hex2": "49",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$49",
    "comment": "get index for line",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6F1",
    "hex1": "29",
    "hex2": "7F",
    "hex3": null,
    "opcode": "AND",
    "argument": "#$7F",
    "comment": "mask top out bit of character",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6F3",
    "hex1": "20",
    "hex2": "47",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB47",
    "comment": "go print the character",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6F6",
    "hex1": "C9",
    "hex2": "22",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$22",
    "comment": "was it \" character",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6F8",
    "hex1": "D0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A700",
    "comment": "if not skip the quote handle we are either entering or leaving a pair of quotes",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6FA",
    "hex1": "A5",
    "hex2": "0F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$0F",
    "comment": "get open quote flag",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6FC",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "toggle it",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A6FE",
    "hex1": "85",
    "hex2": "0F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$0F",
    "comment": "save it back",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A700",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A701",
    "hex1": "F0",
    "hex2": "11",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A714",
    "comment": "line too long so just bail out and do a warm start",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A703",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get next byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A705",
    "hex1": "D0",
    "hex2": "10",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A717",
    "comment": "if not [EOL] (go print character) was [EOL]",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A707",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "else clear index",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A708",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get next line pointer low byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A70A",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy to X",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A70B",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A70C",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get next line pointer high byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A70E",
    "hex1": "86",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STX",
    "argument": "$5F",
    "comment": "set pointer to line low byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A710",
    "hex1": "85",
    "hex2": "60",
    "hex3": null,
    "opcode": "STA",
    "argument": "$60",
    "comment": "set pointer to line high byte",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A712",
    "hex1": "D0",
    "hex2": "B5",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A6C9",
    "comment": "go do next line if not [EOT] else ...",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A714",
    "hex1": "4C",
    "hex2": "86",
    "hex3": "E3",
    "opcode": "JMP",
    "argument": "$E386",
    "comment": "do warm start",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A717",
    "hex1": "6C",
    "hex2": "06",
    "hex3": "03",
    "opcode": "JMP",
    "argument": "($0306)",
    "comment": "do uncrunch BASIC tokens",
    "parent": "perform_list",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_list)"
  },
  {
    "addr": "A71A",
    "hex1": "10",
    "hex2": "D7",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$A6F3",
    "comment": "just go print it if not token byte else was token byte so uncrunch it",
    "desc": "uncrunch BASIC tokens, the uncrunch BASIC tokens vector is initialised to point here",
    "parent": "this",
    "entry": true,
    "label": "uncrunch_basic_token"
  },
  {
    "addr": "A71C",
    "hex1": "C9",
    "hex2": "FF",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$FF",
    "comment": "compare with the token for PI. in this case the token is the same as the PI character so it just needs printing",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A71E",
    "hex1": "F0",
    "hex2": "D3",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A6F3",
    "comment": "just print it if so",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A720",
    "hex1": "24",
    "hex2": "0F",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$0F",
    "comment": "test the open quote flag",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A722",
    "hex1": "30",
    "hex2": "CF",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$A6F3",
    "comment": "just go print character if open quote set",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A724",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "else set carry for subtract",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A725",
    "hex1": "E9",
    "hex2": "7F",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$7F",
    "comment": "reduce token range to 1 to whatever",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A727",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy token # to X",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A728",
    "hex1": "84",
    "hex2": "49",
    "hex3": null,
    "opcode": "STY",
    "argument": "$49",
    "comment": "save index for line",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A72A",
    "hex1": "A0",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$FF",
    "comment": "start from -1, adjust for pre increment",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A72C",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement token #",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A72D",
    "hex1": "F0",
    "hex2": "08",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A737",
    "comment": "if now found go do printing",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A72F",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "else increment index",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A730",
    "hex1": "B9",
    "hex2": "9E",
    "hex3": "A0",
    "opcode": "LDA",
    "argument": "$A09E,Y",
    "comment": "get byte from keyword table",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A733",
    "hex1": "10",
    "hex2": "FA",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$A72F",
    "comment": "loop until keyword end marker",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A735",
    "hex1": "30",
    "hex2": "F5",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$A72C",
    "comment": "go test if this is required keyword, branch always found keyword, it's the next one",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A737",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment keyword table index",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A738",
    "hex1": "B9",
    "hex2": "9E",
    "hex3": "A0",
    "opcode": "LDA",
    "argument": "$A09E,Y",
    "comment": "get byte from table",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A73B",
    "hex1": "30",
    "hex2": "B2",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$A6EF",
    "comment": "go restore index, mask byte and print if byte was end marker",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A73D",
    "hex1": "20",
    "hex2": "47",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB47",
    "comment": "else go print the character",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A740",
    "hex1": "D0",
    "hex2": "F5",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A737",
    "comment": "go get next character, branch always",
    "parent": "uncrunch_basic_token",
    "entry": false,
    "label": "n/a",
    "desc": "(part of uncrunch_basic_token)"
  },
  {
    "addr": "A742",
    "hex1": "A9",
    "hex2": "80",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$80",
    "comment": "set FNX",
    "desc": "perform FOR",
    "parent": "this",
    "entry": true,
    "label": "perform_for"
  },
  {
    "addr": "A744",
    "hex1": "85",
    "hex2": "10",
    "hex3": null,
    "opcode": "STA",
    "argument": "$10",
    "comment": "set subscript/FNX flag",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A746",
    "hex1": "20",
    "hex2": "A5",
    "hex3": "A9",
    "opcode": "JSR",
    "argument": "$A9A5",
    "comment": "perform LET",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A749",
    "hex1": "20",
    "hex2": "8A",
    "hex3": "A3",
    "opcode": "JSR",
    "argument": "$A38A",
    "comment": "search the stack for FOR or GOSUB activity",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A74C",
    "hex1": "D0",
    "hex2": "05",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A753",
    "comment": "branch if FOR, this variable, not found FOR, this variable, was found so first we dump the old one",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A74E",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy index",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A74F",
    "hex1": "69",
    "hex2": "0F",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$0F",
    "comment": "add FOR structure size-2",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A751",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy to index",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A752",
    "hex1": "9A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXS",
    "argument": "",
    "comment": "set stack (dump FOR structure (-2 bytes))",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A753",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull return address",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A754",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull return address",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A755",
    "hex1": "A9",
    "hex2": "09",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$09",
    "comment": "we need 18d bytes !",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A757",
    "hex1": "20",
    "hex2": "FB",
    "hex3": "A3",
    "opcode": "JSR",
    "argument": "$A3FB",
    "comment": "check room on stack for 2*A bytes",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A75A",
    "hex1": "20",
    "hex2": "06",
    "hex3": "A9",
    "opcode": "JSR",
    "argument": "$A906",
    "comment": "scan for next BASIC statement ([:] or [EOL])",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A75D",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A75E",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "copy index to A",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A75F",
    "hex1": "65",
    "hex2": "7A",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$7A",
    "comment": "add BASIC execute pointer low byte",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A761",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push onto stack",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A762",
    "hex1": "A5",
    "hex2": "7B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$7B",
    "comment": "get BASIC execute pointer high byte",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A764",
    "hex1": "69",
    "hex2": "00",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$00",
    "comment": "add carry",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A766",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push onto stack",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A767",
    "hex1": "A5",
    "hex2": "3A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$3A",
    "comment": "get current line number high byte",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A769",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push onto stack",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A76A",
    "hex1": "A5",
    "hex2": "39",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$39",
    "comment": "get current line number low byte",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A76C",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push onto stack",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A76D",
    "hex1": "A9",
    "hex2": "A4",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$A4",
    "comment": "set \"TO\" token",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A76F",
    "hex1": "20",
    "hex2": "FF",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFF",
    "comment": "scan for CHR$(A), else do syntax error then warm start",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A772",
    "hex1": "20",
    "hex2": "8D",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8D",
    "comment": "check if source is numeric, else do type mismatch",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A775",
    "hex1": "20",
    "hex2": "8A",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8A",
    "comment": "evaluate expression and check is numeric, else do type mismatch",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A778",
    "hex1": "A5",
    "hex2": "66",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$66",
    "comment": "get FAC1 sign (b7)",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A77A",
    "hex1": "09",
    "hex2": "7F",
    "hex3": null,
    "opcode": "ORA",
    "argument": "#$7F",
    "comment": "set all non sign bits",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A77C",
    "hex1": "25",
    "hex2": "62",
    "hex3": null,
    "opcode": "AND",
    "argument": "$62",
    "comment": "and FAC1 mantissa 1",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A77E",
    "hex1": "85",
    "hex2": "62",
    "hex3": null,
    "opcode": "STA",
    "argument": "$62",
    "comment": "save FAC1 mantissa 1",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A780",
    "hex1": "A9",
    "hex2": "8B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$8B",
    "comment": "set return address low byte",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A782",
    "hex1": "A0",
    "hex2": "A7",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$A7",
    "comment": "set return address high byte",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A784",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save return address low byte",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A786",
    "hex1": "84",
    "hex2": "23",
    "hex3": null,
    "opcode": "STY",
    "argument": "$23",
    "comment": "save return address high byte",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A788",
    "hex1": "4C",
    "hex2": "43",
    "hex3": "AE",
    "opcode": "JMP",
    "argument": "$AE43",
    "comment": "round FAC1 and put on stack, returns to next instruction",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A78B",
    "hex1": "A9",
    "hex2": "BC",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$BC",
    "comment": "set 1 pointer low address, default step size",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A78D",
    "hex1": "A0",
    "hex2": "B9",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$B9",
    "comment": "set 1 pointer high address",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A78F",
    "hex1": "20",
    "hex2": "A2",
    "hex3": "BB",
    "opcode": "JSR",
    "argument": "$BBA2",
    "comment": "unpack memory (AY) into FAC1",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A792",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A795",
    "hex1": "C9",
    "hex2": "A9",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$A9",
    "comment": "compare with STEP token",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A797",
    "hex1": "D0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A79F",
    "comment": "if not \"STEP\" continue was step so ....",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A799",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A79C",
    "hex1": "20",
    "hex2": "8A",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8A",
    "comment": "evaluate expression and check is numeric, else do type mismatch",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A79F",
    "hex1": "20",
    "hex2": "2B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC2B",
    "comment": "get FAC1 sign, return A = $FF -ve, A = $01 +ve",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A7A2",
    "hex1": "20",
    "hex2": "38",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AE38",
    "comment": "push sign, round FAC1 and put on stack",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A7A5",
    "hex1": "A5",
    "hex2": "4A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$4A",
    "comment": "get FOR/NEXT variable pointer high byte",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A7A7",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push on stack",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A7A8",
    "hex1": "A5",
    "hex2": "49",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$49",
    "comment": "get FOR/NEXT variable pointer low byte",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A7AA",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push on stack",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A7AB",
    "hex1": "A9",
    "hex2": "81",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$81",
    "comment": "get FOR token",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A7AD",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push on stack",
    "parent": "perform_for",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_for)"
  },
  {
    "addr": "A7AE",
    "hex1": "20",
    "hex2": "2C",
    "hex3": "A8",
    "opcode": "JSR",
    "argument": "$A82C",
    "comment": "do CRTL-C check vector",
    "desc": "interpreter inner loop",
    "parent": "this",
    "entry": true,
    "label": "interpreter_inner_lo"
  },
  {
    "addr": "A7B1",
    "hex1": "A5",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$7A",
    "comment": "get the BASIC execute pointer low byte",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7B3",
    "hex1": "A4",
    "hex2": "7B",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$7B",
    "comment": "get the BASIC execute pointer high byte",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7B5",
    "hex1": "C0",
    "hex2": "02",
    "hex3": null,
    "opcode": "CPY",
    "argument": "#$02",
    "comment": "compare the high byte with $02xx",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7B7",
    "hex1": "EA",
    "hex2": "",
    "hex3": null,
    "opcode": "NOP",
    "argument": "",
    "comment": "unused byte",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7B8",
    "hex1": "F0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A7BE",
    "comment": "if immediate mode skip the continue pointer save",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7BA",
    "hex1": "85",
    "hex2": "3D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$3D",
    "comment": "save the continue pointer low byte",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7BC",
    "hex1": "84",
    "hex2": "3E",
    "hex3": null,
    "opcode": "STY",
    "argument": "$3E",
    "comment": "save the continue pointer high byte",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7BE",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear the index",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7C0",
    "hex1": "B1",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($7A),Y",
    "comment": "get a BASIC byte",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7C2",
    "hex1": "D0",
    "hex2": "43",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A807",
    "comment": "if not [EOL] go test for \":\"",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7C4",
    "hex1": "A0",
    "hex2": "02",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$02",
    "comment": "else set the index",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7C6",
    "hex1": "B1",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($7A),Y",
    "comment": "get next line pointer high byte",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7C8",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for no \"BREAK\" message",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7C9",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A7CE",
    "comment": "branch if not end of program",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7CB",
    "hex1": "4C",
    "hex2": "4B",
    "hex3": "A8",
    "opcode": "JMP",
    "argument": "$A84B",
    "comment": "else go to immediate mode,was immediate or [EOT] marker",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7CE",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7CF",
    "hex1": "B1",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($7A),Y",
    "comment": "get line number low byte",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7D1",
    "hex1": "85",
    "hex2": "39",
    "hex3": null,
    "opcode": "STA",
    "argument": "$39",
    "comment": "save current line number low byte",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7D3",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7D4",
    "hex1": "B1",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($7A),Y",
    "comment": "get line # high byte",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7D6",
    "hex1": "85",
    "hex2": "3A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$3A",
    "comment": "save current line number high byte",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7D8",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "A now = 4",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7D9",
    "hex1": "65",
    "hex2": "7A",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$7A",
    "comment": "add BASIC execute pointer low byte, now points to code",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7DB",
    "hex1": "85",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7DD",
    "hex1": "90",
    "hex2": "02",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A7E1",
    "comment": "branch if no overflow",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7DF",
    "hex1": "E6",
    "hex2": "7B",
    "hex3": null,
    "opcode": "INC",
    "argument": "$7B",
    "comment": "else increment BASIC execute pointer high byte",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7E1",
    "hex1": "6C",
    "hex2": "08",
    "hex3": "03",
    "opcode": "JMP",
    "argument": "($0308)",
    "comment": "do start new BASIC code",
    "parent": "interpreter_inner_lo",
    "entry": false,
    "label": "n/a",
    "desc": "(part of interpreter_inner_lo)"
  },
  {
    "addr": "A7E4",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "desc": "start new BASIC code, the start new BASIC code vector is initialised to point here",
    "parent": "this",
    "entry": true,
    "label": "start_new_basic_code"
  },
  {
    "addr": "A7E7",
    "hex1": "20",
    "hex2": "ED",
    "hex3": "A7",
    "opcode": "JSR",
    "argument": "$A7ED",
    "comment": "go interpret BASIC code from BASIC execute pointer",
    "parent": "start_new_basic_code",
    "entry": false,
    "label": "n/a",
    "desc": "(part of start_new_basic_code)"
  },
  {
    "addr": "A7EA",
    "hex1": "4C",
    "hex2": "AE",
    "hex3": "A7",
    "opcode": "JMP",
    "argument": "$A7AE",
    "comment": "loop",
    "parent": "start_new_basic_code",
    "entry": false,
    "label": "n/a",
    "desc": "(part of start_new_basic_code)"
  },
  {
    "addr": "A7ED",
    "hex1": "F0",
    "hex2": "3C",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A82B",
    "comment": "if the first byte is null just exit",
    "desc": "go interpret BASIC code from BASIC execute pointer",
    "parent": "this",
    "entry": true,
    "label": "go_interpret_basic_c"
  },
  {
    "addr": "A7EF",
    "hex1": "E9",
    "hex2": "80",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$80",
    "comment": "normalise the token",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A7F1",
    "hex1": "90",
    "hex2": "11",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A804",
    "comment": "if wasn't token go do LET",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A7F3",
    "hex1": "C9",
    "hex2": "23",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$23",
    "comment": "compare with token for TAB(-$80",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A7F5",
    "hex1": "B0",
    "hex2": "17",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A80E",
    "comment": "branch if >= TAB(",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A7F7",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "*2 bytes per vector",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A7F8",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy to index",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A7F9",
    "hex1": "B9",
    "hex2": "0D",
    "hex3": "A0",
    "opcode": "LDA",
    "argument": "$A00D,Y",
    "comment": "get vector high byte",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A7FC",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push on stack",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A7FD",
    "hex1": "B9",
    "hex2": "0C",
    "hex3": "A0",
    "opcode": "LDA",
    "argument": "$A00C,Y",
    "comment": "get vector low byte",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A800",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push on stack",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A801",
    "hex1": "4C",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JMP",
    "argument": "$0073",
    "comment": "increment and scan memory and return. the return in this case calls the command code, the return from that will eventually return to the interpreter inner loop above",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A804",
    "hex1": "4C",
    "hex2": "A5",
    "hex3": "A9",
    "opcode": "JMP",
    "argument": "$A9A5",
    "comment": "perform LET was not [EOL]",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A807",
    "hex1": "C9",
    "hex2": "3A",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$3A",
    "comment": "comapre with \":\"",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A809",
    "hex1": "F0",
    "hex2": "D6",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A7E1",
    "comment": "if \":\" go execute new code else ...",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A80B",
    "hex1": "4C",
    "hex2": "08",
    "hex3": "AF",
    "opcode": "JMP",
    "argument": "$AF08",
    "comment": "do syntax error then warm start token was >= TAB(",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A80E",
    "hex1": "C9",
    "hex2": "4B",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$4B",
    "comment": "compare with the token for GO",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A810",
    "hex1": "D0",
    "hex2": "F9",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A80B",
    "comment": "if not \"GO\" do syntax error then warm start else was \"GO\"",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A812",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A815",
    "hex1": "A9",
    "hex2": "A4",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$A4",
    "comment": "set \"TO\" token",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A817",
    "hex1": "20",
    "hex2": "FF",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFF",
    "comment": "scan for CHR$(A), else do syntax error then warm start",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A81A",
    "hex1": "4C",
    "hex2": "A0",
    "hex3": "A8",
    "opcode": "JMP",
    "argument": "$A8A0",
    "comment": "perform GOTO",
    "parent": "go_interpret_basic_c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of go_interpret_basic_c)"
  },
  {
    "addr": "A81D",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "desc": "perform RESTORE",
    "parent": "this",
    "entry": true,
    "label": "perform_restore"
  },
  {
    "addr": "A81E",
    "hex1": "A5",
    "hex2": "2B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2B",
    "comment": "get start of memory low byte",
    "parent": "perform_restore",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_restore)"
  },
  {
    "addr": "A820",
    "hex1": "E9",
    "hex2": "01",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$01",
    "comment": "-1",
    "parent": "perform_restore",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_restore)"
  },
  {
    "addr": "A822",
    "hex1": "A4",
    "hex2": "2C",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$2C",
    "comment": "get start of memory high byte",
    "parent": "perform_restore",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_restore)"
  },
  {
    "addr": "A824",
    "hex1": "B0",
    "hex2": "01",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A827",
    "comment": "branch if no rollunder",
    "parent": "perform_restore",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_restore)"
  },
  {
    "addr": "A826",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "else decrement high byte",
    "parent": "perform_restore",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_restore)"
  },
  {
    "addr": "A827",
    "hex1": "85",
    "hex2": "41",
    "hex3": null,
    "opcode": "STA",
    "argument": "$41",
    "comment": "set DATA pointer low byte",
    "parent": "perform_restore",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_restore)"
  },
  {
    "addr": "A829",
    "hex1": "84",
    "hex2": "42",
    "hex3": null,
    "opcode": "STY",
    "argument": "$42",
    "comment": "set DATA pointer high byte",
    "parent": "perform_restore",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_restore)"
  },
  {
    "addr": "A82B",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "perform_restore",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_restore)"
  },
  {
    "addr": "A82C",
    "hex1": "20",
    "hex2": "E1",
    "hex3": "FF",
    "opcode": "JSR",
    "argument": "$FFE1",
    "comment": "scan stop key",
    "desc": "do CRTL-C check vector",
    "parent": "this",
    "entry": true,
    "label": "do_crtlc_check_vecto"
  },
  {
    "addr": "A82F",
    "hex1": "B0",
    "hex2": "01",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A832",
    "comment": "if carry set do BREAK instead of just END",
    "desc": "perform STOP",
    "parent": "this",
    "entry": true,
    "label": "perform_stop"
  },
  {
    "addr": "A831",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry",
    "desc": "perform END",
    "parent": "this",
    "entry": true,
    "label": "perform_end"
  },
  {
    "addr": "A832",
    "hex1": "D0",
    "hex2": "3C",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A870",
    "comment": "return if wasn't CTRL-C",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A834",
    "hex1": "A5",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$7A",
    "comment": "get BASIC execute pointer low byte",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A836",
    "hex1": "A4",
    "hex2": "7B",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$7B",
    "comment": "get BASIC execute pointer high byte",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A838",
    "hex1": "A6",
    "hex2": "3A",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$3A",
    "comment": "get current line number high byte",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A83A",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment it",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A83B",
    "hex1": "F0",
    "hex2": "0C",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A849",
    "comment": "branch if was immediate mode",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A83D",
    "hex1": "85",
    "hex2": "3D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$3D",
    "comment": "save continue pointer low byte",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A83F",
    "hex1": "84",
    "hex2": "3E",
    "hex3": null,
    "opcode": "STY",
    "argument": "$3E",
    "comment": "save continue pointer high byte",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A841",
    "hex1": "A5",
    "hex2": "39",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$39",
    "comment": "get current line number low byte",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A843",
    "hex1": "A4",
    "hex2": "3A",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$3A",
    "comment": "get current line number high byte",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A845",
    "hex1": "85",
    "hex2": "3B",
    "hex3": null,
    "opcode": "STA",
    "argument": "$3B",
    "comment": "save break line number low byte",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A847",
    "hex1": "84",
    "hex2": "3C",
    "hex3": null,
    "opcode": "STY",
    "argument": "$3C",
    "comment": "save break line number high byte",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A849",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "dump return address low byte",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A84A",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "dump return address high byte",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A84B",
    "hex1": "A9",
    "hex2": "81",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$81",
    "comment": "set [CR][LF]\"BREAK\" pointer low byte",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A84D",
    "hex1": "A0",
    "hex2": "A3",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$A3",
    "comment": "set [CR][LF]\"BREAK\" pointer high byte",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A84F",
    "hex1": "90",
    "hex2": "03",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A854",
    "comment": "if was program end skip the print string",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A851",
    "hex1": "4C",
    "hex2": "69",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A469",
    "comment": "print string and do warm start",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A854",
    "hex1": "4C",
    "hex2": "86",
    "hex3": "E3",
    "opcode": "JMP",
    "argument": "$E386",
    "comment": "do warm start",
    "parent": "perform_end",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_end)"
  },
  {
    "addr": "A857",
    "hex1": "D0",
    "hex2": "17",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A870",
    "comment": "exit if following byte to allow syntax error",
    "desc": "perform CONT",
    "parent": "this",
    "entry": true,
    "label": "perform_cont"
  },
  {
    "addr": "A859",
    "hex1": "A2",
    "hex2": "1A",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$1A",
    "comment": "error code $1A, can't continue error",
    "parent": "perform_cont",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cont)"
  },
  {
    "addr": "A85B",
    "hex1": "A4",
    "hex2": "3E",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$3E",
    "comment": "get continue pointer high byte",
    "parent": "perform_cont",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cont)"
  },
  {
    "addr": "A85D",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A862",
    "comment": "go do continue if we can",
    "parent": "perform_cont",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cont)"
  },
  {
    "addr": "A85F",
    "hex1": "4C",
    "hex2": "37",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A437",
    "comment": "else do error #X then warm start we can continue so ...",
    "parent": "perform_cont",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cont)"
  },
  {
    "addr": "A862",
    "hex1": "A5",
    "hex2": "3D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$3D",
    "comment": "get continue pointer low byte",
    "parent": "perform_cont",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cont)"
  },
  {
    "addr": "A864",
    "hex1": "85",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte",
    "parent": "perform_cont",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cont)"
  },
  {
    "addr": "A866",
    "hex1": "84",
    "hex2": "7B",
    "hex3": null,
    "opcode": "STY",
    "argument": "$7B",
    "comment": "save BASIC execute pointer high byte",
    "parent": "perform_cont",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cont)"
  },
  {
    "addr": "A868",
    "hex1": "A5",
    "hex2": "3B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$3B",
    "comment": "get break line low byte",
    "parent": "perform_cont",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cont)"
  },
  {
    "addr": "A86A",
    "hex1": "A4",
    "hex2": "3C",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$3C",
    "comment": "get break line high byte",
    "parent": "perform_cont",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cont)"
  },
  {
    "addr": "A86C",
    "hex1": "85",
    "hex2": "39",
    "hex3": null,
    "opcode": "STA",
    "argument": "$39",
    "comment": "set current line number low byte",
    "parent": "perform_cont",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cont)"
  },
  {
    "addr": "A86E",
    "hex1": "84",
    "hex2": "3A",
    "hex3": null,
    "opcode": "STY",
    "argument": "$3A",
    "comment": "set current line number high byte",
    "parent": "perform_cont",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cont)"
  },
  {
    "addr": "A870",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "perform_cont",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cont)"
  },
  {
    "addr": "A871",
    "hex1": "08",
    "hex2": "",
    "hex3": null,
    "opcode": "PHP",
    "argument": "",
    "comment": "save status",
    "desc": "perform RUN",
    "parent": "this",
    "entry": true,
    "label": "perform_run"
  },
  {
    "addr": "A872",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "no control or kernal messages",
    "parent": "perform_run",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_run)"
  },
  {
    "addr": "A874",
    "hex1": "20",
    "hex2": "90",
    "hex3": "FF",
    "opcode": "JSR",
    "argument": "$FF90",
    "comment": "control kernal messages",
    "parent": "perform_run",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_run)"
  },
  {
    "addr": "A877",
    "hex1": "28",
    "hex2": "",
    "hex3": null,
    "opcode": "PLP",
    "argument": "",
    "comment": "restore status",
    "parent": "perform_run",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_run)"
  },
  {
    "addr": "A878",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A87D",
    "comment": "branch if RUN n",
    "parent": "perform_run",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_run)"
  },
  {
    "addr": "A87A",
    "hex1": "4C",
    "hex2": "59",
    "hex3": "A6",
    "opcode": "JMP",
    "argument": "$A659",
    "comment": "reset execution to start, clear variables, flush stack and return",
    "parent": "perform_run",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_run)"
  },
  {
    "addr": "A87D",
    "hex1": "20",
    "hex2": "60",
    "hex3": "A6",
    "opcode": "JSR",
    "argument": "$A660",
    "comment": "go do \"CLEAR\"",
    "parent": "perform_run",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_run)"
  },
  {
    "addr": "A880",
    "hex1": "4C",
    "hex2": "97",
    "hex3": "A8",
    "opcode": "JMP",
    "argument": "$A897",
    "comment": "get n and do GOTO n",
    "parent": "perform_run",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_run)"
  },
  {
    "addr": "A883",
    "hex1": "A9",
    "hex2": "03",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$03",
    "comment": "need 6 bytes for GOSUB",
    "desc": "perform GOSUB",
    "parent": "this",
    "entry": true,
    "label": "perform_gosub"
  },
  {
    "addr": "A885",
    "hex1": "20",
    "hex2": "FB",
    "hex3": "A3",
    "opcode": "JSR",
    "argument": "$A3FB",
    "comment": "check room on stack for 2*A bytes",
    "parent": "perform_gosub",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_gosub)"
  },
  {
    "addr": "A888",
    "hex1": "A5",
    "hex2": "7B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$7B",
    "comment": "get BASIC execute pointer high byte",
    "parent": "perform_gosub",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_gosub)"
  },
  {
    "addr": "A88A",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "perform_gosub",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_gosub)"
  },
  {
    "addr": "A88B",
    "hex1": "A5",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$7A",
    "comment": "get BASIC execute pointer low byte",
    "parent": "perform_gosub",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_gosub)"
  },
  {
    "addr": "A88D",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "perform_gosub",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_gosub)"
  },
  {
    "addr": "A88E",
    "hex1": "A5",
    "hex2": "3A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$3A",
    "comment": "get current line number high byte",
    "parent": "perform_gosub",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_gosub)"
  },
  {
    "addr": "A890",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "perform_gosub",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_gosub)"
  },
  {
    "addr": "A891",
    "hex1": "A5",
    "hex2": "39",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$39",
    "comment": "get current line number low byte",
    "parent": "perform_gosub",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_gosub)"
  },
  {
    "addr": "A893",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "perform_gosub",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_gosub)"
  },
  {
    "addr": "A894",
    "hex1": "A9",
    "hex2": "8D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$8D",
    "comment": "token for GOSUB",
    "parent": "perform_gosub",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_gosub)"
  },
  {
    "addr": "A896",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "perform_gosub",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_gosub)"
  },
  {
    "addr": "A897",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_gosub",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_gosub)"
  },
  {
    "addr": "A89A",
    "hex1": "20",
    "hex2": "A0",
    "hex3": "A8",
    "opcode": "JSR",
    "argument": "$A8A0",
    "comment": "perform GOTO",
    "parent": "perform_gosub",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_gosub)"
  },
  {
    "addr": "A89D",
    "hex1": "4C",
    "hex2": "AE",
    "hex3": "A7",
    "opcode": "JMP",
    "argument": "$A7AE",
    "comment": "go do interpreter inner loop",
    "parent": "perform_gosub",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_gosub)"
  },
  {
    "addr": "A8A0",
    "hex1": "20",
    "hex2": "6B",
    "hex3": "A9",
    "opcode": "JSR",
    "argument": "$A96B",
    "comment": "get fixed-point number into temporary integer",
    "desc": "perform GOTO",
    "parent": "this",
    "entry": true,
    "label": "perform_goto"
  },
  {
    "addr": "A8A3",
    "hex1": "20",
    "hex2": "09",
    "hex3": "A9",
    "opcode": "JSR",
    "argument": "$A909",
    "comment": "scan for next BASIC line",
    "parent": "perform_goto",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_goto)"
  },
  {
    "addr": "A8A6",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "perform_goto",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_goto)"
  },
  {
    "addr": "A8A7",
    "hex1": "A5",
    "hex2": "39",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$39",
    "comment": "get current line number low byte",
    "parent": "perform_goto",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_goto)"
  },
  {
    "addr": "A8A9",
    "hex1": "E5",
    "hex2": "14",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$14",
    "comment": "subtract temporary integer low byte",
    "parent": "perform_goto",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_goto)"
  },
  {
    "addr": "A8AB",
    "hex1": "A5",
    "hex2": "3A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$3A",
    "comment": "get current line number high byte",
    "parent": "perform_goto",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_goto)"
  },
  {
    "addr": "A8AD",
    "hex1": "E5",
    "hex2": "15",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$15",
    "comment": "subtract temporary integer high byte",
    "parent": "perform_goto",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_goto)"
  },
  {
    "addr": "A8AF",
    "hex1": "B0",
    "hex2": "0B",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A8BC",
    "comment": "if current line number >= temporary integer, go search from the start of memory",
    "parent": "perform_goto",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_goto)"
  },
  {
    "addr": "A8B1",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "else copy line index to A",
    "parent": "perform_goto",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_goto)"
  },
  {
    "addr": "A8B2",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry (+1)",
    "parent": "perform_goto",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_goto)"
  },
  {
    "addr": "A8B3",
    "hex1": "65",
    "hex2": "7A",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$7A",
    "comment": "add BASIC execute pointer low byte",
    "parent": "perform_goto",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_goto)"
  },
  {
    "addr": "A8B5",
    "hex1": "A6",
    "hex2": "7B",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$7B",
    "comment": "get BASIC execute pointer high byte",
    "parent": "perform_goto",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_goto)"
  },
  {
    "addr": "A8B7",
    "hex1": "90",
    "hex2": "07",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A8C0",
    "comment": "branch if no overflow to high byte",
    "parent": "perform_goto",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_goto)"
  },
  {
    "addr": "A8B9",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment high byte",
    "parent": "perform_goto",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_goto)"
  },
  {
    "addr": "A8BA",
    "hex1": "B0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A8C0",
    "comment": "branch always (can never be carry)",
    "parent": "perform_goto",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_goto)"
  },
  {
    "addr": "A8BC",
    "hex1": "A5",
    "hex2": "2B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2B",
    "comment": "get start of memory low byte",
    "desc": "search for line number in temporary integer from start of memory pointer",
    "parent": "this",
    "entry": true,
    "label": "search_for_line_numb"
  },
  {
    "addr": "A8BE",
    "hex1": "A6",
    "hex2": "2C",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$2C",
    "comment": "get start of memory high byte",
    "parent": "search_for_line_numb",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_line_numb)"
  },
  {
    "addr": "A8C0",
    "hex1": "20",
    "hex2": "17",
    "hex3": "A6",
    "opcode": "JSR",
    "argument": "$A617",
    "comment": "search Basic for temp integer line number from AX",
    "desc": "search for line # in temporary integer from (AX)",
    "parent": "this",
    "entry": true,
    "label": "search_for_line_in_t"
  },
  {
    "addr": "A8C3",
    "hex1": "90",
    "hex2": "1E",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A8E3",
    "comment": "if carry clear go do unsdefined statement error carry all ready set for subtract",
    "parent": "search_for_line_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_line_in_t)"
  },
  {
    "addr": "A8C5",
    "hex1": "A5",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$5F",
    "comment": "get pointer low byte",
    "parent": "search_for_line_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_line_in_t)"
  },
  {
    "addr": "A8C7",
    "hex1": "E9",
    "hex2": "01",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$01",
    "comment": "-1",
    "parent": "search_for_line_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_line_in_t)"
  },
  {
    "addr": "A8C9",
    "hex1": "85",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte",
    "parent": "search_for_line_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_line_in_t)"
  },
  {
    "addr": "A8CB",
    "hex1": "A5",
    "hex2": "60",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$60",
    "comment": "get pointer high byte",
    "parent": "search_for_line_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_line_in_t)"
  },
  {
    "addr": "A8CD",
    "hex1": "E9",
    "hex2": "00",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$00",
    "comment": "subtract carry",
    "parent": "search_for_line_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_line_in_t)"
  },
  {
    "addr": "A8CF",
    "hex1": "85",
    "hex2": "7B",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7B",
    "comment": "save BASIC execute pointer high byte",
    "parent": "search_for_line_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_line_in_t)"
  },
  {
    "addr": "A8D1",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "search_for_line_in_t",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_line_in_t)"
  },
  {
    "addr": "A8D2",
    "hex1": "D0",
    "hex2": "FD",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A8D1",
    "comment": "exit if following token to allow syntax error",
    "desc": "perform RETURN",
    "parent": "this",
    "entry": true,
    "label": "perform_return"
  },
  {
    "addr": "A8D4",
    "hex1": "A9",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$FF",
    "comment": "set byte so no match possible",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8D6",
    "hex1": "85",
    "hex2": "4A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$4A",
    "comment": "save FOR/NEXT variable pointer high byte",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8D8",
    "hex1": "20",
    "hex2": "8A",
    "hex3": "A3",
    "opcode": "JSR",
    "argument": "$A38A",
    "comment": "search the stack for FOR or GOSUB activity, get token off stack",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8DB",
    "hex1": "9A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXS",
    "argument": "",
    "comment": "correct the stack",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8DC",
    "hex1": "C9",
    "hex2": "8D",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$8D",
    "comment": "compare with GOSUB token",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8DE",
    "hex1": "F0",
    "hex2": "0B",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A8EB",
    "comment": "if matching GOSUB go continue RETURN",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8E0",
    "hex1": "A2",
    "hex2": "0C",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$0C",
    "comment": "else error code $04, return without gosub error",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8E2",
    "hex1": "2C",
    "hex2": "",
    "hex3": null,
    "opcode": ".BY",
    "argument": "E $2C",
    "comment": "makes next line BIT $11A2",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8E3",
    "hex1": "A2",
    "hex2": "11",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$02",
    "comment": "error code $11, undefined statement error",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8E5",
    "hex1": "4C",
    "hex2": "37",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A437",
    "comment": "do error #X then warm start",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8E8",
    "hex1": "4C",
    "hex2": "08",
    "hex3": "AF",
    "opcode": "JMP",
    "argument": "$AF08",
    "comment": "do syntax error then warm start was matching GOSUB token",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8EB",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "dump token byte",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8EC",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull return line low byte",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8ED",
    "hex1": "85",
    "hex2": "39",
    "hex3": null,
    "opcode": "STA",
    "argument": "$39",
    "comment": "save current line number low byte",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8EF",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull return line high byte",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8F0",
    "hex1": "85",
    "hex2": "3A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$3A",
    "comment": "save current line number high byte",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8F2",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull return address low byte",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8F3",
    "hex1": "85",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8F5",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull return address high byte",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8F6",
    "hex1": "85",
    "hex2": "7B",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7B",
    "comment": "save BASIC execute pointer high byte",
    "parent": "perform_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_return)"
  },
  {
    "addr": "A8F8",
    "hex1": "20",
    "hex2": "06",
    "hex3": "A9",
    "opcode": "JSR",
    "argument": "$A906",
    "comment": "scan for next BASIC statement ([:] or [EOL])",
    "desc": "perform DATA",
    "parent": "this",
    "entry": true,
    "label": "perform_data"
  },
  {
    "addr": "A8FB",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "copy index to A",
    "desc": "add Y to the BASIC execute pointer",
    "parent": "this",
    "entry": true,
    "label": "add_y_to_the_basic_e"
  },
  {
    "addr": "A8FC",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "add_y_to_the_basic_e",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_y_to_the_basic_e)"
  },
  {
    "addr": "A8FD",
    "hex1": "65",
    "hex2": "7A",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$7A",
    "comment": "add BASIC execute pointer low byte",
    "parent": "add_y_to_the_basic_e",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_y_to_the_basic_e)"
  },
  {
    "addr": "A8FF",
    "hex1": "85",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte",
    "parent": "add_y_to_the_basic_e",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_y_to_the_basic_e)"
  },
  {
    "addr": "A901",
    "hex1": "90",
    "hex2": "02",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A905",
    "comment": "skip increment if no carry",
    "parent": "add_y_to_the_basic_e",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_y_to_the_basic_e)"
  },
  {
    "addr": "A903",
    "hex1": "E6",
    "hex2": "7B",
    "hex3": null,
    "opcode": "INC",
    "argument": "$7B",
    "comment": "else increment BASIC execute pointer high byte",
    "parent": "add_y_to_the_basic_e",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_y_to_the_basic_e)"
  },
  {
    "addr": "A905",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "add_y_to_the_basic_e",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_y_to_the_basic_e)"
  },
  {
    "addr": "A906",
    "hex1": "A2",
    "hex2": "3A",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$3A",
    "comment": "set look for character = \":\"",
    "desc": "scan for next BASIC statement ([:] or [EOL]) returns Y as index to [:] or [EOL]",
    "parent": "this",
    "entry": true,
    "label": "scan_for_next_basic_"
  },
  {
    "addr": "A908",
    "hex1": "2C",
    "hex2": "",
    "hex3": null,
    "opcode": ".BY",
    "argument": "E $2C",
    "comment": "makes next line BIT $00A2",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A909",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "set alternate search character = [EOL]",
    "desc": "scan for next BASIC line returns Y as index to [EOL]",
    "parent": "this",
    "entry": true,
    "label": "scan_for_next_basic_"
  },
  {
    "addr": "A90B",
    "hex1": "86",
    "hex2": "07",
    "hex3": null,
    "opcode": "STX",
    "argument": "$07",
    "comment": "store alternate search character",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A90D",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "set search character = [EOL]",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A90F",
    "hex1": "84",
    "hex2": "08",
    "hex3": null,
    "opcode": "STY",
    "argument": "$08",
    "comment": "save the search character",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A911",
    "hex1": "A5",
    "hex2": "08",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$08",
    "comment": "get search character",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A913",
    "hex1": "A6",
    "hex2": "07",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$07",
    "comment": "get alternate search character",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A915",
    "hex1": "85",
    "hex2": "07",
    "hex3": null,
    "opcode": "STA",
    "argument": "$07",
    "comment": "make search character = alternate search character",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A917",
    "hex1": "86",
    "hex2": "08",
    "hex3": null,
    "opcode": "STX",
    "argument": "$08",
    "comment": "make alternate search character = search character",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A919",
    "hex1": "B1",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($7A),Y",
    "comment": "get BASIC byte",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A91B",
    "hex1": "F0",
    "hex2": "E8",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A905",
    "comment": "exit if null [EOL]",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A91D",
    "hex1": "C5",
    "hex2": "08",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$08",
    "comment": "compare with search character",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A91F",
    "hex1": "F0",
    "hex2": "E4",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A905",
    "comment": "exit if found",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A921",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "else increment index",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A922",
    "hex1": "C9",
    "hex2": "22",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$22",
    "comment": "compare current character with open quote",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A924",
    "hex1": "D0",
    "hex2": "F3",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A919",
    "comment": "if found go swap search character for alternate search character",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A926",
    "hex1": "F0",
    "hex2": "E9",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A911",
    "comment": "loop for next character, branch always",
    "parent": "scan_for_next_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_for_next_basic_)"
  },
  {
    "addr": "A928",
    "hex1": "20",
    "hex2": "9E",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD9E",
    "comment": "evaluate expression",
    "desc": "perform IF",
    "parent": "this",
    "entry": true,
    "label": "perform_if"
  },
  {
    "addr": "A92B",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_if",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_if)"
  },
  {
    "addr": "A92E",
    "hex1": "C9",
    "hex2": "89",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$89",
    "comment": "compare with \"GOTO\" token",
    "parent": "perform_if",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_if)"
  },
  {
    "addr": "A930",
    "hex1": "F0",
    "hex2": "05",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A937",
    "comment": "if it was  the token for GOTO go do IF ... GOTO wasn't IF ... GOTO so must be IF ... THEN",
    "parent": "perform_if",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_if)"
  },
  {
    "addr": "A932",
    "hex1": "A9",
    "hex2": "A7",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$A7",
    "comment": "set \"THEN\" token",
    "parent": "perform_if",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_if)"
  },
  {
    "addr": "A934",
    "hex1": "20",
    "hex2": "FF",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFF",
    "comment": "scan for CHR$(A), else do syntax error then warm start",
    "parent": "perform_if",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_if)"
  },
  {
    "addr": "A937",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "parent": "perform_if",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_if)"
  },
  {
    "addr": "A939",
    "hex1": "D0",
    "hex2": "05",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A940",
    "comment": "if result was non zero continue execution else REM rest of line",
    "parent": "perform_if",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_if)"
  },
  {
    "addr": "A93B",
    "hex1": "20",
    "hex2": "09",
    "hex3": "A9",
    "opcode": "JSR",
    "argument": "$A909",
    "comment": "scan for next BASIC line",
    "desc": "perform REM",
    "parent": "this",
    "entry": true,
    "label": "perform_rem"
  },
  {
    "addr": "A93E",
    "hex1": "F0",
    "hex2": "BB",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A8FB",
    "comment": "add Y to the BASIC execute pointer and return, branch always result was non zero so do rest of line",
    "parent": "perform_rem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_rem)"
  },
  {
    "addr": "A940",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_rem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_rem)"
  },
  {
    "addr": "A943",
    "hex1": "B0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A948",
    "comment": "branch if not numeric character, is variable or keyword",
    "parent": "perform_rem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_rem)"
  },
  {
    "addr": "A945",
    "hex1": "4C",
    "hex2": "A0",
    "hex3": "A8",
    "opcode": "JMP",
    "argument": "$A8A0",
    "comment": "else perform GOTO n is variable or keyword",
    "parent": "perform_rem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_rem)"
  },
  {
    "addr": "A948",
    "hex1": "4C",
    "hex2": "ED",
    "hex3": "A7",
    "opcode": "JMP",
    "argument": "$A7ED",
    "comment": "interpret BASIC code from BASIC execute pointer",
    "parent": "perform_rem",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_rem)"
  },
  {
    "addr": "A94B",
    "hex1": "20",
    "hex2": "9E",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B79E",
    "comment": "get byte parameter",
    "desc": "perform ON",
    "parent": "this",
    "entry": true,
    "label": "perform_on"
  },
  {
    "addr": "A94E",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push next character",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A94F",
    "hex1": "C9",
    "hex2": "8D",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$8D",
    "comment": "compare with GOSUB token",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A951",
    "hex1": "F0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A957",
    "comment": "if GOSUB go see if it should be executed",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A953",
    "hex1": "C9",
    "hex2": "89",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$89",
    "comment": "compare with GOTO token",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A955",
    "hex1": "D0",
    "hex2": "91",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A8E8",
    "comment": "if not GOTO do syntax error then warm start next character was GOTO or GOSUB, see if it should be executed",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A957",
    "hex1": "C6",
    "hex2": "65",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$65",
    "comment": "decrement the byte value",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A959",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A95F",
    "comment": "if not zero go see if another line number exists",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A95B",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull keyword token",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A95C",
    "hex1": "4C",
    "hex2": "EF",
    "hex3": "A7",
    "opcode": "JMP",
    "argument": "$A7EF",
    "comment": "go execute it",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A95F",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A962",
    "hex1": "20",
    "hex2": "6B",
    "hex3": "A9",
    "opcode": "JSR",
    "argument": "$A96B",
    "comment": "get fixed-point number into temporary integer skip this n",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A965",
    "hex1": "C9",
    "hex2": "2C",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$2C",
    "comment": "compare next character with \",\"",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A967",
    "hex1": "F0",
    "hex2": "EE",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$A957",
    "comment": "loop if \",\"",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A969",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "else pull keyword token, ran out of options",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A96A",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "perform_on",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_on)"
  },
  {
    "addr": "A96B",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "clear X",
    "desc": "get fixed-point number into temporary integer",
    "parent": "this",
    "entry": true,
    "label": "get_fixedpoint_numbe"
  },
  {
    "addr": "A96D",
    "hex1": "86",
    "hex2": "14",
    "hex3": null,
    "opcode": "STX",
    "argument": "$14",
    "comment": "clear temporary integer low byte",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A96F",
    "hex1": "86",
    "hex2": "15",
    "hex3": null,
    "opcode": "STX",
    "argument": "$15",
    "comment": "clear temporary integer high byte",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A971",
    "hex1": "B0",
    "hex2": "F7",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A96A",
    "comment": "return if carry set, end of scan, character was not 0-9",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A973",
    "hex1": "E9",
    "hex2": "2F",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$2F",
    "comment": "subtract $30, $2F+carry, from byte",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A975",
    "hex1": "85",
    "hex2": "07",
    "hex3": null,
    "opcode": "STA",
    "argument": "$07",
    "comment": "store #",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A977",
    "hex1": "A5",
    "hex2": "15",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$15",
    "comment": "get temporary integer high byte",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A979",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save it for now",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A97B",
    "hex1": "C9",
    "hex2": "19",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$19",
    "comment": "compare with $19",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A97D",
    "hex1": "B0",
    "hex2": "D4",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$A953",
    "comment": "branch if >= this makes the maximum line number 63999 because the next bit does $1900 * $0A = $FA00 = 64000 decimal. the branch target is really the SYNTAX error at $A8E8 but that is too far so an intermediate compare and branch to that location is used. the problem with this is that line number that gives a partial result from $8900 to $89FF, 35072x to 35327x, will pass the new target compare and will try to execute the remainder of the ON n GOTO/GOSUB. a solution to this is to copy the byte in A before the branch to X and then branch to $A955 skipping the second compare",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A97F",
    "hex1": "A5",
    "hex2": "14",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$14",
    "comment": "get temporary integer low byte",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A981",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "*2 low byte",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A982",
    "hex1": "26",
    "hex2": "22",
    "hex3": null,
    "opcode": "ROL",
    "argument": "$22",
    "comment": "*2 high byte",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A984",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "*2 low byte",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A985",
    "hex1": "26",
    "hex2": "22",
    "hex3": null,
    "opcode": "ROL",
    "argument": "$22",
    "comment": "*2 high byte (*4)",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A987",
    "hex1": "65",
    "hex2": "14",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$14",
    "comment": "+ low byte (*5)",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A989",
    "hex1": "85",
    "hex2": "14",
    "hex3": null,
    "opcode": "STA",
    "argument": "$14",
    "comment": "save it",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A98B",
    "hex1": "A5",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$22",
    "comment": "get high byte temp",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A98D",
    "hex1": "65",
    "hex2": "15",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$15",
    "comment": "+ high byte (*5)",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A98F",
    "hex1": "85",
    "hex2": "15",
    "hex3": null,
    "opcode": "STA",
    "argument": "$15",
    "comment": "save it",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A991",
    "hex1": "06",
    "hex2": "14",
    "hex3": null,
    "opcode": "ASL",
    "argument": "$14",
    "comment": "*2 low byte (*10d)",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A993",
    "hex1": "26",
    "hex2": "15",
    "hex3": null,
    "opcode": "ROL",
    "argument": "$15",
    "comment": "*2 high byte (*10d)",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A995",
    "hex1": "A5",
    "hex2": "14",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$14",
    "comment": "get low byte",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A997",
    "hex1": "65",
    "hex2": "07",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$07",
    "comment": "add #",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A999",
    "hex1": "85",
    "hex2": "14",
    "hex3": null,
    "opcode": "STA",
    "argument": "$14",
    "comment": "save low byte",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A99B",
    "hex1": "90",
    "hex2": "02",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$A99F",
    "comment": "branch if no overflow to high byte",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A99D",
    "hex1": "E6",
    "hex2": "15",
    "hex3": null,
    "opcode": "INC",
    "argument": "$15",
    "comment": "else increment high byte",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A99F",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A9A2",
    "hex1": "4C",
    "hex2": "71",
    "hex3": "A9",
    "opcode": "JMP",
    "argument": "$A971",
    "comment": "loop for next character",
    "parent": "get_fixedpoint_numbe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fixedpoint_numbe)"
  },
  {
    "addr": "A9A5",
    "hex1": "20",
    "hex2": "8B",
    "hex3": "B0",
    "opcode": "JSR",
    "argument": "$B08B",
    "comment": "get variable address",
    "desc": "perform LET",
    "parent": "this",
    "entry": true,
    "label": "perform_let"
  },
  {
    "addr": "A9A8",
    "hex1": "85",
    "hex2": "49",
    "hex3": null,
    "opcode": "STA",
    "argument": "$49",
    "comment": "save variable address low byte",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9AA",
    "hex1": "84",
    "hex2": "4A",
    "hex3": null,
    "opcode": "STY",
    "argument": "$4A",
    "comment": "save variable address high byte",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9AC",
    "hex1": "A9",
    "hex2": "B2",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$B2",
    "comment": "$B2 is \"=\" token",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9AE",
    "hex1": "20",
    "hex2": "FF",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFF",
    "comment": "scan for CHR$(A), else do syntax error then warm start",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9B1",
    "hex1": "A5",
    "hex2": "0E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$0E",
    "comment": "get data type flag, $80 = integer, $00 = float",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9B3",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push data type flag",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9B4",
    "hex1": "A5",
    "hex2": "0D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$0D",
    "comment": "get data type flag, $FF = string, $00 = numeric",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9B6",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push data type flag",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9B7",
    "hex1": "20",
    "hex2": "9E",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD9E",
    "comment": "evaluate expression",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9BA",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop data type flag",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9BB",
    "hex1": "2A",
    "hex2": "",
    "hex3": null,
    "opcode": "ROL",
    "argument": "",
    "comment": "string bit into carry",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9BC",
    "hex1": "20",
    "hex2": "90",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD90",
    "comment": "do type match check",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9BF",
    "hex1": "D0",
    "hex2": "18",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A9D9",
    "comment": "branch if string",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9C1",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop integer/float data type flag assign value to numeric variable",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9C2",
    "hex1": "10",
    "hex2": "12",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$A9D6",
    "comment": "branch if float expression is numeric integer",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9C4",
    "hex1": "20",
    "hex2": "1B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC1B",
    "comment": "round FAC1",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9C7",
    "hex1": "20",
    "hex2": "BF",
    "hex3": "B1",
    "opcode": "JSR",
    "argument": "$B1BF",
    "comment": "evaluate integer expression, no sign check",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9CA",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9CC",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get FAC1 mantissa 3",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9CE",
    "hex1": "91",
    "hex2": "49",
    "hex3": null,
    "opcode": "STA",
    "argument": "($49),Y",
    "comment": "save as integer variable low byte",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9D0",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9D1",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9D3",
    "hex1": "91",
    "hex2": "49",
    "hex3": null,
    "opcode": "STA",
    "argument": "($49),Y",
    "comment": "save as integer variable high byte",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9D5",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9D6",
    "hex1": "4C",
    "hex2": "D0",
    "hex3": "BB",
    "opcode": "JMP",
    "argument": "$BBD0",
    "comment": "pack FAC1 into variable pointer and return assign value to numeric variable",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9D9",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "dump integer/float data type flag",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9DA",
    "hex1": "A4",
    "hex2": "4A",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$4A",
    "comment": "get variable pointer high byte",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9DC",
    "hex1": "C0",
    "hex2": "BF",
    "hex3": null,
    "opcode": "CPY",
    "argument": "#$BF",
    "comment": "was it TI$ pointer",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9DE",
    "hex1": "D0",
    "hex2": "4C",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AA2C",
    "comment": "branch if not else it's TI$ = <expr$>",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9E0",
    "hex1": "20",
    "hex2": "A6",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B6A6",
    "comment": "pop string off descriptor stack, or from top of string space returns with A = length, X = pointer low byte, Y = pointer high byte",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9E3",
    "hex1": "C9",
    "hex2": "06",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$06",
    "comment": "compare length with 6",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9E5",
    "hex1": "D0",
    "hex2": "3D",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AA24",
    "comment": "if length not 6 do illegal quantity error then warm start",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9E7",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9E9",
    "hex1": "84",
    "hex2": "61",
    "hex3": null,
    "opcode": "STY",
    "argument": "$61",
    "comment": "clear FAC1 exponent",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9EB",
    "hex1": "84",
    "hex2": "66",
    "hex3": null,
    "opcode": "STY",
    "argument": "$66",
    "comment": "clear FAC1 sign (b7)",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9ED",
    "hex1": "84",
    "hex2": "71",
    "hex3": null,
    "opcode": "STY",
    "argument": "$71",
    "comment": "save index",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9EF",
    "hex1": "20",
    "hex2": "1D",
    "hex3": "AA",
    "opcode": "JSR",
    "argument": "$AA1D",
    "comment": "check and evaluate numeric digit",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9F2",
    "hex1": "20",
    "hex2": "E2",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BAE2",
    "comment": "multiply FAC1 by 10",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9F5",
    "hex1": "E6",
    "hex2": "71",
    "hex3": null,
    "opcode": "INC",
    "argument": "$71",
    "comment": "increment index",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9F7",
    "hex1": "A4",
    "hex2": "71",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$71",
    "comment": "restore index",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9F9",
    "hex1": "20",
    "hex2": "1D",
    "hex3": "AA",
    "opcode": "JSR",
    "argument": "$AA1D",
    "comment": "check and evaluate numeric digit",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9FC",
    "hex1": "20",
    "hex2": "0C",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC0C",
    "comment": "round and copy FAC1 to FAC2",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "A9FF",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy FAC1 exponent",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA00",
    "hex1": "F0",
    "hex2": "05",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AA07",
    "comment": "branch if FAC1 zero",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA02",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment index, * 2",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA03",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy back to A",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA04",
    "hex1": "20",
    "hex2": "ED",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BAED",
    "comment": "FAC1 = (FAC1 + (FAC2 * 2)) * 2 = FAC1 * 6",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA07",
    "hex1": "A4",
    "hex2": "71",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$71",
    "comment": "get index",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA09",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA0A",
    "hex1": "C0",
    "hex2": "06",
    "hex3": null,
    "opcode": "CPY",
    "argument": "#$06",
    "comment": "compare index with 6",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA0C",
    "hex1": "D0",
    "hex2": "DF",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$A9ED",
    "comment": "loop if not 6",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA0E",
    "hex1": "20",
    "hex2": "E2",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BAE2",
    "comment": "multiply FAC1 by 10",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA11",
    "hex1": "20",
    "hex2": "9B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC9B",
    "comment": "convert FAC1 floating to fixed",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA14",
    "hex1": "A6",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$64",
    "comment": "get FAC1 mantissa 3",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA16",
    "hex1": "A4",
    "hex2": "63",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$63",
    "comment": "get FAC1 mantissa 2",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA18",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA1A",
    "hex1": "4C",
    "hex2": "DB",
    "hex3": "FF",
    "opcode": "JMP",
    "argument": "$FFDB",
    "comment": "set real time clock and return",
    "parent": "perform_let",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_let)"
  },
  {
    "addr": "AA1D",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get byte from string",
    "desc": "check and evaluate numeric digit",
    "parent": "this",
    "entry": true,
    "label": "check_and_evaluate_n"
  },
  {
    "addr": "AA1F",
    "hex1": "20",
    "hex2": "80",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0080",
    "comment": "clear Cb if numeric. this call should be to $84 as the code from $80 first comapres the byte with [SPACE] and does a BASIC increment and get if it is",
    "parent": "check_and_evaluate_n",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_and_evaluate_n)"
  },
  {
    "addr": "AA22",
    "hex1": "90",
    "hex2": "03",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AA27",
    "comment": "branch if numeric",
    "parent": "check_and_evaluate_n",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_and_evaluate_n)"
  },
  {
    "addr": "AA24",
    "hex1": "4C",
    "hex2": "48",
    "hex3": "B2",
    "opcode": "JMP",
    "argument": "$B248",
    "comment": "do illegal quantity error then warm start",
    "parent": "check_and_evaluate_n",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_and_evaluate_n)"
  },
  {
    "addr": "AA27",
    "hex1": "E9",
    "hex2": "2F",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$2F",
    "comment": "subtract $2F + carry to convert ASCII to binary",
    "parent": "check_and_evaluate_n",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_and_evaluate_n)"
  },
  {
    "addr": "AA29",
    "hex1": "4C",
    "hex2": "7E",
    "hex3": "BD",
    "opcode": "JMP",
    "argument": "$BD7E",
    "comment": "evaluate new ASCII digit and return",
    "parent": "check_and_evaluate_n",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_and_evaluate_n)"
  },
  {
    "addr": "AA2C",
    "hex1": "A0",
    "hex2": "02",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$02",
    "comment": "index to string pointer high byte",
    "desc": "assign value to numeric variable, but not TI$",
    "parent": "this",
    "entry": true,
    "label": "assign_value_to_nume"
  },
  {
    "addr": "AA2E",
    "hex1": "B1",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($64),Y",
    "comment": "get string pointer high byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA30",
    "hex1": "C5",
    "hex2": "34",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$34",
    "comment": "compare with bottom of string space high byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA32",
    "hex1": "90",
    "hex2": "17",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AA4B",
    "comment": "branch if string pointer high byte is less than bottom of string space high byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA34",
    "hex1": "D0",
    "hex2": "07",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AA3D",
    "comment": "branch if string pointer high byte is greater than bottom of string space high byte else high bytes were equal",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA36",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index to string pointer low byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA37",
    "hex1": "B1",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($64),Y",
    "comment": "get string pointer low byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA39",
    "hex1": "C5",
    "hex2": "33",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$33",
    "comment": "compare with bottom of string space low byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA3B",
    "hex1": "90",
    "hex2": "0E",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AA4B",
    "comment": "branch if string pointer low byte is less than bottom of string space low byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA3D",
    "hex1": "A4",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$65",
    "comment": "get descriptor pointer high byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA3F",
    "hex1": "C4",
    "hex2": "2E",
    "hex3": null,
    "opcode": "CPY",
    "argument": "$2E",
    "comment": "compare with start of variables high byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA41",
    "hex1": "90",
    "hex2": "08",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AA4B",
    "comment": "branch if less, is on string stack",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA43",
    "hex1": "D0",
    "hex2": "0D",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AA52",
    "comment": "if greater make space and copy string else high bytes were equal",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA45",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get descriptor pointer low byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA47",
    "hex1": "C5",
    "hex2": "2D",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$2D",
    "comment": "compare with start of variables low byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA49",
    "hex1": "B0",
    "hex2": "07",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$AA52",
    "comment": "if greater or equal make space and copy string",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA4B",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get descriptor pointer low byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA4D",
    "hex1": "A4",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$65",
    "comment": "get descriptor pointer high byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA4F",
    "hex1": "4C",
    "hex2": "68",
    "hex3": "AA",
    "opcode": "JMP",
    "argument": "$AA68",
    "comment": "go copy descriptor to variable",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA52",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA54",
    "hex1": "B1",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($64),Y",
    "comment": "get string length",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA56",
    "hex1": "20",
    "hex2": "75",
    "hex3": "B4",
    "opcode": "JSR",
    "argument": "$B475",
    "comment": "copy descriptor pointer and make string space A bytes long",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA59",
    "hex1": "A5",
    "hex2": "50",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$50",
    "comment": "copy old descriptor pointer low byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA5B",
    "hex1": "A4",
    "hex2": "51",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$51",
    "comment": "copy old descriptor pointer high byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA5D",
    "hex1": "85",
    "hex2": "6F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6F",
    "comment": "save old descriptor pointer low byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA5F",
    "hex1": "84",
    "hex2": "70",
    "hex3": null,
    "opcode": "STY",
    "argument": "$70",
    "comment": "save old descriptor pointer high byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA61",
    "hex1": "20",
    "hex2": "7A",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B67A",
    "comment": "copy string from descriptor to utility pointer",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA64",
    "hex1": "A9",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$61",
    "comment": "get descriptor pointer low byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA66",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "get descriptor pointer high byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA68",
    "hex1": "85",
    "hex2": "50",
    "hex3": null,
    "opcode": "STA",
    "argument": "$50",
    "comment": "save descriptor pointer low byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA6A",
    "hex1": "84",
    "hex2": "51",
    "hex3": null,
    "opcode": "STY",
    "argument": "$51",
    "comment": "save descriptor pointer high byte",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA6C",
    "hex1": "20",
    "hex2": "DB",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B6DB",
    "comment": "clean descriptor stack, YA = pointer",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA6F",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA71",
    "hex1": "B1",
    "hex2": "50",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($50),Y",
    "comment": "get string length from new descriptor",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA73",
    "hex1": "91",
    "hex2": "49",
    "hex3": null,
    "opcode": "STA",
    "argument": "($49),Y",
    "comment": "copy string length to variable",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA75",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA76",
    "hex1": "B1",
    "hex2": "50",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($50),Y",
    "comment": "get string pointer low byte from new descriptor",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA78",
    "hex1": "91",
    "hex2": "49",
    "hex3": null,
    "opcode": "STA",
    "argument": "($49),Y",
    "comment": "copy string pointer low byte to variable",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA7A",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA7B",
    "hex1": "B1",
    "hex2": "50",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($50),Y",
    "comment": "get string pointer high byte from new descriptor",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA7D",
    "hex1": "91",
    "hex2": "49",
    "hex3": null,
    "opcode": "STA",
    "argument": "($49),Y",
    "comment": "copy string pointer high byte to variable",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA7F",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "assign_value_to_nume",
    "entry": false,
    "label": "n/a",
    "desc": "(part of assign_value_to_nume)"
  },
  {
    "addr": "AA80",
    "hex1": "20",
    "hex2": "86",
    "hex3": "AA",
    "opcode": "JSR",
    "argument": "$AA86",
    "comment": "perform CMD",
    "desc": "perform PRINT#",
    "parent": "this",
    "entry": true,
    "label": "perform_print"
  },
  {
    "addr": "AA83",
    "hex1": "4C",
    "hex2": "B5",
    "hex3": "AB",
    "opcode": "JMP",
    "argument": "$ABB5",
    "comment": "close input and output channels and return",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AA86",
    "hex1": "20",
    "hex2": "9E",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B79E",
    "comment": "get byte parameter",
    "desc": "perform CMD",
    "parent": "this",
    "entry": true,
    "label": "perform_cmd"
  },
  {
    "addr": "AA89",
    "hex1": "F0",
    "hex2": "05",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AA90",
    "comment": "branch if following byte is \":\" or [EOT]",
    "parent": "perform_cmd",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cmd)"
  },
  {
    "addr": "AA8B",
    "hex1": "A9",
    "hex2": "2C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$2C",
    "comment": "set \",\"",
    "parent": "perform_cmd",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cmd)"
  },
  {
    "addr": "AA8D",
    "hex1": "20",
    "hex2": "FF",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFF",
    "comment": "scan for CHR$(A), else do syntax error then warm start",
    "parent": "perform_cmd",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cmd)"
  },
  {
    "addr": "AA90",
    "hex1": "08",
    "hex2": "",
    "hex3": null,
    "opcode": "PHP",
    "argument": "",
    "comment": "save status",
    "parent": "perform_cmd",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cmd)"
  },
  {
    "addr": "AA91",
    "hex1": "86",
    "hex2": "13",
    "hex3": null,
    "opcode": "STX",
    "argument": "$13",
    "comment": "set current I/O channel",
    "parent": "perform_cmd",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cmd)"
  },
  {
    "addr": "AA93",
    "hex1": "20",
    "hex2": "18",
    "hex3": "E1",
    "opcode": "JSR",
    "argument": "$E118",
    "comment": "open channel for output with error check",
    "parent": "perform_cmd",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cmd)"
  },
  {
    "addr": "AA96",
    "hex1": "28",
    "hex2": "",
    "hex3": null,
    "opcode": "PLP",
    "argument": "",
    "comment": "restore status",
    "parent": "perform_cmd",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cmd)"
  },
  {
    "addr": "AA97",
    "hex1": "4C",
    "hex2": "A0",
    "hex3": "AA",
    "opcode": "JMP",
    "argument": "$AAA0",
    "comment": "perform PRINT",
    "parent": "perform_cmd",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cmd)"
  },
  {
    "addr": "AA9A",
    "hex1": "20",
    "hex2": "21",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB21",
    "comment": "print string from utility pointer",
    "parent": "perform_cmd",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cmd)"
  },
  {
    "addr": "AA9D",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_cmd",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_cmd)"
  },
  {
    "addr": "AAA0",
    "hex1": "F0",
    "hex2": "35",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AAD7",
    "comment": "if nothing following just print CR/LF",
    "desc": "perform PRINT",
    "parent": "this",
    "entry": true,
    "label": "perform_print"
  },
  {
    "addr": "AAA2",
    "hex1": "F0",
    "hex2": "43",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AAE7",
    "comment": "exit if nothing following, end of PRINT branch",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AAA4",
    "hex1": "C9",
    "hex2": "A3",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$A3",
    "comment": "compare with token for TAB(",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AAA6",
    "hex1": "F0",
    "hex2": "50",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AAF8",
    "comment": "if TAB( go handle it",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AAA8",
    "hex1": "C9",
    "hex2": "A6",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$A6",
    "comment": "compare with token for SPC(",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AAAA",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "flag SPC(",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AAAB",
    "hex1": "F0",
    "hex2": "4B",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AAF8",
    "comment": "if SPC( go handle it",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AAAD",
    "hex1": "C9",
    "hex2": "2C",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$2C",
    "comment": "compare with \",\"",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AAAF",
    "hex1": "F0",
    "hex2": "37",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AAE8",
    "comment": "if \",\" go skip to the next TAB position",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AAB1",
    "hex1": "C9",
    "hex2": "3B",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$3B",
    "comment": "compare with \";\"",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AAB3",
    "hex1": "F0",
    "hex2": "5E",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AB13",
    "comment": "if \";\" go continue the print loop",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AAB5",
    "hex1": "20",
    "hex2": "9E",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD9E",
    "comment": "evaluate expression",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AAB8",
    "hex1": "24",
    "hex2": "0D",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$0D",
    "comment": "test data type flag, $FF = string, $00 = numeric",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AABA",
    "hex1": "30",
    "hex2": "DE",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$AA9A",
    "comment": "if string go print string, scan memory and continue PRINT",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AABC",
    "hex1": "20",
    "hex2": "DD",
    "hex3": "BD",
    "opcode": "JSR",
    "argument": "$BDDD",
    "comment": "convert FAC1 to ASCII string result in (AY)",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AABF",
    "hex1": "20",
    "hex2": "87",
    "hex3": "B4",
    "opcode": "JSR",
    "argument": "$B487",
    "comment": "print \" terminated string to utility pointer",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AAC2",
    "hex1": "20",
    "hex2": "21",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB21",
    "comment": "print string from utility pointer",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AAC5",
    "hex1": "20",
    "hex2": "3B",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB3B",
    "comment": "print [SPACE] or [CURSOR RIGHT]",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AAC8",
    "hex1": "D0",
    "hex2": "D3",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AA9D",
    "comment": "go scan memory and continue PRINT, branch always",
    "parent": "perform_print",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_print)"
  },
  {
    "addr": "AACA",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A",
    "desc": "set XY to $0200 - 1 and print [CR]",
    "parent": "this",
    "entry": true,
    "label": "set_xy_to_0200_1_and"
  },
  {
    "addr": "AACC",
    "hex1": "9D",
    "hex2": "00",
    "hex3": "02",
    "opcode": "STA",
    "argument": "$0200,X",
    "comment": "clear first byte of input buffer",
    "parent": "set_xy_to_0200_1_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of set_xy_to_0200_1_and)"
  },
  {
    "addr": "AACF",
    "hex1": "A2",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$FF",
    "comment": "$0200 - 1 low byte",
    "parent": "set_xy_to_0200_1_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of set_xy_to_0200_1_and)"
  },
  {
    "addr": "AAD1",
    "hex1": "A0",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$01",
    "comment": "$0200 - 1 high byte",
    "parent": "set_xy_to_0200_1_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of set_xy_to_0200_1_and)"
  },
  {
    "addr": "AAD3",
    "hex1": "A5",
    "hex2": "13",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$13",
    "comment": "get current I/O channel",
    "parent": "set_xy_to_0200_1_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of set_xy_to_0200_1_and)"
  },
  {
    "addr": "AAD5",
    "hex1": "D0",
    "hex2": "10",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AAE7",
    "comment": "exit if not default channel",
    "parent": "set_xy_to_0200_1_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of set_xy_to_0200_1_and)"
  },
  {
    "addr": "AAD7",
    "hex1": "A9",
    "hex2": "0D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$0D",
    "comment": "set [CR]",
    "desc": "print CR/LF",
    "parent": "this",
    "entry": true,
    "label": "print_crlf"
  },
  {
    "addr": "AAD9",
    "hex1": "20",
    "hex2": "47",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB47",
    "comment": "print the character",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AADC",
    "hex1": "24",
    "hex2": "13",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$13",
    "comment": "test current I/O channel",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AADE",
    "hex1": "10",
    "hex2": "05",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$AAE5",
    "comment": "if ?? toggle A, EOR #$FF and return",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAE0",
    "hex1": "A9",
    "hex2": "0A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$0A",
    "comment": "set [LF]",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAE2",
    "hex1": "20",
    "hex2": "47",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB47",
    "comment": "print the character toggle A",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAE5",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "invert A",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAE7",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "was \",\"",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAE8",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set Cb for read cursor position",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAE9",
    "hex1": "20",
    "hex2": "F0",
    "hex3": "FF",
    "opcode": "JSR",
    "argument": "$FFF0",
    "comment": "read/set X,Y cursor position",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAEC",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "copy cursor Y",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAED",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAEE",
    "hex1": "E9",
    "hex2": "0A",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$0A",
    "comment": "subtract one TAB length",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAF0",
    "hex1": "B0",
    "hex2": "FC",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$AAEE",
    "comment": "loop if result was +ve",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAF2",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement it",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAF4",
    "hex1": "69",
    "hex2": "01",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$01",
    "comment": "+1, twos complement",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAF6",
    "hex1": "D0",
    "hex2": "16",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AB0E",
    "comment": "always print A spaces, result is never $00",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAF8",
    "hex1": "08",
    "hex2": "",
    "hex3": null,
    "opcode": "PHP",
    "argument": "",
    "comment": "save TAB( or SPC( status",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAF9",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set Cb for read cursor position",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAFA",
    "hex1": "20",
    "hex2": "F0",
    "hex3": "FF",
    "opcode": "JSR",
    "argument": "$FFF0",
    "comment": "read/set X,Y cursor position",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAFD",
    "hex1": "84",
    "hex2": "09",
    "hex3": null,
    "opcode": "STY",
    "argument": "$09",
    "comment": "save current cursor position",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AAFF",
    "hex1": "20",
    "hex2": "9B",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B79B",
    "comment": "scan and get byte parameter",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB02",
    "hex1": "C9",
    "hex2": "29",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$29",
    "comment": "compare with \")\"",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB04",
    "hex1": "D0",
    "hex2": "59",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AB5F",
    "comment": "if not \")\" do syntax error",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB06",
    "hex1": "28",
    "hex2": "",
    "hex3": null,
    "opcode": "PLP",
    "argument": "",
    "comment": "restore TAB( or SPC( status",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB07",
    "hex1": "90",
    "hex2": "06",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AB0F",
    "comment": "branch if was SPC( else was TAB(",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB09",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy TAB() byte to A",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB0A",
    "hex1": "E5",
    "hex2": "09",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$09",
    "comment": "subtract current cursor position",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB0C",
    "hex1": "90",
    "hex2": "05",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AB13",
    "comment": "go loop for next if already past requited position",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB0E",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy [SPACE] count to X",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB0F",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment count",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB10",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement count",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB11",
    "hex1": "D0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AB19",
    "comment": "branch if count was not zero was \";\" or [SPACES] printed",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB13",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB16",
    "hex1": "4C",
    "hex2": "A2",
    "hex3": "AA",
    "opcode": "JMP",
    "argument": "$AAA2",
    "comment": "continue print loop",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB19",
    "hex1": "20",
    "hex2": "3B",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB3B",
    "comment": "print [SPACE] or [CURSOR RIGHT]",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB1C",
    "hex1": "D0",
    "hex2": "F2",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AB10",
    "comment": "loop, branch always",
    "parent": "print_crlf",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_crlf)"
  },
  {
    "addr": "AB1E",
    "hex1": "20",
    "hex2": "87",
    "hex3": "B4",
    "opcode": "JSR",
    "argument": "$B487",
    "comment": "print \" terminated string to utility pointer",
    "desc": "print null terminated string",
    "parent": "this",
    "entry": true,
    "label": "print_null_terminate"
  },
  {
    "addr": "AB21",
    "hex1": "20",
    "hex2": "A6",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B6A6",
    "comment": "pop string off descriptor stack, or from top of string space returns with A = length, X = pointer low byte, Y = pointer high byte",
    "desc": "print string from utility pointer",
    "parent": "this",
    "entry": true,
    "label": "print_string_from_ut"
  },
  {
    "addr": "AB24",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy length",
    "parent": "print_string_from_ut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_from_ut)"
  },
  {
    "addr": "AB25",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "print_string_from_ut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_from_ut)"
  },
  {
    "addr": "AB27",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment length, for pre decrement loop",
    "parent": "print_string_from_ut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_from_ut)"
  },
  {
    "addr": "AB28",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement length",
    "parent": "print_string_from_ut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_from_ut)"
  },
  {
    "addr": "AB29",
    "hex1": "F0",
    "hex2": "BC",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AAE7",
    "comment": "exit if done",
    "parent": "print_string_from_ut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_from_ut)"
  },
  {
    "addr": "AB2B",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get byte from string",
    "parent": "print_string_from_ut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_from_ut)"
  },
  {
    "addr": "AB2D",
    "hex1": "20",
    "hex2": "47",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB47",
    "comment": "print the character",
    "parent": "print_string_from_ut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_from_ut)"
  },
  {
    "addr": "AB30",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "print_string_from_ut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_from_ut)"
  },
  {
    "addr": "AB31",
    "hex1": "C9",
    "hex2": "0D",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$0D",
    "comment": "compare byte with [CR]",
    "parent": "print_string_from_ut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_from_ut)"
  },
  {
    "addr": "AB33",
    "hex1": "D0",
    "hex2": "F3",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AB28",
    "comment": "loop if not [CR]",
    "parent": "print_string_from_ut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_from_ut)"
  },
  {
    "addr": "AB35",
    "hex1": "20",
    "hex2": "E5",
    "hex3": "AA",
    "opcode": "JSR",
    "argument": "$AAE5",
    "comment": "toggle A, EOR #$FF. what is the point of this ??",
    "parent": "print_string_from_ut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_from_ut)"
  },
  {
    "addr": "AB38",
    "hex1": "4C",
    "hex2": "28",
    "hex3": "AB",
    "opcode": "JMP",
    "argument": "$AB28",
    "comment": "loop",
    "parent": "print_string_from_ut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_from_ut)"
  },
  {
    "addr": "AB3B",
    "hex1": "A5",
    "hex2": "13",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$13",
    "comment": "get current I/O channel",
    "desc": "print [SPACE] or [CURSOR RIGHT]",
    "parent": "this",
    "entry": true,
    "label": "print_space_or_curso"
  },
  {
    "addr": "AB3D",
    "hex1": "F0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AB42",
    "comment": "if default channel go output [CURSOR RIGHT]",
    "parent": "print_space_or_curso",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_space_or_curso)"
  },
  {
    "addr": "AB3F",
    "hex1": "A9",
    "hex2": "20",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$20",
    "comment": "else output [SPACE]",
    "parent": "print_space_or_curso",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_space_or_curso)"
  },
  {
    "addr": "AB41",
    "hex1": "2C",
    "hex2": "",
    "hex3": null,
    "opcode": ".BY",
    "argument": "E $2C",
    "comment": "makes next line BIT $1DA9",
    "parent": "print_space_or_curso",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_space_or_curso)"
  },
  {
    "addr": "AB42",
    "hex1": "A9",
    "hex2": "1D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$1D",
    "comment": "set [CURSOR RIGHT]",
    "parent": "print_space_or_curso",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_space_or_curso)"
  },
  {
    "addr": "AB44",
    "hex1": "2C",
    "hex2": "",
    "hex3": null,
    "opcode": ".BY",
    "argument": "E $2C",
    "comment": "makes next line BIT $3FA9",
    "parent": "print_space_or_curso",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_space_or_curso)"
  },
  {
    "addr": "AB45",
    "hex1": "A9",
    "hex2": "3F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$3F",
    "comment": "set \"?\"",
    "desc": "print \"?\"",
    "parent": "this",
    "entry": true,
    "label": "print_"
  },
  {
    "addr": "AB47",
    "hex1": "20",
    "hex2": "0C",
    "hex3": "E1",
    "opcode": "JSR",
    "argument": "$E10C",
    "comment": "output character to channel with error check",
    "desc": "print character",
    "parent": "this",
    "entry": true,
    "label": "print_character"
  },
  {
    "addr": "AB4A",
    "hex1": "29",
    "hex2": "FF",
    "hex3": null,
    "opcode": "AND",
    "argument": "#$FF",
    "comment": "set the flags on A",
    "parent": "print_character",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_character)"
  },
  {
    "addr": "AB4C",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "print_character",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_character)"
  },
  {
    "addr": "AB4D",
    "hex1": "A5",
    "hex2": "11",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$11",
    "comment": "get INPUT mode flag, $00 = INPUT, $40 = GET, $98 = READ",
    "desc": "bad input routine",
    "parent": "this",
    "entry": true,
    "label": "bad_input_routine"
  },
  {
    "addr": "AB4F",
    "hex1": "F0",
    "hex2": "11",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AB62",
    "comment": "branch if INPUT",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB51",
    "hex1": "30",
    "hex2": "04",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$AB57",
    "comment": "branch if READ else was GET",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB53",
    "hex1": "A0",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$FF",
    "comment": "set current line high byte to -1, indicate immediate mode",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB55",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AB5B",
    "comment": "branch always",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB57",
    "hex1": "A5",
    "hex2": "3F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$3F",
    "comment": "get current DATA line number low byte",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB59",
    "hex1": "A4",
    "hex2": "40",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$40",
    "comment": "get current DATA line number high byte",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB5B",
    "hex1": "85",
    "hex2": "39",
    "hex3": null,
    "opcode": "STA",
    "argument": "$39",
    "comment": "set current line number low byte",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB5D",
    "hex1": "84",
    "hex2": "3A",
    "hex3": null,
    "opcode": "STY",
    "argument": "$3A",
    "comment": "set current line number high byte",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB5F",
    "hex1": "4C",
    "hex2": "08",
    "hex3": "AF",
    "opcode": "JMP",
    "argument": "$AF08",
    "comment": "do syntax error then warm start was INPUT",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB62",
    "hex1": "A5",
    "hex2": "13",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$13",
    "comment": "get current I/O channel",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB64",
    "hex1": "F0",
    "hex2": "05",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AB6B",
    "comment": "branch if default channel",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB66",
    "hex1": "A2",
    "hex2": "18",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$18",
    "comment": "else error $18, file data error",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB68",
    "hex1": "4C",
    "hex2": "37",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A437",
    "comment": "do error #X then warm start",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB6B",
    "hex1": "A9",
    "hex2": "0C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$0C",
    "comment": "set \"?REDO FROM START\" pointer low byte",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB6D",
    "hex1": "A0",
    "hex2": "AD",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$AD",
    "comment": "set \"?REDO FROM START\" pointer high byte",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB6F",
    "hex1": "20",
    "hex2": "1E",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB1E",
    "comment": "print null terminated string",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB72",
    "hex1": "A5",
    "hex2": "3D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$3D",
    "comment": "get continue pointer low byte",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB74",
    "hex1": "A4",
    "hex2": "3E",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$3E",
    "comment": "get continue pointer high byte",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB76",
    "hex1": "85",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB78",
    "hex1": "84",
    "hex2": "7B",
    "hex3": null,
    "opcode": "STY",
    "argument": "$7B",
    "comment": "save BASIC execute pointer high byte",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB7A",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "bad_input_routine",
    "entry": false,
    "label": "n/a",
    "desc": "(part of bad_input_routine)"
  },
  {
    "addr": "AB7B",
    "hex1": "20",
    "hex2": "A6",
    "hex3": "B3",
    "opcode": "JSR",
    "argument": "$B3A6",
    "comment": "check not Direct, back here if ok",
    "desc": "perform GET",
    "parent": "this",
    "entry": true,
    "label": "perform_get"
  },
  {
    "addr": "AB7E",
    "hex1": "C9",
    "hex2": "23",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$23",
    "comment": "compare with \"#\"",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AB80",
    "hex1": "D0",
    "hex2": "10",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AB92",
    "comment": "branch if not GET#",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AB82",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AB85",
    "hex1": "20",
    "hex2": "9E",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B79E",
    "comment": "get byte parameter",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AB88",
    "hex1": "A9",
    "hex2": "2C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$2C",
    "comment": "set \",\"",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AB8A",
    "hex1": "20",
    "hex2": "FF",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFF",
    "comment": "scan for CHR$(A), else do syntax error then warm start",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AB8D",
    "hex1": "86",
    "hex2": "13",
    "hex3": null,
    "opcode": "STX",
    "argument": "$13",
    "comment": "set current I/O channel",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AB8F",
    "hex1": "20",
    "hex2": "1E",
    "hex3": "E1",
    "opcode": "JSR",
    "argument": "$E11E",
    "comment": "open channel for input with error check",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AB92",
    "hex1": "A2",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$01",
    "comment": "set pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AB94",
    "hex1": "A0",
    "hex2": "02",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$02",
    "comment": "set pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AB96",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AB98",
    "hex1": "8D",
    "hex2": "01",
    "hex3": "02",
    "opcode": "STA",
    "argument": "$0201",
    "comment": "ensure null terminator",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AB9B",
    "hex1": "A9",
    "hex2": "40",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$40",
    "comment": "input mode = GET",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AB9D",
    "hex1": "20",
    "hex2": "0F",
    "hex3": "AC",
    "opcode": "JSR",
    "argument": "$AC0F",
    "comment": "perform the GET part of READ",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ABA0",
    "hex1": "A6",
    "hex2": "13",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$13",
    "comment": "get current I/O channel",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ABA2",
    "hex1": "D0",
    "hex2": "13",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$ABB7",
    "comment": "if not default channel go do channel close and return",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ABA4",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ABA5",
    "hex1": "20",
    "hex2": "9E",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B79E",
    "comment": "get byte parameter",
    "desc": "perform INPUT#",
    "parent": "this",
    "entry": true,
    "label": "perform_input"
  },
  {
    "addr": "ABA8",
    "hex1": "A9",
    "hex2": "2C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$2C",
    "comment": "set \",\"",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABAA",
    "hex1": "20",
    "hex2": "FF",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFF",
    "comment": "scan for CHR$(A), else do syntax error then warm start",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABAD",
    "hex1": "86",
    "hex2": "13",
    "hex3": null,
    "opcode": "STX",
    "argument": "$13",
    "comment": "set current I/O channel",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABAF",
    "hex1": "20",
    "hex2": "1E",
    "hex3": "E1",
    "opcode": "JSR",
    "argument": "$E11E",
    "comment": "open channel for input with error check",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABB2",
    "hex1": "20",
    "hex2": "CE",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$ABCE",
    "comment": "perform INPUT with no prompt string",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABB5",
    "hex1": "A5",
    "hex2": "13",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$13",
    "comment": "get current I/O channel",
    "desc": "close input and output channels",
    "parent": "this",
    "entry": true,
    "label": "close_input_and_outp"
  },
  {
    "addr": "ABB7",
    "hex1": "20",
    "hex2": "CC",
    "hex3": "FF",
    "opcode": "JSR",
    "argument": "$FFCC",
    "comment": "close input and output channels",
    "parent": "close_input_and_outp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of close_input_and_outp)"
  },
  {
    "addr": "ABBA",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "clear X",
    "parent": "close_input_and_outp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of close_input_and_outp)"
  },
  {
    "addr": "ABBC",
    "hex1": "86",
    "hex2": "13",
    "hex3": null,
    "opcode": "STX",
    "argument": "$13",
    "comment": "clear current I/O channel, flag default",
    "parent": "close_input_and_outp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of close_input_and_outp)"
  },
  {
    "addr": "ABBE",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "close_input_and_outp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of close_input_and_outp)"
  },
  {
    "addr": "ABBF",
    "hex1": "C9",
    "hex2": "22",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$22",
    "comment": "compare next byte with open quote",
    "desc": "perform INPUT",
    "parent": "this",
    "entry": true,
    "label": "perform_input"
  },
  {
    "addr": "ABC1",
    "hex1": "D0",
    "hex2": "0B",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$ABCE",
    "comment": "if no prompt string just do INPUT",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABC3",
    "hex1": "20",
    "hex2": "BD",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEBD",
    "comment": "print \"...\" string",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABC6",
    "hex1": "A9",
    "hex2": "3B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$3B",
    "comment": "load A with \";\"",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABC8",
    "hex1": "20",
    "hex2": "FF",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFF",
    "comment": "scan for CHR$(A), else do syntax error then warm start",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABCB",
    "hex1": "20",
    "hex2": "21",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB21",
    "comment": "print string from utility pointer done with prompt, now get data",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABCE",
    "hex1": "20",
    "hex2": "A6",
    "hex3": "B3",
    "opcode": "JSR",
    "argument": "$B3A6",
    "comment": "check not Direct, back here if ok",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABD1",
    "hex1": "A9",
    "hex2": "2C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$2C",
    "comment": "set \",\"",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABD3",
    "hex1": "8D",
    "hex2": "FF",
    "hex3": "01",
    "opcode": "STA",
    "argument": "$01FF",
    "comment": "save to start of buffer - 1",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABD6",
    "hex1": "20",
    "hex2": "F9",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$ABF9",
    "comment": "print \"? \" and get BASIC input",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABD9",
    "hex1": "A5",
    "hex2": "13",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$13",
    "comment": "get current I/O channel",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABDB",
    "hex1": "F0",
    "hex2": "0D",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$ABEA",
    "comment": "branch if default I/O channel",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABDD",
    "hex1": "20",
    "hex2": "B7",
    "hex3": "FF",
    "opcode": "JSR",
    "argument": "$FFB7",
    "comment": "read I/O status word",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABE0",
    "hex1": "29",
    "hex2": "02",
    "hex3": null,
    "opcode": "AND",
    "argument": "#$02",
    "comment": "mask no DSR/timeout",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABE2",
    "hex1": "F0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$ABEA",
    "comment": "branch if not error",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABE4",
    "hex1": "20",
    "hex2": "B5",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$ABB5",
    "comment": "close input and output channels",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABE7",
    "hex1": "4C",
    "hex2": "F8",
    "hex3": "A8",
    "opcode": "JMP",
    "argument": "$A8F8",
    "comment": "perform DATA",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABEA",
    "hex1": "AD",
    "hex2": "00",
    "hex3": "02",
    "opcode": "LDA",
    "argument": "$0200",
    "comment": "get first byte in input buffer",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABED",
    "hex1": "D0",
    "hex2": "1E",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AC0D",
    "comment": "branch if not null else ..",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABEF",
    "hex1": "A5",
    "hex2": "13",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$13",
    "comment": "get current I/O channel",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABF1",
    "hex1": "D0",
    "hex2": "E3",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$ABD6",
    "comment": "if not default channel go get BASIC input",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABF3",
    "hex1": "20",
    "hex2": "06",
    "hex3": "A9",
    "opcode": "JSR",
    "argument": "$A906",
    "comment": "scan for next BASIC statement ([:] or [EOL])",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABF6",
    "hex1": "4C",
    "hex2": "FB",
    "hex3": "A8",
    "opcode": "JMP",
    "argument": "$A8FB",
    "comment": "add Y to the BASIC execute pointer and return",
    "parent": "perform_input",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_input)"
  },
  {
    "addr": "ABF9",
    "hex1": "A5",
    "hex2": "13",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$13",
    "comment": "get current I/O channel",
    "desc": "print \"? \" and get BASIC input",
    "parent": "this",
    "entry": true,
    "label": "print_and_get_basic_"
  },
  {
    "addr": "ABFB",
    "hex1": "D0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AC03",
    "comment": "skip \"?\" prompt if not default channel",
    "parent": "print_and_get_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_and_get_basic_)"
  },
  {
    "addr": "ABFD",
    "hex1": "20",
    "hex2": "45",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB45",
    "comment": "print \"?\"",
    "parent": "print_and_get_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_and_get_basic_)"
  },
  {
    "addr": "AC00",
    "hex1": "20",
    "hex2": "3B",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB3B",
    "comment": "print [SPACE] or [CURSOR RIGHT]",
    "parent": "print_and_get_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_and_get_basic_)"
  },
  {
    "addr": "AC03",
    "hex1": "4C",
    "hex2": "60",
    "hex3": "A5",
    "opcode": "JMP",
    "argument": "$A560",
    "comment": "call for BASIC input and return",
    "parent": "print_and_get_basic_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_and_get_basic_)"
  },
  {
    "addr": "AC06",
    "hex1": "A6",
    "hex2": "41",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$41",
    "comment": "get DATA pointer low byte",
    "desc": "perform READ",
    "parent": "this",
    "entry": true,
    "label": "perform_read"
  },
  {
    "addr": "AC08",
    "hex1": "A4",
    "hex2": "42",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$42",
    "comment": "get DATA pointer high byte",
    "parent": "perform_read",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_read)"
  },
  {
    "addr": "AC0A",
    "hex1": "A9",
    "hex2": "98",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$98",
    "comment": "set input mode = READ",
    "parent": "perform_read",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_read)"
  },
  {
    "addr": "AC0C",
    "hex1": "2C",
    "hex2": "",
    "hex3": null,
    "opcode": ".BY",
    "argument": "E $2C",
    "comment": "makes next line BIT $00A9",
    "parent": "perform_read",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_read)"
  },
  {
    "addr": "AC0D",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "set input mode = INPUT",
    "parent": "perform_read",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_read)"
  },
  {
    "addr": "AC0F",
    "hex1": "85",
    "hex2": "11",
    "hex3": null,
    "opcode": "STA",
    "argument": "$11",
    "comment": "set input mode flag, $00 = INPUT, $40 = GET, $98 = READ",
    "desc": "perform GET",
    "parent": "this",
    "entry": true,
    "label": "perform_get"
  },
  {
    "addr": "AC11",
    "hex1": "86",
    "hex2": "43",
    "hex3": null,
    "opcode": "STX",
    "argument": "$43",
    "comment": "save READ pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC13",
    "hex1": "84",
    "hex2": "44",
    "hex3": null,
    "opcode": "STY",
    "argument": "$44",
    "comment": "save READ pointer high byte READ, GET or INPUT next variable from list",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC15",
    "hex1": "20",
    "hex2": "8B",
    "hex3": "B0",
    "opcode": "JSR",
    "argument": "$B08B",
    "comment": "get variable address",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC18",
    "hex1": "85",
    "hex2": "49",
    "hex3": null,
    "opcode": "STA",
    "argument": "$49",
    "comment": "save address low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC1A",
    "hex1": "84",
    "hex2": "4A",
    "hex3": null,
    "opcode": "STY",
    "argument": "$4A",
    "comment": "save address high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC1C",
    "hex1": "A5",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$7A",
    "comment": "get BASIC execute pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC1E",
    "hex1": "A4",
    "hex2": "7B",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$7B",
    "comment": "get BASIC execute pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC20",
    "hex1": "85",
    "hex2": "4B",
    "hex3": null,
    "opcode": "STA",
    "argument": "$4B",
    "comment": "save BASIC execute pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC22",
    "hex1": "84",
    "hex2": "4C",
    "hex3": null,
    "opcode": "STY",
    "argument": "$4C",
    "comment": "save BASIC execute pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC24",
    "hex1": "A6",
    "hex2": "43",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$43",
    "comment": "get READ pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC26",
    "hex1": "A4",
    "hex2": "44",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$44",
    "comment": "get READ pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC28",
    "hex1": "86",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STX",
    "argument": "$7A",
    "comment": "save as BASIC execute pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC2A",
    "hex1": "84",
    "hex2": "7B",
    "hex3": null,
    "opcode": "STY",
    "argument": "$7B",
    "comment": "save as BASIC execute pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC2C",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC2F",
    "hex1": "D0",
    "hex2": "20",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AC51",
    "comment": "branch if not null pointer was to null entry",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC31",
    "hex1": "24",
    "hex2": "11",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$11",
    "comment": "test input mode flag, $00 = INPUT, $40 = GET, $98 = READ",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC33",
    "hex1": "50",
    "hex2": "0C",
    "hex3": null,
    "opcode": "BVC",
    "argument": "$AC41",
    "comment": "branch if not GET else was GET",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC35",
    "hex1": "20",
    "hex2": "24",
    "hex3": "E1",
    "opcode": "JSR",
    "argument": "$E124",
    "comment": "get character from input device with error check",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC38",
    "hex1": "8D",
    "hex2": "00",
    "hex3": "02",
    "opcode": "STA",
    "argument": "$0200",
    "comment": "save to buffer",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC3B",
    "hex1": "A2",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$FF",
    "comment": "set pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC3D",
    "hex1": "A0",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$01",
    "comment": "set pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC3F",
    "hex1": "D0",
    "hex2": "0C",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AC4D",
    "comment": "go interpret single character",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC41",
    "hex1": "30",
    "hex2": "75",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$ACB8",
    "comment": "branch if READ else was INPUT",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC43",
    "hex1": "A5",
    "hex2": "13",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$13",
    "comment": "get current I/O channel",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC45",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AC4A",
    "comment": "skip \"?\" prompt if not default channel",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC47",
    "hex1": "20",
    "hex2": "45",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$AB45",
    "comment": "print \"?\"",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC4A",
    "hex1": "20",
    "hex2": "F9",
    "hex3": "AB",
    "opcode": "JSR",
    "argument": "$ABF9",
    "comment": "print \"? \" and get BASIC input",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC4D",
    "hex1": "86",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STX",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC4F",
    "hex1": "84",
    "hex2": "7B",
    "hex3": null,
    "opcode": "STY",
    "argument": "$7B",
    "comment": "save BASIC execute pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC51",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory, execute pointer now points to start of next data or null terminator",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC54",
    "hex1": "24",
    "hex2": "0D",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$0D",
    "comment": "test data type flag, $FF = string, $00 = numeric",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC56",
    "hex1": "10",
    "hex2": "31",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$AC89",
    "comment": "branch if numeric type is string",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC58",
    "hex1": "24",
    "hex2": "11",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$11",
    "comment": "test INPUT mode flag, $00 = INPUT, $40 = GET, $98 = READ",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC5A",
    "hex1": "50",
    "hex2": "09",
    "hex3": null,
    "opcode": "BVC",
    "argument": "$AC65",
    "comment": "branch if not GET else do string GET",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC5C",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "clear X ??",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC5D",
    "hex1": "86",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STX",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC5F",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC61",
    "hex1": "85",
    "hex2": "07",
    "hex3": null,
    "opcode": "STA",
    "argument": "$07",
    "comment": "clear search character",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC63",
    "hex1": "F0",
    "hex2": "0C",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AC71",
    "comment": "branch always is string INPUT or string READ",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC65",
    "hex1": "85",
    "hex2": "07",
    "hex3": null,
    "opcode": "STA",
    "argument": "$07",
    "comment": "save search character",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC67",
    "hex1": "C9",
    "hex2": "22",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$22",
    "comment": "compare with \"",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC69",
    "hex1": "F0",
    "hex2": "07",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AC72",
    "comment": "branch if quote string is not in quotes so \":\", \",\" or $00 are the termination characters",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC6B",
    "hex1": "A9",
    "hex2": "3A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$3A",
    "comment": "set \":\"",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC6D",
    "hex1": "85",
    "hex2": "07",
    "hex3": null,
    "opcode": "STA",
    "argument": "$07",
    "comment": "set search character",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC6F",
    "hex1": "A9",
    "hex2": "2C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$2C",
    "comment": "set \",\"",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC71",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC72",
    "hex1": "85",
    "hex2": "08",
    "hex3": null,
    "opcode": "STA",
    "argument": "$08",
    "comment": "set scan quotes flag",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC74",
    "hex1": "A5",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$7A",
    "comment": "get BASIC execute pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC76",
    "hex1": "A4",
    "hex2": "7B",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$7B",
    "comment": "get BASIC execute pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC78",
    "hex1": "69",
    "hex2": "00",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$00",
    "comment": "add to pointer low byte. this add increments the pointer if the mode is INPUT or READ and the data is a \"...\" string",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC7A",
    "hex1": "90",
    "hex2": "01",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AC7D",
    "comment": "branch if no rollover",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC7C",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "else increment pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC7D",
    "hex1": "20",
    "hex2": "8D",
    "hex3": "B4",
    "opcode": "JSR",
    "argument": "$B48D",
    "comment": "print string to utility pointer",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC80",
    "hex1": "20",
    "hex2": "E2",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B7E2",
    "comment": "restore BASIC execute pointer from temp",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC83",
    "hex1": "20",
    "hex2": "DA",
    "hex3": "A9",
    "opcode": "JSR",
    "argument": "$A9DA",
    "comment": "perform string LET",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC86",
    "hex1": "4C",
    "hex2": "91",
    "hex3": "AC",
    "opcode": "JMP",
    "argument": "$AC91",
    "comment": "continue processing command GET, INPUT or READ is numeric",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC89",
    "hex1": "20",
    "hex2": "F3",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BCF3",
    "comment": "get FAC1 from string",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC8C",
    "hex1": "A5",
    "hex2": "0E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$0E",
    "comment": "get data type flag, $80 = integer, $00 = float",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC8E",
    "hex1": "20",
    "hex2": "C2",
    "hex3": "A9",
    "opcode": "JSR",
    "argument": "$A9C2",
    "comment": "assign value to numeric variable",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC91",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC94",
    "hex1": "F0",
    "hex2": "07",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AC9D",
    "comment": "branch if \":\" or [EOL]",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC96",
    "hex1": "C9",
    "hex2": "2C",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$2C",
    "comment": "comparte with \",\"",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC98",
    "hex1": "F0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AC9D",
    "comment": "branch if \",\"",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC9A",
    "hex1": "4C",
    "hex2": "4D",
    "hex3": "AB",
    "opcode": "JMP",
    "argument": "$AB4D",
    "comment": "else go do bad input routine string terminated with \":\", \",\" or $00",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC9D",
    "hex1": "A5",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$7A",
    "comment": "get BASIC execute pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "AC9F",
    "hex1": "A4",
    "hex2": "7B",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$7B",
    "comment": "get BASIC execute pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACA1",
    "hex1": "85",
    "hex2": "43",
    "hex3": null,
    "opcode": "STA",
    "argument": "$43",
    "comment": "save READ pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACA3",
    "hex1": "84",
    "hex2": "44",
    "hex3": null,
    "opcode": "STY",
    "argument": "$44",
    "comment": "save READ pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACA5",
    "hex1": "A5",
    "hex2": "4B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$4B",
    "comment": "get saved BASIC execute pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACA7",
    "hex1": "A4",
    "hex2": "4C",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$4C",
    "comment": "get saved BASIC execute pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACA9",
    "hex1": "85",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7A",
    "comment": "restore BASIC execute pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACAB",
    "hex1": "84",
    "hex2": "7B",
    "hex3": null,
    "opcode": "STY",
    "argument": "$7B",
    "comment": "restore BASIC execute pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACAD",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACB0",
    "hex1": "F0",
    "hex2": "2D",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$ACDF",
    "comment": "branch if \":\" or [EOL]",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACB2",
    "hex1": "20",
    "hex2": "FD",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFD",
    "comment": "scan for \",\", else do syntax error then warm start",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACB5",
    "hex1": "4C",
    "hex2": "15",
    "hex3": "AC",
    "opcode": "JMP",
    "argument": "$AC15",
    "comment": "go READ or INPUT next variable from list was READ",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACB8",
    "hex1": "20",
    "hex2": "06",
    "hex3": "A9",
    "opcode": "JSR",
    "argument": "$A906",
    "comment": "scan for next BASIC statement ([:] or [EOL])",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACBB",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index to next byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACBC",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy byte to X",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACBD",
    "hex1": "D0",
    "hex2": "12",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$ACD1",
    "comment": "branch if \":\"",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACBF",
    "hex1": "A2",
    "hex2": "0D",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$0D",
    "comment": "else set error $0D, out of data error",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACC1",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index to next line pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACC2",
    "hex1": "B1",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($7A),Y",
    "comment": "get next line pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACC4",
    "hex1": "F0",
    "hex2": "6C",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AD32",
    "comment": "branch if program end, eventually does error X",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACC6",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACC7",
    "hex1": "B1",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($7A),Y",
    "comment": "get next line # low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACC9",
    "hex1": "85",
    "hex2": "3F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$3F",
    "comment": "save current DATA line low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACCB",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACCC",
    "hex1": "B1",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($7A),Y",
    "comment": "get next line # high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACCE",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACCF",
    "hex1": "85",
    "hex2": "40",
    "hex3": null,
    "opcode": "STA",
    "argument": "$40",
    "comment": "save current DATA line high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACD1",
    "hex1": "20",
    "hex2": "FB",
    "hex3": "A8",
    "opcode": "JSR",
    "argument": "$A8FB",
    "comment": "add Y to the BASIC execute pointer",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACD4",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACD7",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy the byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACD8",
    "hex1": "E0",
    "hex2": "83",
    "hex3": null,
    "opcode": "CPX",
    "argument": "#$83",
    "comment": "compare it with token for DATA",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACDA",
    "hex1": "D0",
    "hex2": "DC",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$ACB8",
    "comment": "loop if not DATA",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACDC",
    "hex1": "4C",
    "hex2": "51",
    "hex3": "AC",
    "opcode": "JMP",
    "argument": "$AC51",
    "comment": "continue evaluating READ",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACDF",
    "hex1": "A5",
    "hex2": "43",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$43",
    "comment": "get READ pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACE1",
    "hex1": "A4",
    "hex2": "44",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$44",
    "comment": "get READ pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACE3",
    "hex1": "A6",
    "hex2": "11",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$11",
    "comment": "get INPUT mode flag, $00 = INPUT, $40 = GET, $98 = READ",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACE5",
    "hex1": "10",
    "hex2": "03",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$ACEA",
    "comment": "branch if INPUT or GET",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACE7",
    "hex1": "4C",
    "hex2": "27",
    "hex3": "A8",
    "opcode": "JMP",
    "argument": "$A827",
    "comment": "else set data pointer and exit",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACEA",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACEC",
    "hex1": "B1",
    "hex2": "43",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($43),Y",
    "comment": "get READ byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACEE",
    "hex1": "F0",
    "hex2": "0B",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$ACFB",
    "comment": "exit if [EOL]",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACF0",
    "hex1": "A5",
    "hex2": "13",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$13",
    "comment": "get current I/O channel",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACF2",
    "hex1": "D0",
    "hex2": "07",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$ACFB",
    "comment": "exit if not default channel",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACF4",
    "hex1": "A9",
    "hex2": "FC",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$FC",
    "comment": "set \"?EXTRA IGNORED\" pointer low byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACF6",
    "hex1": "A0",
    "hex2": "AC",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$AC",
    "comment": "set \"?EXTRA IGNORED\" pointer high byte",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACF8",
    "hex1": "4C",
    "hex2": "1E",
    "hex3": "AB",
    "opcode": "JMP",
    "argument": "$AB1E",
    "comment": "print null terminated string",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACFB",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "perform_get",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_get)"
  },
  {
    "addr": "ACFC",
    "hex1": "3F",
    "hex2": "45",
    "hex3": "58",
    "opcode": "54",
    "argument": "2 41 20 49",
    "comment": "'?extra ignored'",
    "desc": "input error messages",
    "parent": "this",
    "entry": true,
    "label": "input_error_messages"
  },
  {
    "addr": "AD04",
    "hex1": "47",
    "hex2": "4E",
    "hex3": "4F",
    "opcode": "52",
    "argument": "5 44 0D 00",
    "comment": "",
    "parent": "input_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of input_error_messages)"
  },
  {
    "addr": "AD0C",
    "hex1": "3F",
    "hex2": "52",
    "hex3": "45",
    "opcode": "44",
    "argument": "F 20 46 52",
    "comment": "'?redo from start'",
    "parent": "input_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of input_error_messages)"
  },
  {
    "addr": "AD14",
    "hex1": "4F",
    "hex2": "4D",
    "hex3": "20",
    "opcode": "53",
    "argument": "4 41 52 54",
    "comment": "",
    "parent": "input_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of input_error_messages)"
  },
  {
    "addr": "AD1C",
    "hex1": "0D",
    "hex2": "00",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "",
    "parent": "input_error_messages",
    "entry": false,
    "label": "n/a",
    "desc": "(part of input_error_messages)"
  },
  {
    "addr": "AD1E",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AD24",
    "comment": "branch if NEXT variable",
    "desc": "perform NEXT",
    "parent": "this",
    "entry": true,
    "label": "perform_next"
  },
  {
    "addr": "AD20",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "else clear Y",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD22",
    "hex1": "F0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AD27",
    "comment": "branch always NEXT variable",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD24",
    "hex1": "20",
    "hex2": "8B",
    "hex3": "B0",
    "opcode": "JSR",
    "argument": "$B08B",
    "comment": "get variable address",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD27",
    "hex1": "85",
    "hex2": "49",
    "hex3": null,
    "opcode": "STA",
    "argument": "$49",
    "comment": "save FOR/NEXT variable pointer low byte",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD29",
    "hex1": "84",
    "hex2": "4A",
    "hex3": null,
    "opcode": "STY",
    "argument": "$4A",
    "comment": "save FOR/NEXT variable pointer high byte (high byte cleared if no variable defined)",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD2B",
    "hex1": "20",
    "hex2": "8A",
    "hex3": "A3",
    "opcode": "JSR",
    "argument": "$A38A",
    "comment": "search the stack for FOR or GOSUB activity",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD2E",
    "hex1": "F0",
    "hex2": "05",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AD35",
    "comment": "branch if FOR, this variable, found",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD30",
    "hex1": "A2",
    "hex2": "0A",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$0A",
    "comment": "else set error $0A, next without for error",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD32",
    "hex1": "4C",
    "hex2": "37",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A437",
    "comment": "do error #X then warm start found this FOR variable",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD35",
    "hex1": "9A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXS",
    "argument": "",
    "comment": "update stack pointer",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD36",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy stack pointer",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD37",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD38",
    "hex1": "69",
    "hex2": "04",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$04",
    "comment": "point to STEP value",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD3A",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD3B",
    "hex1": "69",
    "hex2": "06",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$06",
    "comment": "point to TO value",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD3D",
    "hex1": "85",
    "hex2": "24",
    "hex3": null,
    "opcode": "STA",
    "argument": "$24",
    "comment": "save pointer to TO variable for compare",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD3F",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "restore pointer to STEP value",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD40",
    "hex1": "A0",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$01",
    "comment": "point to stack page",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD42",
    "hex1": "20",
    "hex2": "A2",
    "hex3": "BB",
    "opcode": "JSR",
    "argument": "$BBA2",
    "comment": "unpack memory (AY) into FAC1",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD45",
    "hex1": "BA",
    "hex2": "",
    "hex3": null,
    "opcode": "TSX",
    "argument": "",
    "comment": "get stack pointer back",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD46",
    "hex1": "BD",
    "hex2": "09",
    "hex3": "01",
    "opcode": "LDA",
    "argument": "$0109,X",
    "comment": "get step sign",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD49",
    "hex1": "85",
    "hex2": "66",
    "hex3": null,
    "opcode": "STA",
    "argument": "$66",
    "comment": "save FAC1 sign (b7)",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD4B",
    "hex1": "A5",
    "hex2": "49",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$49",
    "comment": "get FOR/NEXT variable pointer low byte",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD4D",
    "hex1": "A4",
    "hex2": "4A",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$4A",
    "comment": "get FOR/NEXT variable pointer high byte",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD4F",
    "hex1": "20",
    "hex2": "67",
    "hex3": "B8",
    "opcode": "JSR",
    "argument": "$B867",
    "comment": "add FOR variable to FAC1",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD52",
    "hex1": "20",
    "hex2": "D0",
    "hex3": "BB",
    "opcode": "JSR",
    "argument": "$BBD0",
    "comment": "pack FAC1 into FOR variable",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD55",
    "hex1": "A0",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$01",
    "comment": "point to stack page",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD57",
    "hex1": "20",
    "hex2": "5D",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC5D",
    "comment": "compare FAC1 with TO value",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD5A",
    "hex1": "BA",
    "hex2": "",
    "hex3": null,
    "opcode": "TSX",
    "argument": "",
    "comment": "get stack pointer back",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD5B",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD5C",
    "hex1": "FD",
    "hex2": "09",
    "hex3": "01",
    "opcode": "SBC",
    "argument": "$0109,X",
    "comment": "subtract step sign",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD5F",
    "hex1": "F0",
    "hex2": "17",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AD78",
    "comment": "branch if =, loop complete loop back and do it all again",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD61",
    "hex1": "BD",
    "hex2": "0F",
    "hex3": "01",
    "opcode": "LDA",
    "argument": "$010F,X",
    "comment": "get FOR line low byte",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD64",
    "hex1": "85",
    "hex2": "39",
    "hex3": null,
    "opcode": "STA",
    "argument": "$39",
    "comment": "save current line number low byte",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD66",
    "hex1": "BD",
    "hex2": "10",
    "hex3": "01",
    "opcode": "LDA",
    "argument": "$0110,X",
    "comment": "get FOR line high byte",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD69",
    "hex1": "85",
    "hex2": "3A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$3A",
    "comment": "save current line number high byte",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD6B",
    "hex1": "BD",
    "hex2": "12",
    "hex3": "01",
    "opcode": "LDA",
    "argument": "$0112,X",
    "comment": "get BASIC execute pointer low byte",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD6E",
    "hex1": "85",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD70",
    "hex1": "BD",
    "hex2": "11",
    "hex3": "01",
    "opcode": "LDA",
    "argument": "$0111,X",
    "comment": "get BASIC execute pointer high byte",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD73",
    "hex1": "85",
    "hex2": "7B",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7B",
    "comment": "save BASIC execute pointer high byte",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD75",
    "hex1": "4C",
    "hex2": "AE",
    "hex3": "A7",
    "opcode": "JMP",
    "argument": "$A7AE",
    "comment": "go do interpreter inner loop NEXT loop comlete",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD78",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "stack copy to A",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD79",
    "hex1": "69",
    "hex2": "11",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$11",
    "comment": "add $12, $11 + carry, to dump FOR structure",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD7B",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy back to index",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD7C",
    "hex1": "9A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXS",
    "argument": "",
    "comment": "copy to stack pointer",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD7D",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD80",
    "hex1": "C9",
    "hex2": "2C",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$2C",
    "comment": "compare with \",\"",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD82",
    "hex1": "D0",
    "hex2": "F1",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AD75",
    "comment": "if not \",\" go do interpreter inner loop was \",\" so another NEXT variable to do",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD84",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD87",
    "hex1": "20",
    "hex2": "24",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD24",
    "comment": "do NEXT variable",
    "parent": "perform_next",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_next)"
  },
  {
    "addr": "AD8A",
    "hex1": "20",
    "hex2": "9E",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD9E",
    "comment": "evaluate expression check if source and destination are numeric",
    "desc": "evaluate expression and check type mismatch",
    "parent": "this",
    "entry": true,
    "label": "evaluate_expression_"
  },
  {
    "addr": "AD8D",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "",
    "parent": "evaluate_expression_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression_)"
  },
  {
    "addr": "AD8E",
    "hex1": "24",
    "hex2": "",
    "hex3": null,
    "opcode": ".BY",
    "argument": "E $24",
    "comment": "makes next line BIT $38 check if source and destination are string",
    "parent": "evaluate_expression_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression_)"
  },
  {
    "addr": "AD8F",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "destination is string type match check, set C for string, clear C for numeric",
    "parent": "evaluate_expression_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression_)"
  },
  {
    "addr": "AD90",
    "hex1": "24",
    "hex2": "0D",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$0D",
    "comment": "test data type flag, $FF = string, $00 = numeric",
    "parent": "evaluate_expression_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression_)"
  },
  {
    "addr": "AD92",
    "hex1": "30",
    "hex2": "03",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$AD97",
    "comment": "branch if string",
    "parent": "evaluate_expression_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression_)"
  },
  {
    "addr": "AD94",
    "hex1": "B0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$AD99",
    "comment": "if destiantion is numeric do type missmatch error",
    "parent": "evaluate_expression_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression_)"
  },
  {
    "addr": "AD96",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "evaluate_expression_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression_)"
  },
  {
    "addr": "AD97",
    "hex1": "B0",
    "hex2": "FD",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$AD96",
    "comment": "exit if destination is string do type missmatch error",
    "parent": "evaluate_expression_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression_)"
  },
  {
    "addr": "AD99",
    "hex1": "A2",
    "hex2": "16",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$16",
    "comment": "error code $16, type missmatch error",
    "parent": "evaluate_expression_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression_)"
  },
  {
    "addr": "AD9B",
    "hex1": "4C",
    "hex2": "37",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A437",
    "comment": "do error #X then warm start",
    "parent": "evaluate_expression_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression_)"
  },
  {
    "addr": "AD9E",
    "hex1": "A6",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$7A",
    "comment": "get BASIC execute pointer low byte",
    "desc": "evaluate expression",
    "parent": "this",
    "entry": true,
    "label": "evaluate_expression"
  },
  {
    "addr": "ADA0",
    "hex1": "D0",
    "hex2": "02",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$ADA4",
    "comment": "skip next if not zero",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADA2",
    "hex1": "C6",
    "hex2": "7B",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$7B",
    "comment": "else decrement BASIC execute pointer high byte",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADA4",
    "hex1": "C6",
    "hex2": "7A",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$7A",
    "comment": "decrement BASIC execute pointer low byte",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADA6",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "set null precedence, flag done",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADA8",
    "hex1": "24",
    "hex2": "",
    "hex3": null,
    "opcode": ".BY",
    "argument": "E $24",
    "comment": "makes next line BIT $48",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADA9",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push compare evaluation byte if branch to here",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADAA",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy precedence byte",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADAB",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push precedence byte",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADAC",
    "hex1": "A9",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$01",
    "comment": "2 bytes",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADAE",
    "hex1": "20",
    "hex2": "FB",
    "hex3": "A3",
    "opcode": "JSR",
    "argument": "$A3FB",
    "comment": "check room on stack for A*2 bytes",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADB1",
    "hex1": "20",
    "hex2": "83",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AE83",
    "comment": "get value from line",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADB4",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADB6",
    "hex1": "85",
    "hex2": "4D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$4D",
    "comment": "clear comparrison evaluation flag",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADB8",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADBB",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADBC",
    "hex1": "E9",
    "hex2": "B1",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$B1",
    "comment": "subtract the token for \">\"",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADBE",
    "hex1": "90",
    "hex2": "17",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$ADD7",
    "comment": "branch if < \">\"",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADC0",
    "hex1": "C9",
    "hex2": "03",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$03",
    "comment": "compare with \">\" to +3",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADC2",
    "hex1": "B0",
    "hex2": "13",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$ADD7",
    "comment": "branch if >= 3 was token for \">\" \"=\" or \"<\"",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADC4",
    "hex1": "C9",
    "hex2": "01",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$01",
    "comment": "compare with token for =",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADC6",
    "hex1": "2A",
    "hex2": "",
    "hex3": null,
    "opcode": "ROL",
    "argument": "",
    "comment": "*2, b0 = carry (=1 if token was = or <)",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADC7",
    "hex1": "49",
    "hex2": "01",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$01",
    "comment": "toggle b0",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADC9",
    "hex1": "45",
    "hex2": "4D",
    "hex3": null,
    "opcode": "EOR",
    "argument": "$4D",
    "comment": "EOR with comparrison evaluation flag",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADCB",
    "hex1": "C5",
    "hex2": "4D",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$4D",
    "comment": "compare with comparrison evaluation flag",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADCD",
    "hex1": "90",
    "hex2": "61",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AE30",
    "comment": "if < saved flag do syntax error then warm start",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADCF",
    "hex1": "85",
    "hex2": "4D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$4D",
    "comment": "save new comparrison evaluation flag",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADD1",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADD4",
    "hex1": "4C",
    "hex2": "BB",
    "hex3": "AD",
    "opcode": "JMP",
    "argument": "$ADBB",
    "comment": "go do next character",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADD7",
    "hex1": "A6",
    "hex2": "4D",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$4D",
    "comment": "get comparrison evaluation flag",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADD9",
    "hex1": "D0",
    "hex2": "2C",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AE07",
    "comment": "branch if compare function",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADDB",
    "hex1": "B0",
    "hex2": "7B",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$AE58",
    "comment": "go do functions else was < TK_GT so is operator or lower",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADDD",
    "hex1": "69",
    "hex2": "07",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$07",
    "comment": "add # of operators (+, -, *, /, ^, AND or OR)",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADDF",
    "hex1": "90",
    "hex2": "77",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AE58",
    "comment": "branch if < + operator carry was set so token was +, -, *, /, ^, AND or OR",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADE1",
    "hex1": "65",
    "hex2": "0D",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$0D",
    "comment": "add data type flag, $FF = string, $00 = numeric",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADE3",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$ADE8",
    "comment": "branch if not string or not + token will only be $00 if type is string and token was +",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADE5",
    "hex1": "4C",
    "hex2": "3D",
    "hex3": "B6",
    "opcode": "JMP",
    "argument": "$B63D",
    "comment": "add strings, string 1 is in the descriptor, string 2 is in line, and return",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADE8",
    "hex1": "69",
    "hex2": "FF",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$FF",
    "comment": "-1 (corrects for carry add)",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADEA",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save it",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADEC",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "*2",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADED",
    "hex1": "65",
    "hex2": "22",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$22",
    "comment": "*3",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADEF",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy to index",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADF0",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull previous precedence",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADF1",
    "hex1": "D9",
    "hex2": "80",
    "hex3": "A0",
    "opcode": "CMP",
    "argument": "$A080,Y",
    "comment": "compare with precedence byte",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADF4",
    "hex1": "B0",
    "hex2": "67",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$AE5D",
    "comment": "branch if A >=",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADF6",
    "hex1": "20",
    "hex2": "8D",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8D",
    "comment": "check if source is numeric, else do type mismatch",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADF9",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save precedence",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADFA",
    "hex1": "20",
    "hex2": "20",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AE20",
    "comment": "get vector, execute function then continue evaluation",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADFD",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "restore precedence",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "ADFE",
    "hex1": "A4",
    "hex2": "4B",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$4B",
    "comment": "get precedence stacked flag",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE00",
    "hex1": "10",
    "hex2": "17",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$AE19",
    "comment": "branch if stacked values",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE02",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy precedence, set flags",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE03",
    "hex1": "F0",
    "hex2": "56",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AE5B",
    "comment": "exit if done",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE05",
    "hex1": "D0",
    "hex2": "5F",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AE66",
    "comment": "else pop FAC2 and return, branch always",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE07",
    "hex1": "46",
    "hex2": "0D",
    "hex3": null,
    "opcode": "LSR",
    "argument": "$0D",
    "comment": "clear data type flag, $FF = string, $00 = numeric",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE09",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy compare function flag",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE0A",
    "hex1": "2A",
    "hex2": "",
    "hex3": null,
    "opcode": "ROL",
    "argument": "",
    "comment": "<<1, shift data type flag into b0, 1 = string, 0 = num",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE0B",
    "hex1": "A6",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$7A",
    "comment": "get BASIC execute pointer low byte",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE0D",
    "hex1": "D0",
    "hex2": "02",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AE11",
    "comment": "branch if no underflow",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE0F",
    "hex1": "C6",
    "hex2": "7B",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$7B",
    "comment": "else decrement BASIC execute pointer high byte",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE11",
    "hex1": "C6",
    "hex2": "7A",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$7A",
    "comment": "decrement BASIC execute pointer low byte",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE13",
    "hex1": "A0",
    "hex2": "1B",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$1B",
    "comment": "set offset to = operator precedence entry",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE15",
    "hex1": "85",
    "hex2": "4D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$4D",
    "comment": "save new comparrison evaluation flag",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE17",
    "hex1": "D0",
    "hex2": "D7",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$ADF0",
    "comment": "branch always",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE19",
    "hex1": "D9",
    "hex2": "80",
    "hex3": "A0",
    "opcode": "CMP",
    "argument": "$A080,Y",
    "comment": "compare with stacked function precedence",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE1C",
    "hex1": "B0",
    "hex2": "48",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$AE66",
    "comment": "if A >=, pop FAC2 and return",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE1E",
    "hex1": "90",
    "hex2": "D9",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$ADF9",
    "comment": "else go stack this one and continue, branch always",
    "parent": "evaluate_expression",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_expression)"
  },
  {
    "addr": "AE20",
    "hex1": "B9",
    "hex2": "82",
    "hex3": "A0",
    "opcode": "LDA",
    "argument": "$A082,Y",
    "comment": "get function vector high byte",
    "desc": "get vector, execute function then continue evaluation",
    "parent": "this",
    "entry": true,
    "label": "get_vector_execute_f"
  },
  {
    "addr": "AE23",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "onto stack",
    "parent": "get_vector_execute_f",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_vector_execute_f)"
  },
  {
    "addr": "AE24",
    "hex1": "B9",
    "hex2": "81",
    "hex3": "A0",
    "opcode": "LDA",
    "argument": "$A081,Y",
    "comment": "get function vector low byte",
    "parent": "get_vector_execute_f",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_vector_execute_f)"
  },
  {
    "addr": "AE27",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "onto stack now push sign, round FAC1 and put on stack",
    "parent": "get_vector_execute_f",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_vector_execute_f)"
  },
  {
    "addr": "AE28",
    "hex1": "20",
    "hex2": "33",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AE33",
    "comment": "function will return here, then the next RTS will call the function",
    "parent": "get_vector_execute_f",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_vector_execute_f)"
  },
  {
    "addr": "AE2B",
    "hex1": "A5",
    "hex2": "4D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$4D",
    "comment": "get comparrison evaluation flag",
    "parent": "get_vector_execute_f",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_vector_execute_f)"
  },
  {
    "addr": "AE2D",
    "hex1": "4C",
    "hex2": "A9",
    "hex3": "AD",
    "opcode": "JMP",
    "argument": "$ADA9",
    "comment": "continue evaluating expression",
    "parent": "get_vector_execute_f",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_vector_execute_f)"
  },
  {
    "addr": "AE30",
    "hex1": "4C",
    "hex2": "08",
    "hex3": "AF",
    "opcode": "JMP",
    "argument": "$AF08",
    "comment": "do syntax error then warm start",
    "parent": "get_vector_execute_f",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_vector_execute_f)"
  },
  {
    "addr": "AE33",
    "hex1": "A5",
    "hex2": "66",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$66",
    "comment": "get FAC1 sign (b7)",
    "parent": "get_vector_execute_f",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_vector_execute_f)"
  },
  {
    "addr": "AE35",
    "hex1": "BE",
    "hex2": "80",
    "hex3": "A0",
    "opcode": "LDX",
    "argument": "$A080,Y",
    "comment": "get precedence byte",
    "parent": "get_vector_execute_f",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_vector_execute_f)"
  },
  {
    "addr": "AE38",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy sign",
    "desc": "push sign, round FAC1 and put on stack",
    "parent": "this",
    "entry": true,
    "label": "push_sign_round_fac1"
  },
  {
    "addr": "AE39",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "get return address low byte",
    "parent": "push_sign_round_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of push_sign_round_fac1)"
  },
  {
    "addr": "AE3A",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save it",
    "parent": "push_sign_round_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of push_sign_round_fac1)"
  },
  {
    "addr": "AE3C",
    "hex1": "E6",
    "hex2": "22",
    "hex3": null,
    "opcode": "INC",
    "argument": "$22",
    "comment": "increment it as return-1 is pushed note, no check is made on the high byte so if the calling routine ever assembles to a page edge then this all goes horribly wrong!",
    "parent": "push_sign_round_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of push_sign_round_fac1)"
  },
  {
    "addr": "AE3E",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "get return address high byte",
    "parent": "push_sign_round_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of push_sign_round_fac1)"
  },
  {
    "addr": "AE3F",
    "hex1": "85",
    "hex2": "23",
    "hex3": null,
    "opcode": "STA",
    "argument": "$23",
    "comment": "save it",
    "parent": "push_sign_round_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of push_sign_round_fac1)"
  },
  {
    "addr": "AE41",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "restore sign",
    "parent": "push_sign_round_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of push_sign_round_fac1)"
  },
  {
    "addr": "AE42",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push sign",
    "parent": "push_sign_round_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of push_sign_round_fac1)"
  },
  {
    "addr": "AE43",
    "hex1": "20",
    "hex2": "1B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC1B",
    "comment": "round FAC1",
    "desc": "round FAC1 and put on stack",
    "parent": "this",
    "entry": true,
    "label": "round_fac1_and_put_o"
  },
  {
    "addr": "AE46",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "round_fac1_and_put_o",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1_and_put_o)"
  },
  {
    "addr": "AE48",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "round_fac1_and_put_o",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1_and_put_o)"
  },
  {
    "addr": "AE49",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get FAC1 mantissa 3",
    "parent": "round_fac1_and_put_o",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1_and_put_o)"
  },
  {
    "addr": "AE4B",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "round_fac1_and_put_o",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1_and_put_o)"
  },
  {
    "addr": "AE4C",
    "hex1": "A5",
    "hex2": "63",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$63",
    "comment": "get FAC1 mantissa 2",
    "parent": "round_fac1_and_put_o",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1_and_put_o)"
  },
  {
    "addr": "AE4E",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "round_fac1_and_put_o",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1_and_put_o)"
  },
  {
    "addr": "AE4F",
    "hex1": "A5",
    "hex2": "62",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$62",
    "comment": "get FAC1 mantissa 1",
    "parent": "round_fac1_and_put_o",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1_and_put_o)"
  },
  {
    "addr": "AE51",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "round_fac1_and_put_o",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1_and_put_o)"
  },
  {
    "addr": "AE52",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "parent": "round_fac1_and_put_o",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1_and_put_o)"
  },
  {
    "addr": "AE54",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "round_fac1_and_put_o",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1_and_put_o)"
  },
  {
    "addr": "AE55",
    "hex1": "6C",
    "hex2": "22",
    "hex3": "00",
    "opcode": "JMP",
    "argument": "($0022)",
    "comment": "return, sort of",
    "parent": "round_fac1_and_put_o",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1_and_put_o)"
  },
  {
    "addr": "AE58",
    "hex1": "A0",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$FF",
    "comment": "flag function",
    "desc": "do functions",
    "parent": "this",
    "entry": true,
    "label": "do_functions"
  },
  {
    "addr": "AE5A",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull precedence byte",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE5B",
    "hex1": "F0",
    "hex2": "23",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AE80",
    "comment": "exit if done",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE5D",
    "hex1": "C9",
    "hex2": "64",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$64",
    "comment": "compare previous precedence with $64",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE5F",
    "hex1": "F0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AE64",
    "comment": "branch if was $64 (< function)",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE61",
    "hex1": "20",
    "hex2": "8D",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8D",
    "comment": "check if source is numeric, else do type mismatch",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE64",
    "hex1": "84",
    "hex2": "4B",
    "hex3": null,
    "opcode": "STY",
    "argument": "$4B",
    "comment": "save precedence stacked flag pop FAC2 and return",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE66",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop byte",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE67",
    "hex1": "4A",
    "hex2": "",
    "hex3": null,
    "opcode": "LSR",
    "argument": "",
    "comment": "shift out comparison evaluation lowest bit",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE68",
    "hex1": "85",
    "hex2": "12",
    "hex3": null,
    "opcode": "STA",
    "argument": "$12",
    "comment": "save the comparison evaluation flag",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE6A",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop exponent",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE6B",
    "hex1": "85",
    "hex2": "69",
    "hex3": null,
    "opcode": "STA",
    "argument": "$69",
    "comment": "save FAC2 exponent",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE6D",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop mantissa 1",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE6E",
    "hex1": "85",
    "hex2": "6A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6A",
    "comment": "save FAC2 mantissa 1",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE70",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop mantissa 2",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE71",
    "hex1": "85",
    "hex2": "6B",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6B",
    "comment": "save FAC2 mantissa 2",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE73",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop mantissa 3",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE74",
    "hex1": "85",
    "hex2": "6C",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6C",
    "comment": "save FAC2 mantissa 3",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE76",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop mantissa 4",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE77",
    "hex1": "85",
    "hex2": "6D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6D",
    "comment": "save FAC2 mantissa 4",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE79",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop sign",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE7A",
    "hex1": "85",
    "hex2": "6E",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6E",
    "comment": "save FAC2 sign (b7)",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE7C",
    "hex1": "45",
    "hex2": "66",
    "hex3": null,
    "opcode": "EOR",
    "argument": "$66",
    "comment": "EOR FAC1 sign (b7)",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE7E",
    "hex1": "85",
    "hex2": "6F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6F",
    "comment": "save sign compare (FAC1 EOR FAC2)",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE80",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE82",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "do_functions",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_functions)"
  },
  {
    "addr": "AE83",
    "hex1": "6C",
    "hex2": "0A",
    "hex3": "03",
    "opcode": "JMP",
    "argument": "($030A)",
    "comment": "get arithmetic element",
    "desc": "get value from line",
    "parent": "this",
    "entry": true,
    "label": "get_value_from_line"
  },
  {
    "addr": "AE86",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear byte",
    "desc": "get arithmetic element, the get arithmetic element vector is initialised to point here",
    "parent": "this",
    "entry": true,
    "label": "get_arithmetic_eleme"
  },
  {
    "addr": "AE88",
    "hex1": "85",
    "hex2": "0D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$0D",
    "comment": "clear data type flag, $FF = string, $00 = numeric",
    "parent": "get_arithmetic_eleme",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_arithmetic_eleme)"
  },
  {
    "addr": "AE8A",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "get_arithmetic_eleme",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_arithmetic_eleme)"
  },
  {
    "addr": "AE8D",
    "hex1": "B0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$AE92",
    "comment": "branch if not numeric character else numeric string found (e.g. 123)",
    "parent": "get_arithmetic_eleme",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_arithmetic_eleme)"
  },
  {
    "addr": "AE8F",
    "hex1": "4C",
    "hex2": "F3",
    "hex3": "BC",
    "opcode": "JMP",
    "argument": "$BCF3",
    "comment": "get FAC1 from string and return get value from line .. continued wasn't a number so ...",
    "parent": "get_arithmetic_eleme",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_arithmetic_eleme)"
  },
  {
    "addr": "AE92",
    "hex1": "20",
    "hex2": "13",
    "hex3": "B1",
    "opcode": "JSR",
    "argument": "$B113",
    "comment": "check byte, return Cb = 0 if<\"A\" or >\"Z\"",
    "parent": "get_arithmetic_eleme",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_arithmetic_eleme)"
  },
  {
    "addr": "AE95",
    "hex1": "90",
    "hex2": "03",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AE9A",
    "comment": "branch if not variable name",
    "parent": "get_arithmetic_eleme",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_arithmetic_eleme)"
  },
  {
    "addr": "AE97",
    "hex1": "4C",
    "hex2": "28",
    "hex3": "AF",
    "opcode": "JMP",
    "argument": "$AF28",
    "comment": "variable name set-up and return",
    "parent": "get_arithmetic_eleme",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_arithmetic_eleme)"
  },
  {
    "addr": "AE9A",
    "hex1": "C9",
    "hex2": "FF",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$FF",
    "comment": "compare with token for PI",
    "parent": "get_arithmetic_eleme",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_arithmetic_eleme)"
  },
  {
    "addr": "AE9C",
    "hex1": "D0",
    "hex2": "0F",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AEAD",
    "comment": "branch if not PI",
    "parent": "get_arithmetic_eleme",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_arithmetic_eleme)"
  },
  {
    "addr": "AE9E",
    "hex1": "A9",
    "hex2": "A8",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$A8",
    "comment": "get PI pointer low byte",
    "parent": "get_arithmetic_eleme",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_arithmetic_eleme)"
  },
  {
    "addr": "AEA0",
    "hex1": "A0",
    "hex2": "AE",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$AE",
    "comment": "get PI pointer high byte",
    "parent": "get_arithmetic_eleme",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_arithmetic_eleme)"
  },
  {
    "addr": "AEA2",
    "hex1": "20",
    "hex2": "A2",
    "hex3": "BB",
    "opcode": "JSR",
    "argument": "$BBA2",
    "comment": "unpack memory (AY) into FAC1",
    "parent": "get_arithmetic_eleme",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_arithmetic_eleme)"
  },
  {
    "addr": "AEA5",
    "hex1": "4C",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JMP",
    "argument": "$0073",
    "comment": "increment and scan memory and return",
    "parent": "get_arithmetic_eleme",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_arithmetic_eleme)"
  },
  {
    "addr": "AEA8",
    "hex1": "82",
    "hex2": "49",
    "hex3": "0F",
    "opcode": "DA",
    "argument": "1",
    "comment": "3.141592653",
    "desc": "PI as floating number",
    "parent": "this",
    "entry": true,
    "label": "pi_as_floating_numbe"
  },
  {
    "addr": "AEAD",
    "hex1": "C9",
    "hex2": "2E",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$2E",
    "comment": "compare with \".\"",
    "desc": "get value from line .. continued wasn't variable name so ...",
    "parent": "this",
    "entry": true,
    "label": "get_value_from_line_"
  },
  {
    "addr": "AEAF",
    "hex1": "F0",
    "hex2": "DE",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AE8F",
    "comment": "if so get FAC1 from string and return, e.g. was .123 wasn't .123 so ...",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AEB1",
    "hex1": "C9",
    "hex2": "AB",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$AB",
    "comment": "compare with token for -",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AEB3",
    "hex1": "F0",
    "hex2": "58",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AF0D",
    "comment": "branch if - token, do set-up for functions wasn't -123 so ...",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AEB5",
    "hex1": "C9",
    "hex2": "AA",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$AA",
    "comment": "compare with token for +",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AEB7",
    "hex1": "F0",
    "hex2": "D1",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AE8A",
    "comment": "branch if + token, +1 = 1 so ignore leading + it wasn't any sort of number so ...",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AEB9",
    "hex1": "C9",
    "hex2": "22",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$22",
    "comment": "compare with \"",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AEBB",
    "hex1": "D0",
    "hex2": "0F",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AECC",
    "comment": "branch if not open quote was open quote so get the enclosed string",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AEBD",
    "hex1": "A5",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$7A",
    "comment": "get BASIC execute pointer low byte",
    "desc": "print \"...\" string to string utility area",
    "parent": "this",
    "entry": true,
    "label": "print_string_to_stri"
  },
  {
    "addr": "AEBF",
    "hex1": "A4",
    "hex2": "7B",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$7B",
    "comment": "get BASIC execute pointer high byte",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEC1",
    "hex1": "69",
    "hex2": "00",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$00",
    "comment": "add carry to low byte",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEC3",
    "hex1": "90",
    "hex2": "01",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AEC6",
    "comment": "branch if no overflow",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEC5",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment high byte",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEC6",
    "hex1": "20",
    "hex2": "87",
    "hex3": "B4",
    "opcode": "JSR",
    "argument": "$B487",
    "comment": "print \" terminated string to utility pointer",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEC9",
    "hex1": "4C",
    "hex2": "E2",
    "hex3": "B7",
    "opcode": "JMP",
    "argument": "$B7E2",
    "comment": "restore BASIC execute pointer from temp and return get value from line .. continued wasn't a string so ...",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AECC",
    "hex1": "C9",
    "hex2": "A8",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$A8",
    "comment": "compare with token for NOT",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AECE",
    "hex1": "D0",
    "hex2": "13",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AEE3",
    "comment": "branch if not token for NOT was NOT token",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AED0",
    "hex1": "A0",
    "hex2": "18",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$18",
    "comment": "offset to NOT function",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AED2",
    "hex1": "D0",
    "hex2": "3B",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AF0F",
    "comment": "do set-up for function then execute, branch always do = compare",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AED4",
    "hex1": "20",
    "hex2": "BF",
    "hex3": "B1",
    "opcode": "JSR",
    "argument": "$B1BF",
    "comment": "evaluate integer expression, no sign check",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AED7",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AED9",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "invert it",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEDB",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy it",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEDC",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get FAC1 mantissa 3",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEDE",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "invert it",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEE0",
    "hex1": "4C",
    "hex2": "91",
    "hex3": "B3",
    "opcode": "JMP",
    "argument": "$B391",
    "comment": "convert fixed integer AY to float FAC1 and return get value from line .. continued wasn't a string or NOT so ...",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEE3",
    "hex1": "C9",
    "hex2": "A5",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$A5",
    "comment": "compare with token for FN",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEE5",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AEEA",
    "comment": "branch if not token for FN",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEE7",
    "hex1": "4C",
    "hex2": "F4",
    "hex3": "B3",
    "opcode": "JMP",
    "argument": "$B3F4",
    "comment": "else go evaluate FNx get value from line .. continued wasn't a string, NOT or FN so ...",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEEA",
    "hex1": "C9",
    "hex2": "B4",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$B4",
    "comment": "compare with token for SGN",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEEC",
    "hex1": "90",
    "hex2": "03",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AEF1",
    "comment": "if less than SGN token evaluate expression in parentheses else was a function token",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEEE",
    "hex1": "4C",
    "hex2": "A7",
    "hex3": "AF",
    "opcode": "JMP",
    "argument": "$AFA7",
    "comment": "go set up function references, branch always get value from line .. continued if here it can only be something in brackets so .... evaluate expression within parentheses",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEF1",
    "hex1": "20",
    "hex2": "FA",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFA",
    "comment": "scan for \"(\", else do syntax error then warm start",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEF4",
    "hex1": "20",
    "hex2": "9E",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD9E",
    "comment": "evaluate expression all the 'scan for' routines return the character after the sought character scan for \")\", else do syntax error then warm start",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEF7",
    "hex1": "A9",
    "hex2": "29",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$29",
    "comment": "load A with \")\"",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEF9",
    "hex1": "2C",
    "hex2": "",
    "hex3": null,
    "opcode": ".BY",
    "argument": "E $2C",
    "comment": "makes next line BIT $28A9 scan for \"(\", else do syntax error then warm start",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEFA",
    "hex1": "A9",
    "hex2": "28",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$28",
    "comment": "load A with \"(\"",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEFC",
    "hex1": "2C",
    "hex2": "",
    "hex3": null,
    "opcode": ".BY",
    "argument": "E $2C",
    "comment": "makes next line BIT $2CA9 scan for \",\", else do syntax error then warm start",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEFD",
    "hex1": "A9",
    "hex2": "2C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$2C",
    "comment": "load A with \",\" scan for CHR$(A), else do syntax error then warm start",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AEFF",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AF01",
    "hex1": "D1",
    "hex2": "7A",
    "hex3": null,
    "opcode": "CMP",
    "argument": "($7A),Y",
    "comment": "compare with BASIC byte",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AF03",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AF08",
    "comment": "if not expected byte do syntax error then warm start",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AF05",
    "hex1": "4C",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JMP",
    "argument": "$0073",
    "comment": "else increment and scan memory and return syntax error then warm start",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AF08",
    "hex1": "A2",
    "hex2": "0B",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$0B",
    "comment": "error code $0B, syntax error",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AF0A",
    "hex1": "4C",
    "hex2": "37",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A437",
    "comment": "do error #X then warm start",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AF0D",
    "hex1": "A0",
    "hex2": "15",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$15",
    "comment": "set offset from base to > operator",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AF0F",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "dump return address low byte",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AF10",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "dump return address high byte",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AF11",
    "hex1": "4C",
    "hex2": "FA",
    "hex3": "AD",
    "opcode": "JMP",
    "argument": "$ADFA",
    "comment": "execute function then continue evaluation",
    "parent": "print_string_to_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_string_to_stri)"
  },
  {
    "addr": "AF14",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "desc": "check address range, return Cb = 1 if address in BASIC ROM",
    "parent": "this",
    "entry": true,
    "label": "check_address_range_"
  },
  {
    "addr": "AF15",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get variable address low byte",
    "parent": "check_address_range_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_address_range_)"
  },
  {
    "addr": "AF17",
    "hex1": "E9",
    "hex2": "00",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$00",
    "comment": "subtract $A000 low byte",
    "parent": "check_address_range_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_address_range_)"
  },
  {
    "addr": "AF19",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get variable address high byte",
    "parent": "check_address_range_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_address_range_)"
  },
  {
    "addr": "AF1B",
    "hex1": "E9",
    "hex2": "A0",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$A0",
    "comment": "subtract $A000 high byte",
    "parent": "check_address_range_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_address_range_)"
  },
  {
    "addr": "AF1D",
    "hex1": "90",
    "hex2": "08",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AF27",
    "comment": "exit if address < $A000",
    "parent": "check_address_range_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_address_range_)"
  },
  {
    "addr": "AF1F",
    "hex1": "A9",
    "hex2": "A2",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$A2",
    "comment": "get end of BASIC marker low byte",
    "parent": "check_address_range_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_address_range_)"
  },
  {
    "addr": "AF21",
    "hex1": "E5",
    "hex2": "64",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$64",
    "comment": "subtract variable address low byte",
    "parent": "check_address_range_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_address_range_)"
  },
  {
    "addr": "AF23",
    "hex1": "A9",
    "hex2": "E3",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$E3",
    "comment": "get end of BASIC marker high byte",
    "parent": "check_address_range_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_address_range_)"
  },
  {
    "addr": "AF25",
    "hex1": "E5",
    "hex2": "65",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$65",
    "comment": "subtract variable address high byte",
    "parent": "check_address_range_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_address_range_)"
  },
  {
    "addr": "AF27",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "check_address_range_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_address_range_)"
  },
  {
    "addr": "AF28",
    "hex1": "20",
    "hex2": "8B",
    "hex3": "B0",
    "opcode": "JSR",
    "argument": "$B08B",
    "comment": "get variable address",
    "desc": "variable name set-up",
    "parent": "this",
    "entry": true,
    "label": "variable_name_setup"
  },
  {
    "addr": "AF2B",
    "hex1": "85",
    "hex2": "64",
    "hex3": null,
    "opcode": "STA",
    "argument": "$64",
    "comment": "save variable pointer low byte",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF2D",
    "hex1": "84",
    "hex2": "65",
    "hex3": null,
    "opcode": "STY",
    "argument": "$65",
    "comment": "save variable pointer high byte",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF2F",
    "hex1": "A6",
    "hex2": "45",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$45",
    "comment": "get current variable name first character",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF31",
    "hex1": "A4",
    "hex2": "46",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$46",
    "comment": "get current variable name second character",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF33",
    "hex1": "A5",
    "hex2": "0D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$0D",
    "comment": "get data type flag, $FF = string, $00 = numeric",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF35",
    "hex1": "F0",
    "hex2": "26",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$AF5D",
    "comment": "branch if numeric variable is string",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF37",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "else clear A",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF39",
    "hex1": "85",
    "hex2": "70",
    "hex3": null,
    "opcode": "STA",
    "argument": "$70",
    "comment": "clear FAC1 rounding byte",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF3B",
    "hex1": "20",
    "hex2": "14",
    "hex3": "AF",
    "opcode": "JSR",
    "argument": "$AF14",
    "comment": "check address range",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF3E",
    "hex1": "90",
    "hex2": "1C",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AF5C",
    "comment": "exit if not in BASIC ROM",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF40",
    "hex1": "E0",
    "hex2": "54",
    "hex3": null,
    "opcode": "CPX",
    "argument": "#$54",
    "comment": "compare variable name first character with \"T\"",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF42",
    "hex1": "D0",
    "hex2": "18",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AF5C",
    "comment": "exit if not \"T\"",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF44",
    "hex1": "C0",
    "hex2": "C9",
    "hex3": null,
    "opcode": "CPY",
    "argument": "#$C9",
    "comment": "compare variable name second character with \"I$\"",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF46",
    "hex1": "D0",
    "hex2": "14",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AF5C",
    "comment": "exit if not \"I$\" variable name was \"TI$\"",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF48",
    "hex1": "20",
    "hex2": "84",
    "hex3": "AF",
    "opcode": "JSR",
    "argument": "$AF84",
    "comment": "read real time clock into FAC1 mantissa, 0HML",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF4B",
    "hex1": "84",
    "hex2": "5E",
    "hex3": null,
    "opcode": "STY",
    "argument": "$5E",
    "comment": "clear exponent count adjust",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF4D",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "Y = $FF",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF4E",
    "hex1": "84",
    "hex2": "71",
    "hex3": null,
    "opcode": "STY",
    "argument": "$71",
    "comment": "set output string index, -1 to allow for pre increment",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF50",
    "hex1": "A0",
    "hex2": "06",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$06",
    "comment": "HH:MM:SS is six digits",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF52",
    "hex1": "84",
    "hex2": "5D",
    "hex3": null,
    "opcode": "STY",
    "argument": "$5D",
    "comment": "set number of characters before the decimal point",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF54",
    "hex1": "A0",
    "hex2": "24",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$24",
    "comment": "index to jiffy conversion table",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF56",
    "hex1": "20",
    "hex2": "68",
    "hex3": "BE",
    "opcode": "JSR",
    "argument": "$BE68",
    "comment": "convert jiffy count to string",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF59",
    "hex1": "4C",
    "hex2": "6F",
    "hex3": "B4",
    "opcode": "JMP",
    "argument": "$B46F",
    "comment": "exit via STR$() code tail",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF5C",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "variable name set-up, variable is numeric",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF5D",
    "hex1": "24",
    "hex2": "0E",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$0E",
    "comment": "test data type flag, $80 = integer, $00 = float",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF5F",
    "hex1": "10",
    "hex2": "0D",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$AF6E",
    "comment": "branch if float",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF61",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF63",
    "hex1": "B1",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($64),Y",
    "comment": "get integer variable low byte",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF65",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy to X",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF66",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF67",
    "hex1": "B1",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($64),Y",
    "comment": "get integer variable high byte",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF69",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy to Y",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF6A",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy loa byte to A",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF6B",
    "hex1": "4C",
    "hex2": "91",
    "hex3": "B3",
    "opcode": "JMP",
    "argument": "$B391",
    "comment": "convert fixed integer AY to float FAC1 and return variable name set-up, variable is float",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF6E",
    "hex1": "20",
    "hex2": "14",
    "hex3": "AF",
    "opcode": "JSR",
    "argument": "$AF14",
    "comment": "check address range",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF71",
    "hex1": "90",
    "hex2": "2D",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AFA0",
    "comment": "if not in BASIC ROM get pointer and unpack into FAC1",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF73",
    "hex1": "E0",
    "hex2": "54",
    "hex3": null,
    "opcode": "CPX",
    "argument": "#$54",
    "comment": "compare variable name first character with \"T\"",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF75",
    "hex1": "D0",
    "hex2": "1B",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AF92",
    "comment": "branch if not \"T\"",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF77",
    "hex1": "C0",
    "hex2": "49",
    "hex3": null,
    "opcode": "CPY",
    "argument": "#$49",
    "comment": "compare variable name second character with \"I\"",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF79",
    "hex1": "D0",
    "hex2": "25",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AFA0",
    "comment": "branch if not \"I\" variable name was \"TI\"",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF7B",
    "hex1": "20",
    "hex2": "84",
    "hex3": "AF",
    "opcode": "JSR",
    "argument": "$AF84",
    "comment": "read real time clock into FAC1 mantissa, 0HML",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF7E",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "clear A",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF7F",
    "hex1": "A2",
    "hex2": "A0",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$A0",
    "comment": "set exponent to 32 bit value",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF81",
    "hex1": "4C",
    "hex2": "4F",
    "hex3": "BC",
    "opcode": "JMP",
    "argument": "$BC4F",
    "comment": "set exponent = X and normalise FAC1",
    "parent": "variable_name_setup",
    "entry": false,
    "label": "n/a",
    "desc": "(part of variable_name_setup)"
  },
  {
    "addr": "AF84",
    "hex1": "20",
    "hex2": "DE",
    "hex3": "FF",
    "opcode": "JSR",
    "argument": "$FFDE",
    "comment": "read real time clock",
    "desc": "read real time clock into FAC1 mantissa, 0HML",
    "parent": "this",
    "entry": true,
    "label": "read_real_time_clock"
  },
  {
    "addr": "AF87",
    "hex1": "86",
    "hex2": "64",
    "hex3": null,
    "opcode": "STX",
    "argument": "$64",
    "comment": "save jiffy clock mid byte as  FAC1 mantissa 3",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AF89",
    "hex1": "84",
    "hex2": "63",
    "hex3": null,
    "opcode": "STY",
    "argument": "$63",
    "comment": "save jiffy clock high byte as  FAC1 mantissa 2",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AF8B",
    "hex1": "85",
    "hex2": "65",
    "hex3": null,
    "opcode": "STA",
    "argument": "$65",
    "comment": "save jiffy clock low byte as  FAC1 mantissa 4",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AF8D",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear Y",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AF8F",
    "hex1": "84",
    "hex2": "62",
    "hex3": null,
    "opcode": "STY",
    "argument": "$62",
    "comment": "clear FAC1 mantissa 1",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AF91",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "variable name set-up, variable is float and not \"Tx\"",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AF92",
    "hex1": "E0",
    "hex2": "53",
    "hex3": null,
    "opcode": "CPX",
    "argument": "#$53",
    "comment": "compare variable name first character with \"S\"",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AF94",
    "hex1": "D0",
    "hex2": "0A",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AFA0",
    "comment": "if not \"S\" go do normal floating variable",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AF96",
    "hex1": "C0",
    "hex2": "54",
    "hex3": null,
    "opcode": "CPY",
    "argument": "#$54",
    "comment": "compare variable name second character with \"",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AF98",
    "hex1": "D0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$AFA0",
    "comment": "if not \"T\" go do normal floating variable variable name was \"ST\"",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AF9A",
    "hex1": "20",
    "hex2": "B7",
    "hex3": "FF",
    "opcode": "JSR",
    "argument": "$FFB7",
    "comment": "read I/O status word",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AF9D",
    "hex1": "4C",
    "hex2": "3C",
    "hex3": "BC",
    "opcode": "JMP",
    "argument": "$BC3C",
    "comment": "save A as integer byte and return variable is float",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AFA0",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get variable pointer low byte",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AFA2",
    "hex1": "A4",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$65",
    "comment": "get variable pointer high byte",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AFA4",
    "hex1": "4C",
    "hex2": "A2",
    "hex3": "BB",
    "opcode": "JMP",
    "argument": "$BBA2",
    "comment": "unpack memory (AY) into FAC1",
    "parent": "read_real_time_clock",
    "entry": false,
    "label": "n/a",
    "desc": "(part of read_real_time_clock)"
  },
  {
    "addr": "AFA7",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "*2 (2 bytes per function address)",
    "desc": "get value from line continued only functions left so .. set up function references",
    "parent": "this",
    "entry": true,
    "label": "get_value_from_line_"
  },
  {
    "addr": "AFA8",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save function offset",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFA9",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy function offset",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFAA",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFAD",
    "hex1": "E0",
    "hex2": "8F",
    "hex3": null,
    "opcode": "CPX",
    "argument": "#$8F",
    "comment": "compare function offset to CHR$ token offset+1",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFAF",
    "hex1": "90",
    "hex2": "20",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$AFD1",
    "comment": "branch if < LEFT$ (can not be =) get value from line .. continued was LEFT$, RIGHT$ or MID$ so..",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFB1",
    "hex1": "20",
    "hex2": "FA",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFA",
    "comment": "scan for \"(\", else do syntax error then warm start",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFB4",
    "hex1": "20",
    "hex2": "9E",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD9E",
    "comment": "evaluate, should be string, expression",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFB7",
    "hex1": "20",
    "hex2": "FD",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFD",
    "comment": "scan for \",\", else do syntax error then warm start",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFBA",
    "hex1": "20",
    "hex2": "8F",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8F",
    "comment": "check if source is string, else do type mismatch",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFBD",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "restore function offset",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFBE",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy it",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFBF",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get descriptor pointer high byte",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFC1",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push string pointer high byte",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFC2",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get descriptor pointer low byte",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFC4",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push string pointer low byte",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFC5",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "restore function offset",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFC6",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save function offset",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFC7",
    "hex1": "20",
    "hex2": "9E",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B79E",
    "comment": "get byte parameter",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFCA",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "restore function offset",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFCB",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy function offset",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFCC",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy byte parameter to A",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFCD",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push byte parameter",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFCE",
    "hex1": "4C",
    "hex2": "D6",
    "hex3": "AF",
    "opcode": "JMP",
    "argument": "$AFD6",
    "comment": "go call function get value from line .. continued was SGN() to CHR$() so..",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFD1",
    "hex1": "20",
    "hex2": "F1",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEF1",
    "comment": "evaluate expression within parentheses",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFD4",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "restore function offset",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFD5",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy to index",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFD6",
    "hex1": "B9",
    "hex2": "EA",
    "hex3": "9F",
    "opcode": "LDA",
    "argument": "$9FEA,Y",
    "comment": "get function jump vector low byte",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFD9",
    "hex1": "85",
    "hex2": "55",
    "hex3": null,
    "opcode": "STA",
    "argument": "$55",
    "comment": "save functions jump vector low byte",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFDB",
    "hex1": "B9",
    "hex2": "EB",
    "hex3": "9F",
    "opcode": "LDA",
    "argument": "$9FEB,Y",
    "comment": "get function jump vector high byte",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFDE",
    "hex1": "85",
    "hex2": "56",
    "hex3": null,
    "opcode": "STA",
    "argument": "$56",
    "comment": "save functions jump vector high byte",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFE0",
    "hex1": "20",
    "hex2": "54",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0054",
    "comment": "do function call",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFE3",
    "hex1": "4C",
    "hex2": "8D",
    "hex3": "AD",
    "opcode": "JMP",
    "argument": "$AD8D",
    "comment": "check if source is numeric and RTS, else do type mismatch string functions avoid this by dumping the return address",
    "parent": "get_value_from_line_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_value_from_line_)"
  },
  {
    "addr": "AFE6",
    "hex1": "A0",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$FF",
    "comment": "set Y for OR",
    "desc": "perform OR this works because NOT(NOT(x) AND NOT(y)) = x OR y",
    "parent": "this",
    "entry": true,
    "label": "perform_or_this_work"
  },
  {
    "addr": "AFE8",
    "hex1": "2C",
    "hex2": "",
    "hex3": null,
    "opcode": ".BY",
    "argument": "E $2C",
    "comment": "makes next line BIT $00A0",
    "parent": "perform_or_this_work",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_or_this_work)"
  },
  {
    "addr": "AFE9",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear Y for AND",
    "desc": "perform AND",
    "parent": "this",
    "entry": true,
    "label": "perform_and"
  },
  {
    "addr": "AFEB",
    "hex1": "84",
    "hex2": "0B",
    "hex3": null,
    "opcode": "STY",
    "argument": "$0B",
    "comment": "set AND/OR invert value",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "AFED",
    "hex1": "20",
    "hex2": "BF",
    "hex3": "B1",
    "opcode": "JSR",
    "argument": "$B1BF",
    "comment": "evaluate integer expression, no sign check",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "AFF0",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get FAC1 mantissa 3",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "AFF2",
    "hex1": "45",
    "hex2": "0B",
    "hex3": null,
    "opcode": "EOR",
    "argument": "$0B",
    "comment": "EOR low byte",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "AFF4",
    "hex1": "85",
    "hex2": "07",
    "hex3": null,
    "opcode": "STA",
    "argument": "$07",
    "comment": "save it",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "AFF6",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "AFF8",
    "hex1": "45",
    "hex2": "0B",
    "hex3": null,
    "opcode": "EOR",
    "argument": "$0B",
    "comment": "EOR high byte",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "AFFA",
    "hex1": "85",
    "hex2": "08",
    "hex3": null,
    "opcode": "STA",
    "argument": "$08",
    "comment": "save it",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "AFFC",
    "hex1": "20",
    "hex2": "FC",
    "hex3": "BB",
    "opcode": "JSR",
    "argument": "$BBFC",
    "comment": "copy FAC2 to FAC1, get 2nd value in expression",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "AFFF",
    "hex1": "20",
    "hex2": "BF",
    "hex3": "B1",
    "opcode": "JSR",
    "argument": "$B1BF",
    "comment": "evaluate integer expression, no sign check",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "B002",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "B004",
    "hex1": "45",
    "hex2": "0B",
    "hex3": null,
    "opcode": "EOR",
    "argument": "$0B",
    "comment": "EOR high byte",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "B006",
    "hex1": "25",
    "hex2": "08",
    "hex3": null,
    "opcode": "AND",
    "argument": "$08",
    "comment": "AND with expression 1 high byte",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "B008",
    "hex1": "45",
    "hex2": "0B",
    "hex3": null,
    "opcode": "EOR",
    "argument": "$0B",
    "comment": "EOR result high byte",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "B00A",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "save in Y",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "B00B",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get FAC1 mantissa 3",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "B00D",
    "hex1": "45",
    "hex2": "0B",
    "hex3": null,
    "opcode": "EOR",
    "argument": "$0B",
    "comment": "EOR low byte",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "B00F",
    "hex1": "25",
    "hex2": "07",
    "hex3": null,
    "opcode": "AND",
    "argument": "$07",
    "comment": "AND with expression 1 low byte",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "B011",
    "hex1": "45",
    "hex2": "0B",
    "hex3": null,
    "opcode": "EOR",
    "argument": "$0B",
    "comment": "EOR result low byte",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "B013",
    "hex1": "4C",
    "hex2": "91",
    "hex3": "B3",
    "opcode": "JMP",
    "argument": "$B391",
    "comment": "convert fixed integer AY to float FAC1 and return",
    "parent": "perform_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_and)"
  },
  {
    "addr": "B016",
    "hex1": "20",
    "hex2": "90",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD90",
    "comment": "type match check, set C for string",
    "desc": "perform comparisons do < compare",
    "parent": "this",
    "entry": true,
    "label": "perform_comparisons_"
  },
  {
    "addr": "B019",
    "hex1": "B0",
    "hex2": "13",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B02E",
    "comment": "branch if string do numeric < compare",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B01B",
    "hex1": "A5",
    "hex2": "6E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$6E",
    "comment": "get FAC2 sign (b7)",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B01D",
    "hex1": "09",
    "hex2": "7F",
    "hex3": null,
    "opcode": "ORA",
    "argument": "#$7F",
    "comment": "set all non sign bits",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B01F",
    "hex1": "25",
    "hex2": "6A",
    "hex3": null,
    "opcode": "AND",
    "argument": "$6A",
    "comment": "and FAC2 mantissa 1 (AND in sign bit)",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B021",
    "hex1": "85",
    "hex2": "6A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6A",
    "comment": "save FAC2 mantissa 1",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B023",
    "hex1": "A9",
    "hex2": "69",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$69",
    "comment": "set pointer low byte to FAC2",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B025",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "set pointer high byte to FAC2",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B027",
    "hex1": "20",
    "hex2": "5B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC5B",
    "comment": "compare FAC1 with (AY)",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B02A",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy the result",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B02B",
    "hex1": "4C",
    "hex2": "61",
    "hex3": "B0",
    "opcode": "JMP",
    "argument": "$B061",
    "comment": "go evaluate result do string < compare",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B02E",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear byte",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B030",
    "hex1": "85",
    "hex2": "0D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$0D",
    "comment": "clear data type flag, $FF = string, $00 = numeric",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B032",
    "hex1": "C6",
    "hex2": "4D",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$4D",
    "comment": "clear < bit in comparrison evaluation flag",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B034",
    "hex1": "20",
    "hex2": "A6",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B6A6",
    "comment": "pop string off descriptor stack, or from top of string space returns with A = length, X = pointer low byte, Y = pointer high byte",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B037",
    "hex1": "85",
    "hex2": "61",
    "hex3": null,
    "opcode": "STA",
    "argument": "$61",
    "comment": "save length",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B039",
    "hex1": "86",
    "hex2": "62",
    "hex3": null,
    "opcode": "STX",
    "argument": "$62",
    "comment": "save string pointer low byte",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B03B",
    "hex1": "84",
    "hex2": "63",
    "hex3": null,
    "opcode": "STY",
    "argument": "$63",
    "comment": "save string pointer high byte",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B03D",
    "hex1": "A5",
    "hex2": "6C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$6C",
    "comment": "get descriptor pointer low byte",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B03F",
    "hex1": "A4",
    "hex2": "6D",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$6D",
    "comment": "get descriptor pointer high byte",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B041",
    "hex1": "20",
    "hex2": "AA",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B6AA",
    "comment": "pop (YA) descriptor off stack or from top of string space returns with A = length, X = pointer low byte, Y = pointer high byte",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B044",
    "hex1": "86",
    "hex2": "6C",
    "hex3": null,
    "opcode": "STX",
    "argument": "$6C",
    "comment": "save string pointer low byte",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B046",
    "hex1": "84",
    "hex2": "6D",
    "hex3": null,
    "opcode": "STY",
    "argument": "$6D",
    "comment": "save string pointer high byte",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B048",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy length",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B049",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B04A",
    "hex1": "E5",
    "hex2": "61",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$61",
    "comment": "subtract string 1 length",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B04C",
    "hex1": "F0",
    "hex2": "08",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B056",
    "comment": "branch if str 1 length = string 2 length",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B04E",
    "hex1": "A9",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$01",
    "comment": "set str 1 length > string 2 length",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B050",
    "hex1": "90",
    "hex2": "04",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B056",
    "comment": "branch if so",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B052",
    "hex1": "A6",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$61",
    "comment": "get string 1 length",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B054",
    "hex1": "A9",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$FF",
    "comment": "set str 1 length < string 2 length",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B056",
    "hex1": "85",
    "hex2": "66",
    "hex3": null,
    "opcode": "STA",
    "argument": "$66",
    "comment": "save length compare",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B058",
    "hex1": "A0",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$FF",
    "comment": "set index",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B05A",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "adjust for loop",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B05B",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B05C",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement count",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B05D",
    "hex1": "D0",
    "hex2": "07",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B066",
    "comment": "branch if still bytes to do",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B05F",
    "hex1": "A6",
    "hex2": "66",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$66",
    "comment": "get length compare back",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B061",
    "hex1": "30",
    "hex2": "0F",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$B072",
    "comment": "branch if str 1 < str 2",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B063",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "flag str 1 <= str 2",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B064",
    "hex1": "90",
    "hex2": "0C",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B072",
    "comment": "go evaluate result",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B066",
    "hex1": "B1",
    "hex2": "6C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($6C),Y",
    "comment": "get string 2 byte",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B068",
    "hex1": "D1",
    "hex2": "62",
    "hex3": null,
    "opcode": "CMP",
    "argument": "($62),Y",
    "comment": "compare with string 1 byte",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B06A",
    "hex1": "F0",
    "hex2": "EF",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B05B",
    "comment": "loop if bytes =",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B06C",
    "hex1": "A2",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$FF",
    "comment": "set str 1 < string 2",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B06E",
    "hex1": "B0",
    "hex2": "02",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B072",
    "comment": "branch if so",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B070",
    "hex1": "A2",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$01",
    "comment": "set str 1 > string 2",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B072",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "x = 0, 1 or 2",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B073",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy to A",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B074",
    "hex1": "2A",
    "hex2": "",
    "hex3": null,
    "opcode": "ROL",
    "argument": "",
    "comment": "* 2 (1, 2 or 4)",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B075",
    "hex1": "25",
    "hex2": "12",
    "hex3": null,
    "opcode": "AND",
    "argument": "$12",
    "comment": "AND with the comparison evaluation flag",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B077",
    "hex1": "F0",
    "hex2": "02",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B07B",
    "comment": "branch if 0 (compare is false)",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B079",
    "hex1": "A9",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$FF",
    "comment": "else set result true",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B07B",
    "hex1": "4C",
    "hex2": "3C",
    "hex3": "BC",
    "opcode": "JMP",
    "argument": "$BC3C",
    "comment": "save A as integer byte and return",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B07E",
    "hex1": "20",
    "hex2": "FD",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFD",
    "comment": "scan for \",\", else do syntax error then warm start",
    "parent": "perform_comparisons_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_comparisons_)"
  },
  {
    "addr": "B081",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy \"DIM\" flag to X",
    "desc": "perform DIM",
    "parent": "this",
    "entry": true,
    "label": "perform_dim"
  },
  {
    "addr": "B082",
    "hex1": "20",
    "hex2": "90",
    "hex3": "B0",
    "opcode": "JSR",
    "argument": "$B090",
    "comment": "search for variable",
    "parent": "perform_dim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_dim)"
  },
  {
    "addr": "B085",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_dim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_dim)"
  },
  {
    "addr": "B088",
    "hex1": "D0",
    "hex2": "F4",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B07E",
    "comment": "scan for \",\" and loop if not null",
    "parent": "perform_dim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_dim)"
  },
  {
    "addr": "B08A",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "perform_dim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_dim)"
  },
  {
    "addr": "B08B",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "set DIM flag = $00",
    "desc": "search for variable",
    "parent": "this",
    "entry": true,
    "label": "search_for_variable"
  },
  {
    "addr": "B08D",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory, 1st character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B090",
    "hex1": "86",
    "hex2": "0C",
    "hex3": null,
    "opcode": "STX",
    "argument": "$0C",
    "comment": "save DIM flag",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B092",
    "hex1": "85",
    "hex2": "45",
    "hex3": null,
    "opcode": "STA",
    "argument": "$45",
    "comment": "save 1st character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B094",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B097",
    "hex1": "20",
    "hex2": "13",
    "hex3": "B1",
    "opcode": "JSR",
    "argument": "$B113",
    "comment": "check byte, return Cb = 0 if<\"A\" or >\"Z\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B09A",
    "hex1": "B0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B09F",
    "comment": "branch if ok",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B09C",
    "hex1": "4C",
    "hex2": "08",
    "hex3": "AF",
    "opcode": "JMP",
    "argument": "$AF08",
    "comment": "else syntax error then warm start was variable name so ...",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B09F",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "clear 2nd character temp",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0A1",
    "hex1": "86",
    "hex2": "0D",
    "hex3": null,
    "opcode": "STX",
    "argument": "$0D",
    "comment": "clear data type flag, $FF = string, $00 = numeric",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0A3",
    "hex1": "86",
    "hex2": "0E",
    "hex3": null,
    "opcode": "STX",
    "argument": "$0E",
    "comment": "clear data type flag, $80 = integer, $00 = float",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0A5",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory, 2nd character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0A8",
    "hex1": "90",
    "hex2": "05",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B0AF",
    "comment": "if character = \"0\"-\"9\" (ok) go save 2nd character 2nd character wasn't \"0\" to \"9\" so ...",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0AA",
    "hex1": "20",
    "hex2": "13",
    "hex3": "B1",
    "opcode": "JSR",
    "argument": "$B113",
    "comment": "check byte, return Cb = 0 if<\"A\" or >\"Z\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0AD",
    "hex1": "90",
    "hex2": "0B",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B0BA",
    "comment": "branch if <\"A\" or >\"Z\" (go check if string)",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0AF",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy 2nd character ignore further (valid) characters in the variable name",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0B0",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory, 3rd character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0B3",
    "hex1": "90",
    "hex2": "FB",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B0B0",
    "comment": "loop if character = \"0\"-\"9\" (ignore)",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0B5",
    "hex1": "20",
    "hex2": "13",
    "hex3": "B1",
    "opcode": "JSR",
    "argument": "$B113",
    "comment": "check byte, return Cb = 0 if<\"A\" or >\"Z\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0B8",
    "hex1": "B0",
    "hex2": "F6",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B0B0",
    "comment": "loop if character = \"A\"-\"Z\" (ignore) check if string variable",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0BA",
    "hex1": "C9",
    "hex2": "24",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$24",
    "comment": "compare with \"$\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0BC",
    "hex1": "D0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B0C4",
    "comment": "branch if not string type is string",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0BE",
    "hex1": "A9",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$FF",
    "comment": "set data type = string",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0C0",
    "hex1": "85",
    "hex2": "0D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$0D",
    "comment": "set data type flag, $FF = string, $00 = numeric",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0C2",
    "hex1": "D0",
    "hex2": "10",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B0D4",
    "comment": "branch always",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0C4",
    "hex1": "C9",
    "hex2": "25",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$25",
    "comment": "compare with \"%\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0C6",
    "hex1": "D0",
    "hex2": "13",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B0DB",
    "comment": "branch if not integer",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0C8",
    "hex1": "A5",
    "hex2": "10",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$10",
    "comment": "get subscript/FNX flag",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0CA",
    "hex1": "D0",
    "hex2": "D0",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B09C",
    "comment": "if ?? do syntax error then warm start",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0CC",
    "hex1": "A9",
    "hex2": "80",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$80",
    "comment": "set integer type",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0CE",
    "hex1": "85",
    "hex2": "0E",
    "hex3": null,
    "opcode": "STA",
    "argument": "$0E",
    "comment": "set data type = integer",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0D0",
    "hex1": "05",
    "hex2": "45",
    "hex3": null,
    "opcode": "ORA",
    "argument": "$45",
    "comment": "OR current variable name first byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0D2",
    "hex1": "85",
    "hex2": "45",
    "hex3": null,
    "opcode": "STA",
    "argument": "$45",
    "comment": "save current variable name first byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0D4",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "get 2nd character back",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0D5",
    "hex1": "09",
    "hex2": "80",
    "hex3": null,
    "opcode": "ORA",
    "argument": "#$80",
    "comment": "set top bit, indicate string or integer variable",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0D7",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy back to 2nd character temp",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0D8",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0DB",
    "hex1": "86",
    "hex2": "46",
    "hex3": null,
    "opcode": "STX",
    "argument": "$46",
    "comment": "save 2nd character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0DD",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0DE",
    "hex1": "05",
    "hex2": "10",
    "hex3": null,
    "opcode": "ORA",
    "argument": "$10",
    "comment": "or with subscript/FNX flag - or FN name",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0E0",
    "hex1": "E9",
    "hex2": "28",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$28",
    "comment": "subtract \"(\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0E2",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B0E7",
    "comment": "branch if not \"(\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0E4",
    "hex1": "4C",
    "hex2": "D1",
    "hex3": "B1",
    "opcode": "JMP",
    "argument": "$B1D1",
    "comment": "go find, or make, array either find or create variable variable name wasn't xx(.... so look for plain variable",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0E7",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear A",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0E9",
    "hex1": "84",
    "hex2": "10",
    "hex3": null,
    "opcode": "STY",
    "argument": "$10",
    "comment": "clear subscript/FNX flag",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0EB",
    "hex1": "A5",
    "hex2": "2D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2D",
    "comment": "get start of variables low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0ED",
    "hex1": "A6",
    "hex2": "2E",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$2E",
    "comment": "get start of variables high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0EF",
    "hex1": "86",
    "hex2": "60",
    "hex3": null,
    "opcode": "STX",
    "argument": "$60",
    "comment": "save search address high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0F1",
    "hex1": "85",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$5F",
    "comment": "save search address low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0F3",
    "hex1": "E4",
    "hex2": "30",
    "hex3": null,
    "opcode": "CPX",
    "argument": "$30",
    "comment": "compare with end of variables high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0F5",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B0FB",
    "comment": "skip next compare if <> high addresses were = so compare low addresses",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0F7",
    "hex1": "C5",
    "hex2": "2F",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$2F",
    "comment": "compare low address with end of variables low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0F9",
    "hex1": "F0",
    "hex2": "22",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B11D",
    "comment": "if not found go make new variable",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0FB",
    "hex1": "A5",
    "hex2": "45",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$45",
    "comment": "get 1st character of variable to find",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0FD",
    "hex1": "D1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "CMP",
    "argument": "($5F),Y",
    "comment": "compare with variable name 1st character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B0FF",
    "hex1": "D0",
    "hex2": "08",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B109",
    "comment": "branch if no match 1st characters match so compare 2nd character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B101",
    "hex1": "A5",
    "hex2": "46",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$46",
    "comment": "get 2nd character of variable to find",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B103",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "index to point to variable name 2nd character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B104",
    "hex1": "D1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "CMP",
    "argument": "($5F),Y",
    "comment": "compare with variable name 2nd character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B106",
    "hex1": "F0",
    "hex2": "7D",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B185",
    "comment": "branch if match (found variable)",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B108",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "else decrement index (now = $00)",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B109",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B10A",
    "hex1": "A5",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$5F",
    "comment": "get search address low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B10C",
    "hex1": "69",
    "hex2": "07",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$07",
    "comment": "+7, offset to next variable name",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B10E",
    "hex1": "90",
    "hex2": "E1",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B0F1",
    "comment": "loop if no overflow to high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B110",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "else increment high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B111",
    "hex1": "D0",
    "hex2": "DC",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B0EF",
    "comment": "loop always, RAM doesn't extend to $FFFF check byte, return Cb = 0 if<\"A\" or >\"Z\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B113",
    "hex1": "C9",
    "hex2": "41",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$41",
    "comment": "compare with \"A\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B115",
    "hex1": "90",
    "hex2": "05",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B11C",
    "comment": "exit if less carry is set",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B117",
    "hex1": "E9",
    "hex2": "5B",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$5B",
    "comment": "subtract \"Z\"+1",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B119",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B11A",
    "hex1": "E9",
    "hex2": "A5",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$A5",
    "comment": "subtract $A5 (restore byte) carry clear if byte > $5A",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B11C",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "reached end of variable memory without match ... so create new variable",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B11D",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop return address low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B11E",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push return address low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B11F",
    "hex1": "C9",
    "hex2": "2A",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$2A",
    "comment": "compare with expected calling routine return low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B121",
    "hex1": "D0",
    "hex2": "05",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B128",
    "comment": "if not get variable go create new variable this will only drop through if the call was from $AF28 and is only called from there if it is searching for a variable from the right hand side of a LET a=b statement, it prevents the creation of variables not assigned a value. value returned by this is either numeric zero, exponent byte is $00, or null string, descriptor length byte is $00. in fact a pointer to any $00 byte would have done. else return dummy null value",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B123",
    "hex1": "A9",
    "hex2": "13",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$13",
    "comment": "set result pointer low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B125",
    "hex1": "A0",
    "hex2": "BF",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$BF",
    "comment": "set result pointer high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B127",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "create new numeric variable",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B128",
    "hex1": "A5",
    "hex2": "45",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$45",
    "comment": "get variable name first character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B12A",
    "hex1": "A4",
    "hex2": "46",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$46",
    "comment": "get variable name second character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B12C",
    "hex1": "C9",
    "hex2": "54",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$54",
    "comment": "compare first character with \"T\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B12E",
    "hex1": "D0",
    "hex2": "0B",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B13B",
    "comment": "branch if not \"T\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B130",
    "hex1": "C0",
    "hex2": "C9",
    "hex3": null,
    "opcode": "CPY",
    "argument": "#$C9",
    "comment": "compare second character with \"I$\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B132",
    "hex1": "F0",
    "hex2": "EF",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B123",
    "comment": "if \"I$\" return null value",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B134",
    "hex1": "C0",
    "hex2": "49",
    "hex3": null,
    "opcode": "CPY",
    "argument": "#$49",
    "comment": "compare second character with \"I\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B136",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B13B",
    "comment": "branch if not \"I\" if name is \"TI\" do syntax error",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B138",
    "hex1": "4C",
    "hex2": "08",
    "hex3": "AF",
    "opcode": "JMP",
    "argument": "$AF08",
    "comment": "do syntax error then warm start",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B13B",
    "hex1": "C9",
    "hex2": "53",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$53",
    "comment": "compare first character with \"S\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B13D",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B143",
    "comment": "branch if not \"S\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B13F",
    "hex1": "C0",
    "hex2": "54",
    "hex3": null,
    "opcode": "CPY",
    "argument": "#$54",
    "comment": "compare second character with \"T\"",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B141",
    "hex1": "F0",
    "hex2": "F5",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B138",
    "comment": "if name is \"ST\" do syntax error",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B143",
    "hex1": "A5",
    "hex2": "2F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2F",
    "comment": "get end of variables low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B145",
    "hex1": "A4",
    "hex2": "30",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$30",
    "comment": "get end of variables high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B147",
    "hex1": "85",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$5F",
    "comment": "save old block start low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B149",
    "hex1": "84",
    "hex2": "60",
    "hex3": null,
    "opcode": "STY",
    "argument": "$60",
    "comment": "save old block start high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B14B",
    "hex1": "A5",
    "hex2": "31",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$31",
    "comment": "get end of arrays low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B14D",
    "hex1": "A4",
    "hex2": "32",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$32",
    "comment": "get end of arrays high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B14F",
    "hex1": "85",
    "hex2": "5A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$5A",
    "comment": "save old block end low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B151",
    "hex1": "84",
    "hex2": "5B",
    "hex3": null,
    "opcode": "STY",
    "argument": "$5B",
    "comment": "save old block end high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B153",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B154",
    "hex1": "69",
    "hex2": "07",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$07",
    "comment": "+7, space for one variable",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B156",
    "hex1": "90",
    "hex2": "01",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B159",
    "comment": "branch if no overflow to high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B158",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "else increment high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B159",
    "hex1": "85",
    "hex2": "58",
    "hex3": null,
    "opcode": "STA",
    "argument": "$58",
    "comment": "set new block end low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B15B",
    "hex1": "84",
    "hex2": "59",
    "hex3": null,
    "opcode": "STY",
    "argument": "$59",
    "comment": "set new block end high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B15D",
    "hex1": "20",
    "hex2": "B8",
    "hex3": "A3",
    "opcode": "JSR",
    "argument": "$A3B8",
    "comment": "open up space in memory",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B160",
    "hex1": "A5",
    "hex2": "58",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$58",
    "comment": "get new start low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B162",
    "hex1": "A4",
    "hex2": "59",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$59",
    "comment": "get new start high byte (-$100)",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B164",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "correct high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B165",
    "hex1": "85",
    "hex2": "2F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$2F",
    "comment": "set end of variables low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B167",
    "hex1": "84",
    "hex2": "30",
    "hex3": null,
    "opcode": "STY",
    "argument": "$30",
    "comment": "set end of variables high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B169",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B16B",
    "hex1": "A5",
    "hex2": "45",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$45",
    "comment": "get variable name 1st character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B16D",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "save variable name 1st character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B16F",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B170",
    "hex1": "A5",
    "hex2": "46",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$46",
    "comment": "get variable name 2nd character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B172",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "save variable name 2nd character",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B174",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B176",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B177",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "initialise variable byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B179",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B17A",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "initialise variable byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B17C",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B17D",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "initialise variable byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B17F",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B180",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "initialise variable byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B182",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B183",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "initialise variable byte found a match for variable",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B185",
    "hex1": "A5",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$5F",
    "comment": "get variable address low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B187",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B188",
    "hex1": "69",
    "hex2": "02",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$02",
    "comment": "+2, offset past variable name bytes",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B18A",
    "hex1": "A4",
    "hex2": "60",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$60",
    "comment": "get variable address high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B18C",
    "hex1": "90",
    "hex2": "01",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B18F",
    "comment": "branch if no overflow from add",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B18E",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "else increment high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B18F",
    "hex1": "85",
    "hex2": "47",
    "hex3": null,
    "opcode": "STA",
    "argument": "$47",
    "comment": "save current variable pointer low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B191",
    "hex1": "84",
    "hex2": "48",
    "hex3": null,
    "opcode": "STY",
    "argument": "$48",
    "comment": "save current variable pointer high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B193",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "set-up array pointer to first element in array",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B194",
    "hex1": "A5",
    "hex2": "0B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$0B",
    "comment": "get # of dimensions (1, 2 or 3)",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B196",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "*2 (also clears the carry !)",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B197",
    "hex1": "69",
    "hex2": "05",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$05",
    "comment": "+5 (result is 7, 9 or 11 here)",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B199",
    "hex1": "65",
    "hex2": "5F",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$5F",
    "comment": "add array start pointer low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B19B",
    "hex1": "A4",
    "hex2": "60",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$60",
    "comment": "get array pointer high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B19D",
    "hex1": "90",
    "hex2": "01",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B1A0",
    "comment": "branch if no overflow",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B19F",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "else increment high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B1A0",
    "hex1": "85",
    "hex2": "58",
    "hex3": null,
    "opcode": "STA",
    "argument": "$58",
    "comment": "save array data pointer low byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B1A2",
    "hex1": "84",
    "hex2": "59",
    "hex3": null,
    "opcode": "STY",
    "argument": "$59",
    "comment": "save array data pointer high byte",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B1A4",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "search_for_variable",
    "entry": false,
    "label": "n/a",
    "desc": "(part of search_for_variable)"
  },
  {
    "addr": "B1A5",
    "hex1": "90",
    "hex2": "80",
    "hex3": "00",
    "opcode": "00",
    "argument": "0",
    "comment": "-32768",
    "desc": "-32768 as floating value",
    "parent": "this",
    "entry": true,
    "label": "32768_as_floating_va"
  },
  {
    "addr": "B1AA",
    "hex1": "20",
    "hex2": "BF",
    "hex3": "B1",
    "opcode": "JSR",
    "argument": "$B1BF",
    "comment": "evaluate integer expression, no sign check",
    "desc": "convert float to fixed",
    "parent": "this",
    "entry": true,
    "label": "convert_float_to_fix"
  },
  {
    "addr": "B1AD",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get result low byte",
    "parent": "convert_float_to_fix",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_float_to_fix)"
  },
  {
    "addr": "B1AF",
    "hex1": "A4",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$65",
    "comment": "get result high byte",
    "parent": "convert_float_to_fix",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_float_to_fix)"
  },
  {
    "addr": "B1B1",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "convert_float_to_fix",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_float_to_fix)"
  },
  {
    "addr": "B1B2",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "desc": "evaluate integer expression",
    "parent": "this",
    "entry": true,
    "label": "evaluate_integer_exp"
  },
  {
    "addr": "B1B5",
    "hex1": "20",
    "hex2": "9E",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD9E",
    "comment": "evaluate expression evaluate integer expression, sign check",
    "parent": "evaluate_integer_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_integer_exp)"
  },
  {
    "addr": "B1B8",
    "hex1": "20",
    "hex2": "8D",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8D",
    "comment": "check if source is numeric, else do type mismatch",
    "parent": "evaluate_integer_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_integer_exp)"
  },
  {
    "addr": "B1BB",
    "hex1": "A5",
    "hex2": "66",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$66",
    "comment": "get FAC1 sign (b7)",
    "parent": "evaluate_integer_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_integer_exp)"
  },
  {
    "addr": "B1BD",
    "hex1": "30",
    "hex2": "0D",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$B1CC",
    "comment": "do illegal quantity error if -ve evaluate integer expression, no sign check",
    "parent": "evaluate_integer_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_integer_exp)"
  },
  {
    "addr": "B1BF",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "parent": "evaluate_integer_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_integer_exp)"
  },
  {
    "addr": "B1C1",
    "hex1": "C9",
    "hex2": "90",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$90",
    "comment": "compare with exponent = 2^16 (n>2^15)",
    "parent": "evaluate_integer_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_integer_exp)"
  },
  {
    "addr": "B1C3",
    "hex1": "90",
    "hex2": "09",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B1CE",
    "comment": "if n<2^16 go convert FAC1 floating to fixed and return",
    "parent": "evaluate_integer_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_integer_exp)"
  },
  {
    "addr": "B1C5",
    "hex1": "A9",
    "hex2": "A5",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$A5",
    "comment": "set pointer low byte to -32768",
    "parent": "evaluate_integer_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_integer_exp)"
  },
  {
    "addr": "B1C7",
    "hex1": "A0",
    "hex2": "B1",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$B1",
    "comment": "set pointer high byte to -32768",
    "parent": "evaluate_integer_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_integer_exp)"
  },
  {
    "addr": "B1C9",
    "hex1": "20",
    "hex2": "5B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC5B",
    "comment": "compare FAC1 with (AY)",
    "parent": "evaluate_integer_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_integer_exp)"
  },
  {
    "addr": "B1CC",
    "hex1": "D0",
    "hex2": "7A",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B248",
    "comment": "if <> do illegal quantity error then warm start",
    "parent": "evaluate_integer_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_integer_exp)"
  },
  {
    "addr": "B1CE",
    "hex1": "4C",
    "hex2": "9B",
    "hex3": "BC",
    "opcode": "JMP",
    "argument": "$BC9B",
    "comment": "convert FAC1 floating to fixed and return",
    "parent": "evaluate_integer_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_integer_exp)"
  },
  {
    "addr": "B1D1",
    "hex1": "A5",
    "hex2": "0C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$0C",
    "comment": "get DIM flag",
    "desc": "find or make array an array is stored as follows array name             two bytes with the following patterns for different types 1st char    2nd char b7          b7       type             element size --------    --------    -----            ------------ 0           0        floating point   5 0           1        string           3 1           1        integer          2 offset to next array   word dimension count        byte 1st dimension size     word, this is the number of elements including 0 2nd dimension size     word, only here if the array has a second dimension 2nd dimension size     word, only here if the array has a third dimension note: the dimension size word is in high byte low byte format, not like most 6502 words then for each element the required number of bytes given as the element size above",
    "parent": "this",
    "entry": true,
    "label": "find_or_make_array_a"
  },
  {
    "addr": "B1D3",
    "hex1": "05",
    "hex2": "0E",
    "hex3": null,
    "opcode": "ORA",
    "argument": "$0E",
    "comment": "OR with data type flag",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1D5",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1D6",
    "hex1": "A5",
    "hex2": "0D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$0D",
    "comment": "get data type flag, $FF = string, $00 = numeric",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1D8",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1D9",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear dimensions count now get the array dimension(s) and stack it (them) before the data type and DIM flag",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1DB",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "copy dimensions count",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1DC",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1DD",
    "hex1": "A5",
    "hex2": "46",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$46",
    "comment": "get array name 2nd byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1DF",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1E0",
    "hex1": "A5",
    "hex2": "45",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$45",
    "comment": "get array name 1st byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1E2",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1E3",
    "hex1": "20",
    "hex2": "B2",
    "hex3": "B1",
    "opcode": "JSR",
    "argument": "$B1B2",
    "comment": "evaluate integer expression",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1E6",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull array name 1st byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1E7",
    "hex1": "85",
    "hex2": "45",
    "hex3": null,
    "opcode": "STA",
    "argument": "$45",
    "comment": "restore array name 1st byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1E9",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull array name 2nd byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1EA",
    "hex1": "85",
    "hex2": "46",
    "hex3": null,
    "opcode": "STA",
    "argument": "$46",
    "comment": "restore array name 2nd byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1EC",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull dimensions count",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1ED",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "restore it",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1EE",
    "hex1": "BA",
    "hex2": "",
    "hex3": null,
    "opcode": "TSX",
    "argument": "",
    "comment": "copy stack pointer",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1EF",
    "hex1": "BD",
    "hex2": "02",
    "hex3": "01",
    "opcode": "LDA",
    "argument": "$0102,X",
    "comment": "get DIM flag",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1F2",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1F3",
    "hex1": "BD",
    "hex2": "01",
    "hex3": "01",
    "opcode": "LDA",
    "argument": "$0101,X",
    "comment": "get data type flag",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1F6",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1F7",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get this dimension size high byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1F9",
    "hex1": "9D",
    "hex2": "02",
    "hex3": "01",
    "opcode": "STA",
    "argument": "$0102,X",
    "comment": "stack before flag bytes",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1FC",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get this dimension size low byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B1FE",
    "hex1": "9D",
    "hex2": "01",
    "hex3": "01",
    "opcode": "STA",
    "argument": "$0101,X",
    "comment": "stack before flag bytes",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B201",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment dimensions count",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B202",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B205",
    "hex1": "C9",
    "hex2": "2C",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$2C",
    "comment": "compare with \",\"",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B207",
    "hex1": "F0",
    "hex2": "D2",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B1DB",
    "comment": "if found go do next dimension",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B209",
    "hex1": "84",
    "hex2": "0B",
    "hex3": null,
    "opcode": "STY",
    "argument": "$0B",
    "comment": "store dimensions count",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B20B",
    "hex1": "20",
    "hex2": "F7",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEF7",
    "comment": "scan for \")\", else do syntax error then warm start",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B20E",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull data type flag",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B20F",
    "hex1": "85",
    "hex2": "0D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$0D",
    "comment": "restore data type flag, $FF = string, $00 = numeric",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B211",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull data type flag",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B212",
    "hex1": "85",
    "hex2": "0E",
    "hex3": null,
    "opcode": "STA",
    "argument": "$0E",
    "comment": "restore data type flag, $80 = integer, $00 = float",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B214",
    "hex1": "29",
    "hex2": "7F",
    "hex3": null,
    "opcode": "AND",
    "argument": "#$7F",
    "comment": "mask dim flag",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B216",
    "hex1": "85",
    "hex2": "0C",
    "hex3": null,
    "opcode": "STA",
    "argument": "$0C",
    "comment": "restore DIM flag",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B218",
    "hex1": "A6",
    "hex2": "2F",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$2F",
    "comment": "set end of variables low byte (array memory start low byte)",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B21A",
    "hex1": "A5",
    "hex2": "30",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$30",
    "comment": "set end of variables high byte (array memory start high byte) now check to see if we are at the end of array memory, we would be if there were no arrays.",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B21C",
    "hex1": "86",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STX",
    "argument": "$5F",
    "comment": "save as array start pointer low byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B21E",
    "hex1": "85",
    "hex2": "60",
    "hex3": null,
    "opcode": "STA",
    "argument": "$60",
    "comment": "save as array start pointer high byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B220",
    "hex1": "C5",
    "hex2": "32",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$32",
    "comment": "compare with end of arrays high byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B222",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B228",
    "comment": "branch if not reached array memory end",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B224",
    "hex1": "E4",
    "hex2": "31",
    "hex3": null,
    "opcode": "CPX",
    "argument": "$31",
    "comment": "else compare with end of arrays low byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B226",
    "hex1": "F0",
    "hex2": "39",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B261",
    "comment": "go build array if not found search for array",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B228",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B22A",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get array name first byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B22C",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index to second name byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B22D",
    "hex1": "C5",
    "hex2": "45",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$45",
    "comment": "compare with this array name first byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B22F",
    "hex1": "D0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B237",
    "comment": "branch if no match",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B231",
    "hex1": "A5",
    "hex2": "46",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$46",
    "comment": "else get this array name second byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B233",
    "hex1": "D1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "CMP",
    "argument": "($5F),Y",
    "comment": "compare with array name second byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B235",
    "hex1": "F0",
    "hex2": "16",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B24D",
    "comment": "array found so branch no match",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B237",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B238",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get array size low byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B23A",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B23B",
    "hex1": "65",
    "hex2": "5F",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$5F",
    "comment": "add array start pointer low byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B23D",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy low byte to X",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B23E",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B23F",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get array size high byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B241",
    "hex1": "65",
    "hex2": "60",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$60",
    "comment": "add array memory pointer high byte",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B243",
    "hex1": "90",
    "hex2": "D7",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B21C",
    "comment": "if no overflow go check next array",
    "parent": "find_or_make_array_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of find_or_make_array_a)"
  },
  {
    "addr": "B245",
    "hex1": "A2",
    "hex2": "12",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$12",
    "comment": "error $12, bad subscript error",
    "desc": "do bad subscript error",
    "parent": "this",
    "entry": true,
    "label": "do_bad_subscript_err"
  },
  {
    "addr": "B247",
    "hex1": "2C",
    "hex2": "",
    "hex3": null,
    "opcode": ".BY",
    "argument": "E $2C",
    "comment": "makes next line BIT $0EA2",
    "parent": "do_bad_subscript_err",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_bad_subscript_err)"
  },
  {
    "addr": "B248",
    "hex1": "A2",
    "hex2": "0E",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$0E",
    "comment": "error $0E, illegal quantity error",
    "desc": "do illegal quantity error",
    "parent": "this",
    "entry": true,
    "label": "do_illegal_quantity_"
  },
  {
    "addr": "B24A",
    "hex1": "4C",
    "hex2": "37",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A437",
    "comment": "do error #X then warm start",
    "parent": "do_illegal_quantity_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_illegal_quantity_)"
  },
  {
    "addr": "B24D",
    "hex1": "A2",
    "hex2": "13",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$13",
    "comment": "set error $13, double dimension error",
    "desc": "found the array",
    "parent": "this",
    "entry": true,
    "label": "found_the_array"
  },
  {
    "addr": "B24F",
    "hex1": "A5",
    "hex2": "0C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$0C",
    "comment": "get DIM flag",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B251",
    "hex1": "D0",
    "hex2": "F7",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B24A",
    "comment": "if we are trying to dimension it do error #X then warm start found the array and we're not dimensioning it so we must find an element in it",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B253",
    "hex1": "20",
    "hex2": "94",
    "hex3": "B1",
    "opcode": "JSR",
    "argument": "$B194",
    "comment": "set-up array pointer to first element in array",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B256",
    "hex1": "A5",
    "hex2": "0B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$0B",
    "comment": "get dimensions count",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B258",
    "hex1": "A0",
    "hex2": "04",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$04",
    "comment": "set index to array's # of dimensions",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B25A",
    "hex1": "D1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "CMP",
    "argument": "($5F),Y",
    "comment": "compare with no of dimensions",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B25C",
    "hex1": "D0",
    "hex2": "E7",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B245",
    "comment": "if wrong do bad subscript error",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B25E",
    "hex1": "4C",
    "hex2": "EA",
    "hex3": "B2",
    "opcode": "JMP",
    "argument": "$B2EA",
    "comment": "found array so go get element array not found, so build it",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B261",
    "hex1": "20",
    "hex2": "94",
    "hex3": "B1",
    "opcode": "JSR",
    "argument": "$B194",
    "comment": "set-up array pointer to first element in array",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B264",
    "hex1": "20",
    "hex2": "08",
    "hex3": "A4",
    "opcode": "JSR",
    "argument": "$A408",
    "comment": "check available memory, do out of memory error if no room",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B267",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear Y",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B269",
    "hex1": "84",
    "hex2": "72",
    "hex3": null,
    "opcode": "STY",
    "argument": "$72",
    "comment": "clear array data size high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B26B",
    "hex1": "A2",
    "hex2": "05",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$05",
    "comment": "set default element size",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B26D",
    "hex1": "A5",
    "hex2": "45",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$45",
    "comment": "get variable name 1st byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B26F",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "save array name 1st byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B271",
    "hex1": "10",
    "hex2": "01",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$B274",
    "comment": "branch if not string or floating point array",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B273",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement element size, $04",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B274",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B275",
    "hex1": "A5",
    "hex2": "46",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$46",
    "comment": "get variable name 2nd byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B277",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "save array name 2nd byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B279",
    "hex1": "10",
    "hex2": "02",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$B27D",
    "comment": "branch if not integer or string",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B27B",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement element size, $03",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B27C",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement element size, $02",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B27D",
    "hex1": "86",
    "hex2": "71",
    "hex3": null,
    "opcode": "STX",
    "argument": "$71",
    "comment": "save element size",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B27F",
    "hex1": "A5",
    "hex2": "0B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$0B",
    "comment": "get dimensions count",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B281",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index ..",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B282",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": ".. to array  ..",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B283",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": ".. dimension count",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B284",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "save array dimension count",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B286",
    "hex1": "A2",
    "hex2": "0B",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$0B",
    "comment": "set default dimension size low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B288",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "set default dimension size high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B28A",
    "hex1": "24",
    "hex2": "0C",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$0C",
    "comment": "test DIM flag",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B28C",
    "hex1": "50",
    "hex2": "08",
    "hex3": null,
    "opcode": "BVC",
    "argument": "$B296",
    "comment": "branch if default to be used",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B28E",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull dimension size low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B28F",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B290",
    "hex1": "69",
    "hex2": "01",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$01",
    "comment": "add 1, allow for zeroeth element",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B292",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy low byte to X",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B293",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull dimension size high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B294",
    "hex1": "69",
    "hex2": "00",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$00",
    "comment": "add carry to high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B296",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "incement index to dimension size high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B297",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "save dimension size high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B299",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "incement index to dimension size low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B29A",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy dimension size low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B29B",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "save dimension size low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B29D",
    "hex1": "20",
    "hex2": "4C",
    "hex3": "B3",
    "opcode": "JSR",
    "argument": "$B34C",
    "comment": "compute array size",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2A0",
    "hex1": "86",
    "hex2": "71",
    "hex3": null,
    "opcode": "STX",
    "argument": "$71",
    "comment": "save result low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2A2",
    "hex1": "85",
    "hex2": "72",
    "hex3": null,
    "opcode": "STA",
    "argument": "$72",
    "comment": "save result high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2A4",
    "hex1": "A4",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$22",
    "comment": "restore index",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2A6",
    "hex1": "C6",
    "hex2": "0B",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$0B",
    "comment": "decrement dimensions count",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2A8",
    "hex1": "D0",
    "hex2": "DC",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B286",
    "comment": "loop if not all done",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2AA",
    "hex1": "65",
    "hex2": "59",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$59",
    "comment": "add array data pointer high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2AC",
    "hex1": "B0",
    "hex2": "5D",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B30B",
    "comment": "if overflow do out of memory error then warm start",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2AE",
    "hex1": "85",
    "hex2": "59",
    "hex3": null,
    "opcode": "STA",
    "argument": "$59",
    "comment": "save array data pointer high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2B0",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy array data pointer high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2B1",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy array size low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2B2",
    "hex1": "65",
    "hex2": "58",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$58",
    "comment": "add array data pointer low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2B4",
    "hex1": "90",
    "hex2": "03",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B2B9",
    "comment": "branch if no rollover",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2B6",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "else increment next array pointer high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2B7",
    "hex1": "F0",
    "hex2": "52",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B30B",
    "comment": "if rolled over do out of memory error then warm start",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2B9",
    "hex1": "20",
    "hex2": "08",
    "hex3": "A4",
    "opcode": "JSR",
    "argument": "$A408",
    "comment": "check available memory, do out of memory error if no room",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2BC",
    "hex1": "85",
    "hex2": "31",
    "hex3": null,
    "opcode": "STA",
    "argument": "$31",
    "comment": "set end of arrays low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2BE",
    "hex1": "84",
    "hex2": "32",
    "hex3": null,
    "opcode": "STY",
    "argument": "$32",
    "comment": "set end of arrays high byte now the aray is created we need to zero all the elements in it",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2C0",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A for array clear",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2C2",
    "hex1": "E6",
    "hex2": "72",
    "hex3": null,
    "opcode": "INC",
    "argument": "$72",
    "comment": "increment array size high byte, now block count",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2C4",
    "hex1": "A4",
    "hex2": "71",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$71",
    "comment": "get array size low byte, now index to block",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2C6",
    "hex1": "F0",
    "hex2": "05",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B2CD",
    "comment": "branch if $00",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2C8",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index, do 0 to n-1",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2C9",
    "hex1": "91",
    "hex2": "58",
    "hex3": null,
    "opcode": "STA",
    "argument": "($58),Y",
    "comment": "clear array element byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2CB",
    "hex1": "D0",
    "hex2": "FB",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B2C8",
    "comment": "loop until this block done",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2CD",
    "hex1": "C6",
    "hex2": "59",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$59",
    "comment": "decrement array pointer high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2CF",
    "hex1": "C6",
    "hex2": "72",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$72",
    "comment": "decrement block count high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2D1",
    "hex1": "D0",
    "hex2": "F5",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B2C8",
    "comment": "loop until all blocks done",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2D3",
    "hex1": "E6",
    "hex2": "59",
    "hex3": null,
    "opcode": "INC",
    "argument": "$59",
    "comment": "correct for last loop",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2D5",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2D6",
    "hex1": "A5",
    "hex2": "31",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$31",
    "comment": "get end of arrays low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2D8",
    "hex1": "E5",
    "hex2": "5F",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$5F",
    "comment": "subtract array start low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2DA",
    "hex1": "A0",
    "hex2": "02",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$02",
    "comment": "index to array size low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2DC",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "save array size low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2DE",
    "hex1": "A5",
    "hex2": "32",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$32",
    "comment": "get end of arrays high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2E0",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "index to array size high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2E1",
    "hex1": "E5",
    "hex2": "60",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$60",
    "comment": "subtract array start high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2E3",
    "hex1": "91",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "($5F),Y",
    "comment": "save array size high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2E5",
    "hex1": "A5",
    "hex2": "0C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$0C",
    "comment": "get default DIM flag",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2E7",
    "hex1": "D0",
    "hex2": "62",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B34B",
    "comment": "exit if this was a DIM command else, find element",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2E9",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "set index to # of dimensions, the dimension indeces are on the stack and will be removed as the position of the array element is calculated",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2EA",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get array's dimension count",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2EC",
    "hex1": "85",
    "hex2": "0B",
    "hex3": null,
    "opcode": "STA",
    "argument": "$0B",
    "comment": "save it",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2EE",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2F0",
    "hex1": "85",
    "hex2": "71",
    "hex3": null,
    "opcode": "STA",
    "argument": "$71",
    "comment": "clear array data pointer low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2F2",
    "hex1": "85",
    "hex2": "72",
    "hex3": null,
    "opcode": "STA",
    "argument": "$72",
    "comment": "save array data pointer high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2F4",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index, point to array bound high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2F5",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull array index low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2F6",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy to X",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2F7",
    "hex1": "85",
    "hex2": "64",
    "hex3": null,
    "opcode": "STA",
    "argument": "$64",
    "comment": "save index low byte to FAC1 mantissa 3",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2F9",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull array index high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2FA",
    "hex1": "85",
    "hex2": "65",
    "hex3": null,
    "opcode": "STA",
    "argument": "$65",
    "comment": "save index high byte to FAC1 mantissa 4",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2FC",
    "hex1": "D1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "CMP",
    "argument": "($5F),Y",
    "comment": "compare with array bound high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B2FE",
    "hex1": "90",
    "hex2": "0E",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B30E",
    "comment": "branch if within bounds",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B300",
    "hex1": "D0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B308",
    "comment": "if outside bounds do bad subscript error else high byte was = so test low bytes",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B302",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "index to array bound low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B303",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "get array index low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B304",
    "hex1": "D1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "CMP",
    "argument": "($5F),Y",
    "comment": "compare with array bound low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B306",
    "hex1": "90",
    "hex2": "07",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B30F",
    "comment": "branch if within bounds",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B308",
    "hex1": "4C",
    "hex2": "45",
    "hex3": "B2",
    "opcode": "JMP",
    "argument": "$B245",
    "comment": "do bad subscript error",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B30B",
    "hex1": "4C",
    "hex2": "35",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A435",
    "comment": "do out of memory error then warm start",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B30E",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "index to array bound low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B30F",
    "hex1": "A5",
    "hex2": "72",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$72",
    "comment": "get array data pointer high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B311",
    "hex1": "05",
    "hex2": "71",
    "hex3": null,
    "opcode": "ORA",
    "argument": "$71",
    "comment": "OR with array data pointer low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B313",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for either add, carry always clear here ??",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B314",
    "hex1": "F0",
    "hex2": "0A",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B320",
    "comment": "branch if array data pointer = null, skip multiply",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B316",
    "hex1": "20",
    "hex2": "4C",
    "hex3": "B3",
    "opcode": "JSR",
    "argument": "$B34C",
    "comment": "compute array size",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B319",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "get result low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B31A",
    "hex1": "65",
    "hex2": "64",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$64",
    "comment": "add index low byte from FAC1 mantissa 3",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B31C",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "save result low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B31D",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "get result high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B31E",
    "hex1": "A4",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$22",
    "comment": "restore index",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B320",
    "hex1": "65",
    "hex2": "65",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$65",
    "comment": "add index high byte from FAC1 mantissa 4",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B322",
    "hex1": "86",
    "hex2": "71",
    "hex3": null,
    "opcode": "STX",
    "argument": "$71",
    "comment": "save array data pointer low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B324",
    "hex1": "C6",
    "hex2": "0B",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$0B",
    "comment": "decrement dimensions count",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B326",
    "hex1": "D0",
    "hex2": "CA",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B2F2",
    "comment": "loop if dimensions still to do",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B328",
    "hex1": "85",
    "hex2": "72",
    "hex3": null,
    "opcode": "STA",
    "argument": "$72",
    "comment": "save array data pointer high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B32A",
    "hex1": "A2",
    "hex2": "05",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$05",
    "comment": "set default element size",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B32C",
    "hex1": "A5",
    "hex2": "45",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$45",
    "comment": "get variable name 1st byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B32E",
    "hex1": "10",
    "hex2": "01",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$B331",
    "comment": "branch if not string or floating point array",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B330",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement element size, $04",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B331",
    "hex1": "A5",
    "hex2": "46",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$46",
    "comment": "get variable name 2nd byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B333",
    "hex1": "10",
    "hex2": "02",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$B337",
    "comment": "branch if not integer or string",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B335",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement element size, $03",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B336",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement element size, $02",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B337",
    "hex1": "86",
    "hex2": "28",
    "hex3": null,
    "opcode": "STX",
    "argument": "$28",
    "comment": "save dimension size low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B339",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear dimension size high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B33B",
    "hex1": "20",
    "hex2": "55",
    "hex3": "B3",
    "opcode": "JSR",
    "argument": "$B355",
    "comment": "compute array size",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B33E",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy array size low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B33F",
    "hex1": "65",
    "hex2": "58",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$58",
    "comment": "add array data start pointer low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B341",
    "hex1": "85",
    "hex2": "47",
    "hex3": null,
    "opcode": "STA",
    "argument": "$47",
    "comment": "save as current variable pointer low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B343",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "copy array size high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B344",
    "hex1": "65",
    "hex2": "59",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$59",
    "comment": "add array data start pointer high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B346",
    "hex1": "85",
    "hex2": "48",
    "hex3": null,
    "opcode": "STA",
    "argument": "$48",
    "comment": "save as current variable pointer high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B348",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy high byte to Y",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B349",
    "hex1": "A5",
    "hex2": "47",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$47",
    "comment": "get current variable pointer low byte pointer to element is now in AY",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B34B",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "compute array size, result in XY",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B34C",
    "hex1": "84",
    "hex2": "22",
    "hex3": null,
    "opcode": "STY",
    "argument": "$22",
    "comment": "save index",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B34E",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get dimension size low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B350",
    "hex1": "85",
    "hex2": "28",
    "hex3": null,
    "opcode": "STA",
    "argument": "$28",
    "comment": "save dimension size low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B352",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B353",
    "hex1": "B1",
    "hex2": "5F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($5F),Y",
    "comment": "get dimension size high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B355",
    "hex1": "85",
    "hex2": "29",
    "hex3": null,
    "opcode": "STA",
    "argument": "$29",
    "comment": "save dimension size high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B357",
    "hex1": "A9",
    "hex2": "10",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$10",
    "comment": "count = $10 (16 bit multiply)",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B359",
    "hex1": "85",
    "hex2": "5D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$5D",
    "comment": "save bit count",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B35B",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "clear result low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B35D",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear result high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B35F",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "get result low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B360",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "*2",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B361",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "save result low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B362",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "get result high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B363",
    "hex1": "2A",
    "hex2": "",
    "hex3": null,
    "opcode": "ROL",
    "argument": "",
    "comment": "*2",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B364",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "save result high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B365",
    "hex1": "B0",
    "hex2": "A4",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B30B",
    "comment": "if overflow go do \"Out of memory\" error",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B367",
    "hex1": "06",
    "hex2": "71",
    "hex3": null,
    "opcode": "ASL",
    "argument": "$71",
    "comment": "shift element size low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B369",
    "hex1": "26",
    "hex2": "72",
    "hex3": null,
    "opcode": "ROL",
    "argument": "$72",
    "comment": "shift element size high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B36B",
    "hex1": "90",
    "hex2": "0B",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B378",
    "comment": "skip add if no carry",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B36D",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "else clear carry for add",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B36E",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "get result low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B36F",
    "hex1": "65",
    "hex2": "28",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$28",
    "comment": "add dimension size low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B371",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "save result low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B372",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "get result high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B373",
    "hex1": "65",
    "hex2": "29",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$29",
    "comment": "add dimension size high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B375",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "save result high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B376",
    "hex1": "B0",
    "hex2": "93",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B30B",
    "comment": "if overflow go do \"Out of memory\" error",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B378",
    "hex1": "C6",
    "hex2": "5D",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$5D",
    "comment": "decrement bit count",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B37A",
    "hex1": "D0",
    "hex2": "E3",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B35F",
    "comment": "loop until all done",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B37C",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "perform FRE()",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B37D",
    "hex1": "A5",
    "hex2": "0D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$0D",
    "comment": "get data type flag, $FF = string, $00 = numeric",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B37F",
    "hex1": "F0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B384",
    "comment": "branch if numeric",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B381",
    "hex1": "20",
    "hex2": "A6",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B6A6",
    "comment": "pop string off descriptor stack, or from top of string space returns with A = length, X=$71=pointer low byte, Y=$72=pointer high byte FRE(n) was numeric so do this",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B384",
    "hex1": "20",
    "hex2": "26",
    "hex3": "B5",
    "opcode": "JSR",
    "argument": "$B526",
    "comment": "go do garbage collection",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B387",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B388",
    "hex1": "A5",
    "hex2": "33",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$33",
    "comment": "get bottom of string space low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B38A",
    "hex1": "E5",
    "hex2": "31",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$31",
    "comment": "subtract end of arrays low byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B38C",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy result to Y",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B38D",
    "hex1": "A5",
    "hex2": "34",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$34",
    "comment": "get bottom of string space high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B38F",
    "hex1": "E5",
    "hex2": "32",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$32",
    "comment": "subtract end of arrays high byte",
    "parent": "found_the_array",
    "entry": false,
    "label": "n/a",
    "desc": "(part of found_the_array)"
  },
  {
    "addr": "B391",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "set type = numeric",
    "desc": "convert fixed integer AY to float FAC1",
    "parent": "this",
    "entry": true,
    "label": "convert_fixed_intege"
  },
  {
    "addr": "B393",
    "hex1": "86",
    "hex2": "0D",
    "hex3": null,
    "opcode": "STX",
    "argument": "$0D",
    "comment": "clear data type flag, $FF = string, $00 = numeric",
    "parent": "convert_fixed_intege",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fixed_intege)"
  },
  {
    "addr": "B395",
    "hex1": "85",
    "hex2": "62",
    "hex3": null,
    "opcode": "STA",
    "argument": "$62",
    "comment": "save FAC1 mantissa 1",
    "parent": "convert_fixed_intege",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fixed_intege)"
  },
  {
    "addr": "B397",
    "hex1": "84",
    "hex2": "63",
    "hex3": null,
    "opcode": "STY",
    "argument": "$63",
    "comment": "save FAC1 mantissa 2",
    "parent": "convert_fixed_intege",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fixed_intege)"
  },
  {
    "addr": "B399",
    "hex1": "A2",
    "hex2": "90",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$90",
    "comment": "set exponent=2^16 (integer)",
    "parent": "convert_fixed_intege",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fixed_intege)"
  },
  {
    "addr": "B39B",
    "hex1": "4C",
    "hex2": "44",
    "hex3": "BC",
    "opcode": "JMP",
    "argument": "$BC44",
    "comment": "set exp = X, clear FAC1 3 and 4, normalise and return",
    "parent": "convert_fixed_intege",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fixed_intege)"
  },
  {
    "addr": "B39E",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set Cb for read cursor position",
    "desc": "perform POS()",
    "parent": "this",
    "entry": true,
    "label": "perform_pos"
  },
  {
    "addr": "B39F",
    "hex1": "20",
    "hex2": "F0",
    "hex3": "FF",
    "opcode": "JSR",
    "argument": "$FFF0",
    "comment": "read/set X,Y cursor position",
    "parent": "perform_pos",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_pos)"
  },
  {
    "addr": "B3A2",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear high byte",
    "parent": "perform_pos",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_pos)"
  },
  {
    "addr": "B3A4",
    "hex1": "F0",
    "hex2": "EB",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B391",
    "comment": "convert fixed integer AY to float FAC1, branch always check not Direct, used by DEF and INPUT",
    "parent": "perform_pos",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_pos)"
  },
  {
    "addr": "B3A6",
    "hex1": "A6",
    "hex2": "3A",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$3A",
    "comment": "get current line number high byte",
    "parent": "perform_pos",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_pos)"
  },
  {
    "addr": "B3A8",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment it",
    "parent": "perform_pos",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_pos)"
  },
  {
    "addr": "B3A9",
    "hex1": "D0",
    "hex2": "A0",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B34B",
    "comment": "return if not direct mode else do illegal direct error",
    "parent": "perform_pos",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_pos)"
  },
  {
    "addr": "B3AB",
    "hex1": "A2",
    "hex2": "15",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$15",
    "comment": "error $15, illegal direct error",
    "parent": "perform_pos",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_pos)"
  },
  {
    "addr": "B3AD",
    "hex1": "2C",
    "hex2": "",
    "hex3": null,
    "opcode": ".BY",
    "argument": "E $2C",
    "comment": "makes next line BIT $1BA2",
    "parent": "perform_pos",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_pos)"
  },
  {
    "addr": "B3AE",
    "hex1": "A2",
    "hex2": "1B",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$1B",
    "comment": "error $1B, undefined function error",
    "parent": "perform_pos",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_pos)"
  },
  {
    "addr": "B3B0",
    "hex1": "4C",
    "hex2": "37",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A437",
    "comment": "do error #X then warm start",
    "parent": "perform_pos",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_pos)"
  },
  {
    "addr": "B3B3",
    "hex1": "20",
    "hex2": "E1",
    "hex3": "B3",
    "opcode": "JSR",
    "argument": "$B3E1",
    "comment": "check FNx syntax",
    "desc": "perform DEF",
    "parent": "this",
    "entry": true,
    "label": "perform_def"
  },
  {
    "addr": "B3B6",
    "hex1": "20",
    "hex2": "A6",
    "hex3": "B3",
    "opcode": "JSR",
    "argument": "$B3A6",
    "comment": "check not direct, back here if ok",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3B9",
    "hex1": "20",
    "hex2": "FA",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFA",
    "comment": "scan for \"(\", else do syntax error then warm start",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3BC",
    "hex1": "A9",
    "hex2": "80",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$80",
    "comment": "set flag for FNx",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3BE",
    "hex1": "85",
    "hex2": "10",
    "hex3": null,
    "opcode": "STA",
    "argument": "$10",
    "comment": "save subscript/FNx flag",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3C0",
    "hex1": "20",
    "hex2": "8B",
    "hex3": "B0",
    "opcode": "JSR",
    "argument": "$B08B",
    "comment": "get variable address",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3C3",
    "hex1": "20",
    "hex2": "8D",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8D",
    "comment": "check if source is numeric, else do type mismatch",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3C6",
    "hex1": "20",
    "hex2": "F7",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEF7",
    "comment": "scan for \")\", else do syntax error then warm start",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3C9",
    "hex1": "A9",
    "hex2": "B2",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$B2",
    "comment": "get = token",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3CB",
    "hex1": "20",
    "hex2": "FF",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFF",
    "comment": "scan for CHR$(A), else do syntax error then warm start",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3CE",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push next character",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3CF",
    "hex1": "A5",
    "hex2": "48",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$48",
    "comment": "get current variable pointer high byte",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3D1",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3D2",
    "hex1": "A5",
    "hex2": "47",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$47",
    "comment": "get current variable pointer low byte",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3D4",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3D5",
    "hex1": "A5",
    "hex2": "7B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$7B",
    "comment": "get BASIC execute pointer high byte",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3D7",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3D8",
    "hex1": "A5",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$7A",
    "comment": "get BASIC execute pointer low byte",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3DA",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3DB",
    "hex1": "20",
    "hex2": "F8",
    "hex3": "A8",
    "opcode": "JSR",
    "argument": "$A8F8",
    "comment": "perform DATA",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3DE",
    "hex1": "4C",
    "hex2": "4F",
    "hex3": "B4",
    "opcode": "JMP",
    "argument": "$B44F",
    "comment": "put execute pointer and variable pointer into function and return",
    "parent": "perform_def",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_def)"
  },
  {
    "addr": "B3E1",
    "hex1": "A9",
    "hex2": "A5",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$A5",
    "comment": "set FN token",
    "desc": "check FNx syntax",
    "parent": "this",
    "entry": true,
    "label": "check_fnx_syntax"
  },
  {
    "addr": "B3E3",
    "hex1": "20",
    "hex2": "FF",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFF",
    "comment": "scan for CHR$(A), else do syntax error then warm start",
    "parent": "check_fnx_syntax",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_fnx_syntax)"
  },
  {
    "addr": "B3E6",
    "hex1": "09",
    "hex2": "80",
    "hex3": null,
    "opcode": "ORA",
    "argument": "#$80",
    "comment": "set FN flag bit",
    "parent": "check_fnx_syntax",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_fnx_syntax)"
  },
  {
    "addr": "B3E8",
    "hex1": "85",
    "hex2": "10",
    "hex3": null,
    "opcode": "STA",
    "argument": "$10",
    "comment": "save FN name",
    "parent": "check_fnx_syntax",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_fnx_syntax)"
  },
  {
    "addr": "B3EA",
    "hex1": "20",
    "hex2": "92",
    "hex3": "B0",
    "opcode": "JSR",
    "argument": "$B092",
    "comment": "search for FN variable",
    "parent": "check_fnx_syntax",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_fnx_syntax)"
  },
  {
    "addr": "B3ED",
    "hex1": "85",
    "hex2": "4E",
    "hex3": null,
    "opcode": "STA",
    "argument": "$4E",
    "comment": "save function pointer low byte",
    "parent": "check_fnx_syntax",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_fnx_syntax)"
  },
  {
    "addr": "B3EF",
    "hex1": "84",
    "hex2": "4F",
    "hex3": null,
    "opcode": "STY",
    "argument": "$4F",
    "comment": "save function pointer high byte",
    "parent": "check_fnx_syntax",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_fnx_syntax)"
  },
  {
    "addr": "B3F1",
    "hex1": "4C",
    "hex2": "8D",
    "hex3": "AD",
    "opcode": "JMP",
    "argument": "$AD8D",
    "comment": "check if source is numeric and return, else do type mismatch",
    "parent": "check_fnx_syntax",
    "entry": false,
    "label": "n/a",
    "desc": "(part of check_fnx_syntax)"
  },
  {
    "addr": "B3F4",
    "hex1": "20",
    "hex2": "E1",
    "hex3": "B3",
    "opcode": "JSR",
    "argument": "$B3E1",
    "comment": "check FNx syntax",
    "desc": "Evaluate FNx",
    "parent": "this",
    "entry": true,
    "label": "evaluate_fnx"
  },
  {
    "addr": "B3F7",
    "hex1": "A5",
    "hex2": "4F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$4F",
    "comment": "get function pointer high byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B3F9",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B3FA",
    "hex1": "A5",
    "hex2": "4E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$4E",
    "comment": "get function pointer low byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B3FC",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B3FD",
    "hex1": "20",
    "hex2": "F1",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEF1",
    "comment": "evaluate expression within parentheses",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B400",
    "hex1": "20",
    "hex2": "8D",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8D",
    "comment": "check if source is numeric, else do type mismatch",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B403",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop function pointer low byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B404",
    "hex1": "85",
    "hex2": "4E",
    "hex3": null,
    "opcode": "STA",
    "argument": "$4E",
    "comment": "restore it",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B406",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop function pointer high byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B407",
    "hex1": "85",
    "hex2": "4F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$4F",
    "comment": "restore it",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B409",
    "hex1": "A0",
    "hex2": "02",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$02",
    "comment": "index to variable pointer high byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B40B",
    "hex1": "B1",
    "hex2": "4E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($4E),Y",
    "comment": "get variable address low byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B40D",
    "hex1": "85",
    "hex2": "47",
    "hex3": null,
    "opcode": "STA",
    "argument": "$47",
    "comment": "save current variable pointer low byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B40F",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy address low byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B410",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "index to variable address high byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B411",
    "hex1": "B1",
    "hex2": "4E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($4E),Y",
    "comment": "get variable pointer high byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B413",
    "hex1": "F0",
    "hex2": "99",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B3AE",
    "comment": "branch if high byte zero",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B415",
    "hex1": "85",
    "hex2": "48",
    "hex3": null,
    "opcode": "STA",
    "argument": "$48",
    "comment": "save current variable pointer high byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B417",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "index to mantissa 3 now stack the function variable value before use",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B418",
    "hex1": "B1",
    "hex2": "47",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($47),Y",
    "comment": "get byte from variable",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B41A",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "stack it",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B41B",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B41C",
    "hex1": "10",
    "hex2": "FA",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$B418",
    "comment": "loop until variable stacked",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B41E",
    "hex1": "A4",
    "hex2": "48",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$48",
    "comment": "get current variable pointer high byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B420",
    "hex1": "20",
    "hex2": "D4",
    "hex3": "BB",
    "opcode": "JSR",
    "argument": "$BBD4",
    "comment": "pack FAC1 into (XY)",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B423",
    "hex1": "A5",
    "hex2": "7B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$7B",
    "comment": "get BASIC execute pointer high byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B425",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B426",
    "hex1": "A5",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$7A",
    "comment": "get BASIC execute pointer low byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B428",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B429",
    "hex1": "B1",
    "hex2": "4E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($4E),Y",
    "comment": "get function execute pointer low byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B42B",
    "hex1": "85",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B42D",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "index to high byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B42E",
    "hex1": "B1",
    "hex2": "4E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($4E),Y",
    "comment": "get function execute pointer high byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B430",
    "hex1": "85",
    "hex2": "7B",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7B",
    "comment": "save BASIC execute pointer high byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B432",
    "hex1": "A5",
    "hex2": "48",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$48",
    "comment": "get current variable pointer high byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B434",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B435",
    "hex1": "A5",
    "hex2": "47",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$47",
    "comment": "get current variable pointer low byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B437",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B438",
    "hex1": "20",
    "hex2": "8A",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8A",
    "comment": "evaluate expression and check is numeric, else do type mismatch",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B43B",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull variable address low byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B43C",
    "hex1": "85",
    "hex2": "4E",
    "hex3": null,
    "opcode": "STA",
    "argument": "$4E",
    "comment": "save variable address low byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B43E",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull variable address high byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B43F",
    "hex1": "85",
    "hex2": "4F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$4F",
    "comment": "save variable address high byte",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B441",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B444",
    "hex1": "F0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B449",
    "comment": "branch if null (should be [EOL] marker)",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B446",
    "hex1": "4C",
    "hex2": "08",
    "hex3": "AF",
    "opcode": "JMP",
    "argument": "$AF08",
    "comment": "else syntax error then warm start",
    "parent": "evaluate_fnx",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_fnx)"
  },
  {
    "addr": "B449",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull BASIC execute pointer low byte",
    "desc": "restore BASIC execute pointer and function variable from stack",
    "parent": "this",
    "entry": true,
    "label": "restore_basic_execut"
  },
  {
    "addr": "B44A",
    "hex1": "85",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B44C",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull BASIC execute pointer high byte",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B44D",
    "hex1": "85",
    "hex2": "7B",
    "hex3": null,
    "opcode": "STA",
    "argument": "$7B",
    "comment": "save BASIC execute pointer high byte put execute pointer and variable pointer into function",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B44F",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B451",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull BASIC execute pointer low byte",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B452",
    "hex1": "91",
    "hex2": "4E",
    "hex3": null,
    "opcode": "STA",
    "argument": "($4E),Y",
    "comment": "save to function",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B454",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull BASIC execute pointer high byte",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B455",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B456",
    "hex1": "91",
    "hex2": "4E",
    "hex3": null,
    "opcode": "STA",
    "argument": "($4E),Y",
    "comment": "save to function",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B458",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull current variable address low byte",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B459",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B45A",
    "hex1": "91",
    "hex2": "4E",
    "hex3": null,
    "opcode": "STA",
    "argument": "($4E),Y",
    "comment": "save to function",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B45C",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull current variable address high byte",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B45D",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B45E",
    "hex1": "91",
    "hex2": "4E",
    "hex3": null,
    "opcode": "STA",
    "argument": "($4E),Y",
    "comment": "save to function",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B460",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull ??",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B461",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B462",
    "hex1": "91",
    "hex2": "4E",
    "hex3": null,
    "opcode": "STA",
    "argument": "($4E),Y",
    "comment": "save to function",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B464",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B465",
    "hex1": "20",
    "hex2": "8D",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8D",
    "comment": "check if source is numeric, else do type mismatch",
    "desc": "perform STR$()",
    "parent": "this",
    "entry": true,
    "label": "perform_str"
  },
  {
    "addr": "B468",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "set string index",
    "parent": "perform_str",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_str)"
  },
  {
    "addr": "B46A",
    "hex1": "20",
    "hex2": "DF",
    "hex3": "BD",
    "opcode": "JSR",
    "argument": "$BDDF",
    "comment": "convert FAC1 to string",
    "parent": "perform_str",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_str)"
  },
  {
    "addr": "B46D",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "dump return address (skip type check)",
    "parent": "perform_str",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_str)"
  },
  {
    "addr": "B46E",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "dump return address (skip type check)",
    "parent": "perform_str",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_str)"
  },
  {
    "addr": "B46F",
    "hex1": "A9",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$FF",
    "comment": "set result string low pointer",
    "parent": "perform_str",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_str)"
  },
  {
    "addr": "B471",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "set result string high pointer",
    "parent": "perform_str",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_str)"
  },
  {
    "addr": "B473",
    "hex1": "F0",
    "hex2": "12",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B487",
    "comment": "print null terminated string to utility pointer",
    "parent": "perform_str",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_str)"
  },
  {
    "addr": "B475",
    "hex1": "A6",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$64",
    "comment": "get descriptor pointer low byte",
    "desc": "do string vector copy descriptor pointer and make string space A bytes long",
    "parent": "this",
    "entry": true,
    "label": "do_string_vector_cop"
  },
  {
    "addr": "B477",
    "hex1": "A4",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$65",
    "comment": "get descriptor pointer high byte",
    "parent": "do_string_vector_cop",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_string_vector_cop)"
  },
  {
    "addr": "B479",
    "hex1": "86",
    "hex2": "50",
    "hex3": null,
    "opcode": "STX",
    "argument": "$50",
    "comment": "save descriptor pointer low byte",
    "parent": "do_string_vector_cop",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_string_vector_cop)"
  },
  {
    "addr": "B47B",
    "hex1": "84",
    "hex2": "51",
    "hex3": null,
    "opcode": "STY",
    "argument": "$51",
    "comment": "save descriptor pointer high byte",
    "parent": "do_string_vector_cop",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_string_vector_cop)"
  },
  {
    "addr": "B47D",
    "hex1": "20",
    "hex2": "F4",
    "hex3": "B4",
    "opcode": "JSR",
    "argument": "$B4F4",
    "comment": "make space in string memory for string A long",
    "desc": "make string space A bytes long",
    "parent": "this",
    "entry": true,
    "label": "make_string_space_a_"
  },
  {
    "addr": "B480",
    "hex1": "86",
    "hex2": "62",
    "hex3": null,
    "opcode": "STX",
    "argument": "$62",
    "comment": "save string pointer low byte",
    "parent": "make_string_space_a_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_string_space_a_)"
  },
  {
    "addr": "B482",
    "hex1": "84",
    "hex2": "63",
    "hex3": null,
    "opcode": "STY",
    "argument": "$63",
    "comment": "save string pointer high byte",
    "parent": "make_string_space_a_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_string_space_a_)"
  },
  {
    "addr": "B484",
    "hex1": "85",
    "hex2": "61",
    "hex3": null,
    "opcode": "STA",
    "argument": "$61",
    "comment": "save length",
    "parent": "make_string_space_a_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_string_space_a_)"
  },
  {
    "addr": "B486",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "make_string_space_a_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_string_space_a_)"
  },
  {
    "addr": "B487",
    "hex1": "A2",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$22",
    "comment": "set terminator to \"",
    "desc": "scan, set up string print \" terminated string to utility pointer",
    "parent": "this",
    "entry": true,
    "label": "scan_set_up_string_p"
  },
  {
    "addr": "B489",
    "hex1": "86",
    "hex2": "07",
    "hex3": null,
    "opcode": "STX",
    "argument": "$07",
    "comment": "set search character, terminator 1",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B48B",
    "hex1": "86",
    "hex2": "08",
    "hex3": null,
    "opcode": "STX",
    "argument": "$08",
    "comment": "set terminator 2 print search or alternate terminated string to utility pointer source is AY",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B48D",
    "hex1": "85",
    "hex2": "6F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6F",
    "comment": "store string start low byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B48F",
    "hex1": "84",
    "hex2": "70",
    "hex3": null,
    "opcode": "STY",
    "argument": "$70",
    "comment": "store string start high byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B491",
    "hex1": "85",
    "hex2": "62",
    "hex3": null,
    "opcode": "STA",
    "argument": "$62",
    "comment": "save string pointer low byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B493",
    "hex1": "84",
    "hex2": "63",
    "hex3": null,
    "opcode": "STY",
    "argument": "$63",
    "comment": "save string pointer high byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B495",
    "hex1": "A0",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$FF",
    "comment": "set length to -1",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B497",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment length",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B498",
    "hex1": "B1",
    "hex2": "6F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($6F),Y",
    "comment": "get byte from string",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B49A",
    "hex1": "F0",
    "hex2": "0C",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B4A8",
    "comment": "exit loop if null byte [EOS]",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B49C",
    "hex1": "C5",
    "hex2": "07",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$07",
    "comment": "compare with search character, terminator 1",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B49E",
    "hex1": "F0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B4A4",
    "comment": "branch if terminator",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4A0",
    "hex1": "C5",
    "hex2": "08",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$08",
    "comment": "compare with terminator 2",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4A2",
    "hex1": "D0",
    "hex2": "F3",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B497",
    "comment": "loop if not terminator 2",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4A4",
    "hex1": "C9",
    "hex2": "22",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$22",
    "comment": "compare with \"",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4A6",
    "hex1": "F0",
    "hex2": "01",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B4A9",
    "comment": "branch if \" (carry set if = !)",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4A8",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add (only if [EOL] terminated string)",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4A9",
    "hex1": "84",
    "hex2": "61",
    "hex3": null,
    "opcode": "STY",
    "argument": "$61",
    "comment": "save length in FAC1 exponent",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4AB",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "copy length to A",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4AC",
    "hex1": "65",
    "hex2": "6F",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$6F",
    "comment": "add string start low byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4AE",
    "hex1": "85",
    "hex2": "71",
    "hex3": null,
    "opcode": "STA",
    "argument": "$71",
    "comment": "save string end low byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4B0",
    "hex1": "A6",
    "hex2": "70",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$70",
    "comment": "get string start high byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4B2",
    "hex1": "90",
    "hex2": "01",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B4B5",
    "comment": "branch if no low byte overflow",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4B4",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "else increment high byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4B5",
    "hex1": "86",
    "hex2": "72",
    "hex3": null,
    "opcode": "STX",
    "argument": "$72",
    "comment": "save string end high byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4B7",
    "hex1": "A5",
    "hex2": "70",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$70",
    "comment": "get string start high byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4B9",
    "hex1": "F0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B4BF",
    "comment": "branch if in utility area",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4BB",
    "hex1": "C9",
    "hex2": "02",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$02",
    "comment": "compare with input buffer memory high byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4BD",
    "hex1": "D0",
    "hex2": "0B",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B4CA",
    "comment": "branch if not in input buffer memory string in input buffer or utility area, move to string memory",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4BF",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "copy length to A",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4C0",
    "hex1": "20",
    "hex2": "75",
    "hex3": "B4",
    "opcode": "JSR",
    "argument": "$B475",
    "comment": "copy descriptor pointer and make string space A bytes long",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4C3",
    "hex1": "A6",
    "hex2": "6F",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$6F",
    "comment": "get string start low byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4C5",
    "hex1": "A4",
    "hex2": "70",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$70",
    "comment": "get string start high byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4C7",
    "hex1": "20",
    "hex2": "88",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B688",
    "comment": "store string A bytes long from XY to utility pointer check for space on descriptor stack then ... put string address and length on descriptor stack and update stack pointers",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4CA",
    "hex1": "A6",
    "hex2": "16",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$16",
    "comment": "get the descriptor stack pointer",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4CC",
    "hex1": "E0",
    "hex2": "22",
    "hex3": null,
    "opcode": "CPX",
    "argument": "#$22",
    "comment": "compare it with the maximum + 1",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4CE",
    "hex1": "D0",
    "hex2": "05",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B4D5",
    "comment": "if there is space on the string stack continue else do string too complex error",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4D0",
    "hex1": "A2",
    "hex2": "19",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$19",
    "comment": "error $19, string too complex error",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4D2",
    "hex1": "4C",
    "hex2": "37",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A437",
    "comment": "do error #X then warm start put string address and length on descriptor stack and update stack pointers",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4D5",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get the string length",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4D7",
    "hex1": "95",
    "hex2": "00",
    "hex3": null,
    "opcode": "STA",
    "argument": "$00,X",
    "comment": "put it on the string stack",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4D9",
    "hex1": "A5",
    "hex2": "62",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$62",
    "comment": "get the string pointer low byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4DB",
    "hex1": "95",
    "hex2": "01",
    "hex3": null,
    "opcode": "STA",
    "argument": "$01,X",
    "comment": "put it on the string stack",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4DD",
    "hex1": "A5",
    "hex2": "63",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$63",
    "comment": "get the string pointer high byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4DF",
    "hex1": "95",
    "hex2": "02",
    "hex3": null,
    "opcode": "STA",
    "argument": "$02,X",
    "comment": "put it on the string stack",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4E1",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear Y",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4E3",
    "hex1": "86",
    "hex2": "64",
    "hex3": null,
    "opcode": "STX",
    "argument": "$64",
    "comment": "save the string descriptor pointer low byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4E5",
    "hex1": "84",
    "hex2": "65",
    "hex3": null,
    "opcode": "STY",
    "argument": "$65",
    "comment": "save the string descriptor pointer high byte, always $00",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4E7",
    "hex1": "84",
    "hex2": "70",
    "hex3": null,
    "opcode": "STY",
    "argument": "$70",
    "comment": "clear FAC1 rounding byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4E9",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "Y = $FF",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4EA",
    "hex1": "84",
    "hex2": "0D",
    "hex3": null,
    "opcode": "STY",
    "argument": "$0D",
    "comment": "save the data type flag, $FF = string",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4EC",
    "hex1": "86",
    "hex2": "17",
    "hex3": null,
    "opcode": "STX",
    "argument": "$17",
    "comment": "save the current descriptor stack item pointer low byte",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4EE",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "update the stack pointer",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4EF",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "update the stack pointer",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4F0",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "update the stack pointer",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4F1",
    "hex1": "86",
    "hex2": "16",
    "hex3": null,
    "opcode": "STX",
    "argument": "$16",
    "comment": "save the new descriptor stack pointer",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4F3",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "scan_set_up_string_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of scan_set_up_string_p)"
  },
  {
    "addr": "B4F4",
    "hex1": "46",
    "hex2": "0F",
    "hex3": null,
    "opcode": "LSR",
    "argument": "$0F",
    "comment": "clear garbage collected flag (b7) make space for string A long",
    "desc": "make space in string memory for string A long return X = pointer low byte, Y = pointer high byte",
    "parent": "this",
    "entry": true,
    "label": "make_space_in_string"
  },
  {
    "addr": "B4F6",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save string length",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B4F7",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement it",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B4F9",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract, two's complement add",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B4FA",
    "hex1": "65",
    "hex2": "33",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$33",
    "comment": "add bottom of string space low byte, subtract length",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B4FC",
    "hex1": "A4",
    "hex2": "34",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$34",
    "comment": "get bottom of string space high byte",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B4FE",
    "hex1": "B0",
    "hex2": "01",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B501",
    "comment": "skip decrement if no underflow",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B500",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement bottom of string space high byte",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B501",
    "hex1": "C4",
    "hex2": "32",
    "hex3": null,
    "opcode": "CPY",
    "argument": "$32",
    "comment": "compare with end of arrays high byte",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B503",
    "hex1": "90",
    "hex2": "11",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B516",
    "comment": "do out of memory error if less",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B505",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B50B",
    "comment": "if not = skip next test",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B507",
    "hex1": "C5",
    "hex2": "31",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$31",
    "comment": "compare with end of arrays low byte",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B509",
    "hex1": "90",
    "hex2": "0B",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B516",
    "comment": "do out of memory error if less",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B50B",
    "hex1": "85",
    "hex2": "33",
    "hex3": null,
    "opcode": "STA",
    "argument": "$33",
    "comment": "save bottom of string space low byte",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B50D",
    "hex1": "84",
    "hex2": "34",
    "hex3": null,
    "opcode": "STY",
    "argument": "$34",
    "comment": "save bottom of string space high byte",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B50F",
    "hex1": "85",
    "hex2": "35",
    "hex3": null,
    "opcode": "STA",
    "argument": "$35",
    "comment": "save string utility ptr low byte",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B511",
    "hex1": "84",
    "hex2": "36",
    "hex3": null,
    "opcode": "STY",
    "argument": "$36",
    "comment": "save string utility ptr high byte",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B513",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy low byte to X",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B514",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "get string length back",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B515",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B516",
    "hex1": "A2",
    "hex2": "10",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$10",
    "comment": "error code $10, out of memory error",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B518",
    "hex1": "A5",
    "hex2": "0F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$0F",
    "comment": "get garbage collected flag",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B51A",
    "hex1": "30",
    "hex2": "B6",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$B4D2",
    "comment": "if set then do error code X",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B51C",
    "hex1": "20",
    "hex2": "26",
    "hex3": "B5",
    "opcode": "JSR",
    "argument": "$B526",
    "comment": "else go do garbage collection",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B51F",
    "hex1": "A9",
    "hex2": "80",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$80",
    "comment": "flag for garbage collected",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B521",
    "hex1": "85",
    "hex2": "0F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$0F",
    "comment": "set garbage collected flag",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B523",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull length",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B524",
    "hex1": "D0",
    "hex2": "D0",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B4F6",
    "comment": "go try again (loop always, length should never be = $00)",
    "parent": "make_space_in_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of make_space_in_string)"
  },
  {
    "addr": "B526",
    "hex1": "A6",
    "hex2": "37",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$37",
    "comment": "get end of memory low byte",
    "desc": "garbage collection routine",
    "parent": "this",
    "entry": true,
    "label": "garbage_collection_r"
  },
  {
    "addr": "B528",
    "hex1": "A5",
    "hex2": "38",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$38",
    "comment": "get end of memory high byte re-run routine from last ending",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B52A",
    "hex1": "86",
    "hex2": "33",
    "hex3": null,
    "opcode": "STX",
    "argument": "$33",
    "comment": "set bottom of string space low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B52C",
    "hex1": "85",
    "hex2": "34",
    "hex3": null,
    "opcode": "STA",
    "argument": "$34",
    "comment": "set bottom of string space high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B52E",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B530",
    "hex1": "84",
    "hex2": "4F",
    "hex3": null,
    "opcode": "STY",
    "argument": "$4F",
    "comment": "clear working pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B532",
    "hex1": "84",
    "hex2": "4E",
    "hex3": null,
    "opcode": "STY",
    "argument": "$4E",
    "comment": "clear working pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B534",
    "hex1": "A5",
    "hex2": "31",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$31",
    "comment": "get end of arrays low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B536",
    "hex1": "A6",
    "hex2": "32",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$32",
    "comment": "get end of arrays high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B538",
    "hex1": "85",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$5F",
    "comment": "save as highest uncollected string pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B53A",
    "hex1": "86",
    "hex2": "60",
    "hex3": null,
    "opcode": "STX",
    "argument": "$60",
    "comment": "save as highest uncollected string pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B53C",
    "hex1": "A9",
    "hex2": "19",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$19",
    "comment": "set descriptor stack pointer",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B53E",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "clear X",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B540",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save descriptor stack pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B542",
    "hex1": "86",
    "hex2": "23",
    "hex3": null,
    "opcode": "STX",
    "argument": "$23",
    "comment": "save descriptor stack pointer high byte ($00)",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B544",
    "hex1": "C5",
    "hex2": "16",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$16",
    "comment": "compare with descriptor stack pointer",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B546",
    "hex1": "F0",
    "hex2": "05",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B54D",
    "comment": "branch if =",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B548",
    "hex1": "20",
    "hex2": "C7",
    "hex3": "B5",
    "opcode": "JSR",
    "argument": "$B5C7",
    "comment": "check string salvageability",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B54B",
    "hex1": "F0",
    "hex2": "F7",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B544",
    "comment": "loop always done stacked strings, now do string variables",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B54D",
    "hex1": "A9",
    "hex2": "07",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$07",
    "comment": "set step size = $07, collecting variables",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B54F",
    "hex1": "85",
    "hex2": "53",
    "hex3": null,
    "opcode": "STA",
    "argument": "$53",
    "comment": "save garbage collection step size",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B551",
    "hex1": "A5",
    "hex2": "2D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$2D",
    "comment": "get start of variables low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B553",
    "hex1": "A6",
    "hex2": "2E",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$2E",
    "comment": "get start of variables high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B555",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save as pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B557",
    "hex1": "86",
    "hex2": "23",
    "hex3": null,
    "opcode": "STX",
    "argument": "$23",
    "comment": "save as pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B559",
    "hex1": "E4",
    "hex2": "30",
    "hex3": null,
    "opcode": "CPX",
    "argument": "$30",
    "comment": "compare end of variables high byte, start of arrays high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B55B",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B561",
    "comment": "branch if no high byte match",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B55D",
    "hex1": "C5",
    "hex2": "2F",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$2F",
    "comment": "else compare end of variables low byte, start of arrays low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B55F",
    "hex1": "F0",
    "hex2": "05",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B566",
    "comment": "branch if = variable memory end",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B561",
    "hex1": "20",
    "hex2": "BD",
    "hex3": "B5",
    "opcode": "JSR",
    "argument": "$B5BD",
    "comment": "check variable salvageability",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B564",
    "hex1": "F0",
    "hex2": "F3",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B559",
    "comment": "loop always done string variables, now do string arrays",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B566",
    "hex1": "85",
    "hex2": "58",
    "hex3": null,
    "opcode": "STA",
    "argument": "$58",
    "comment": "save start of arrays low byte as working pointer",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B568",
    "hex1": "86",
    "hex2": "59",
    "hex3": null,
    "opcode": "STX",
    "argument": "$59",
    "comment": "save start of arrays high byte as working pointer",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B56A",
    "hex1": "A9",
    "hex2": "03",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$03",
    "comment": "set step size, collecting descriptors",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B56C",
    "hex1": "85",
    "hex2": "53",
    "hex3": null,
    "opcode": "STA",
    "argument": "$53",
    "comment": "save step size",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B56E",
    "hex1": "A5",
    "hex2": "58",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$58",
    "comment": "get pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B570",
    "hex1": "A6",
    "hex2": "59",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$59",
    "comment": "get pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B572",
    "hex1": "E4",
    "hex2": "32",
    "hex3": null,
    "opcode": "CPX",
    "argument": "$32",
    "comment": "compare with end of arrays high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B574",
    "hex1": "D0",
    "hex2": "07",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B57D",
    "comment": "branch if not at end",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B576",
    "hex1": "C5",
    "hex2": "31",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$31",
    "comment": "else compare with end of arrays low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B578",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B57D",
    "comment": "branch if not at end",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B57A",
    "hex1": "4C",
    "hex2": "06",
    "hex3": "B6",
    "opcode": "JMP",
    "argument": "$B606",
    "comment": "collect string, tidy up and exit if at end ??",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B57D",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B57F",
    "hex1": "86",
    "hex2": "23",
    "hex3": null,
    "opcode": "STX",
    "argument": "$23",
    "comment": "save pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B581",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "set index",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B583",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get array name first byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B585",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy it",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B586",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B587",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get array name second byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B589",
    "hex1": "08",
    "hex2": "",
    "hex3": null,
    "opcode": "PHP",
    "argument": "",
    "comment": "push the flags",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B58A",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B58B",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get array size low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B58D",
    "hex1": "65",
    "hex2": "58",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$58",
    "comment": "add start of this array low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B58F",
    "hex1": "85",
    "hex2": "58",
    "hex3": null,
    "opcode": "STA",
    "argument": "$58",
    "comment": "save start of next array low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B591",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B592",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get array size high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B594",
    "hex1": "65",
    "hex2": "59",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$59",
    "comment": "add start of this array high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B596",
    "hex1": "85",
    "hex2": "59",
    "hex3": null,
    "opcode": "STA",
    "argument": "$59",
    "comment": "save start of next array high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B598",
    "hex1": "28",
    "hex2": "",
    "hex3": null,
    "opcode": "PLP",
    "argument": "",
    "comment": "restore the flags",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B599",
    "hex1": "10",
    "hex2": "D3",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$B56E",
    "comment": "skip if not string array was possibly string array so ...",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B59B",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "get name first byte back",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B59C",
    "hex1": "30",
    "hex2": "D0",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$B56E",
    "comment": "skip if not string array",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B59E",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B59F",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get # of dimensions",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5A1",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5A3",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "*2",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5A4",
    "hex1": "69",
    "hex2": "05",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$05",
    "comment": "+5 (array header size)",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5A6",
    "hex1": "65",
    "hex2": "22",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$22",
    "comment": "add pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5A8",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5AA",
    "hex1": "90",
    "hex2": "02",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B5AE",
    "comment": "branch if no rollover",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5AC",
    "hex1": "E6",
    "hex2": "23",
    "hex3": null,
    "opcode": "INC",
    "argument": "$23",
    "comment": "else increment pointer hgih byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5AE",
    "hex1": "A6",
    "hex2": "23",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$23",
    "comment": "get pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5B0",
    "hex1": "E4",
    "hex2": "59",
    "hex3": null,
    "opcode": "CPX",
    "argument": "$59",
    "comment": "compare pointer high byte with end of this array high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5B2",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B5B8",
    "comment": "branch if not there yet",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5B4",
    "hex1": "C5",
    "hex2": "58",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$58",
    "comment": "compare pointer low byte with end of this array low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5B6",
    "hex1": "F0",
    "hex2": "BA",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B572",
    "comment": "if at end of this array go check next array",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5B8",
    "hex1": "20",
    "hex2": "C7",
    "hex3": "B5",
    "opcode": "JSR",
    "argument": "$B5C7",
    "comment": "check string salvageability",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5BB",
    "hex1": "F0",
    "hex2": "F3",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B5B0",
    "comment": "loop check variable salvageability",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5BD",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get variable name first byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5BF",
    "hex1": "30",
    "hex2": "35",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$B5F6",
    "comment": "add step and exit if not string",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5C1",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5C2",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get variable name second byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5C4",
    "hex1": "10",
    "hex2": "30",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$B5F6",
    "comment": "add step and exit if not string",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5C6",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index check string salvageability",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5C7",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get string length",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5C9",
    "hex1": "F0",
    "hex2": "2B",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B5F6",
    "comment": "add step and exit if null string",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5CB",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5CC",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get string pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5CE",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy to X",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5CF",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5D0",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get string pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5D2",
    "hex1": "C5",
    "hex2": "34",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$34",
    "comment": "compare string pointer high byte with bottom of string space high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5D4",
    "hex1": "90",
    "hex2": "06",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B5DC",
    "comment": "if bottom of string space greater go test against highest uncollected string",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5D6",
    "hex1": "D0",
    "hex2": "1E",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B5F6",
    "comment": "if bottom of string space less string has been collected so go update pointers, step to next and return high bytes were equal so test low bytes",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5D8",
    "hex1": "E4",
    "hex2": "33",
    "hex3": null,
    "opcode": "CPX",
    "argument": "$33",
    "comment": "compare string pointer low byte with bottom of string space low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5DA",
    "hex1": "B0",
    "hex2": "1A",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B5F6",
    "comment": "if bottom of string space less string has been collected so go update pointers, step to next and return else test string against highest uncollected string so far",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5DC",
    "hex1": "C5",
    "hex2": "60",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$60",
    "comment": "compare string pointer high byte with highest uncollected string high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5DE",
    "hex1": "90",
    "hex2": "16",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B5F6",
    "comment": "if highest uncollected string is greater then go update pointers, step to next and return",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5E0",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B5E6",
    "comment": "if highest uncollected string is less then go set this string as highest uncollected so far high bytes were equal so test low bytes",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5E2",
    "hex1": "E4",
    "hex2": "5F",
    "hex3": null,
    "opcode": "CPX",
    "argument": "$5F",
    "comment": "compare string pointer low byte with highest uncollected string low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5E4",
    "hex1": "90",
    "hex2": "10",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B5F6",
    "comment": "if highest uncollected string is greater then go update pointers, step to next and return else set current string as highest uncollected string",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5E6",
    "hex1": "86",
    "hex2": "5F",
    "hex3": null,
    "opcode": "STX",
    "argument": "$5F",
    "comment": "save string pointer low byte as highest uncollected string low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5E8",
    "hex1": "85",
    "hex2": "60",
    "hex3": null,
    "opcode": "STA",
    "argument": "$60",
    "comment": "save string pointer high byte as highest uncollected string high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5EA",
    "hex1": "A5",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$22",
    "comment": "get descriptor pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5EC",
    "hex1": "A6",
    "hex2": "23",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$23",
    "comment": "get descriptor pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5EE",
    "hex1": "85",
    "hex2": "4E",
    "hex3": null,
    "opcode": "STA",
    "argument": "$4E",
    "comment": "save working pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5F0",
    "hex1": "86",
    "hex2": "4F",
    "hex3": null,
    "opcode": "STX",
    "argument": "$4F",
    "comment": "save working pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5F2",
    "hex1": "A5",
    "hex2": "53",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$53",
    "comment": "get step size",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5F4",
    "hex1": "85",
    "hex2": "55",
    "hex3": null,
    "opcode": "STA",
    "argument": "$55",
    "comment": "copy step size",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5F6",
    "hex1": "A5",
    "hex2": "53",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$53",
    "comment": "get step size",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5F8",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5F9",
    "hex1": "65",
    "hex2": "22",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$22",
    "comment": "add pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5FB",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5FD",
    "hex1": "90",
    "hex2": "02",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B601",
    "comment": "branch if no rollover",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B5FF",
    "hex1": "E6",
    "hex2": "23",
    "hex3": null,
    "opcode": "INC",
    "argument": "$23",
    "comment": "else increment pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B601",
    "hex1": "A6",
    "hex2": "23",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$23",
    "comment": "get pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B603",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "flag not moved",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B605",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "collect string",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B606",
    "hex1": "A5",
    "hex2": "4F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$4F",
    "comment": "get working pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B608",
    "hex1": "05",
    "hex2": "4E",
    "hex3": null,
    "opcode": "ORA",
    "argument": "$4E",
    "comment": "OR working pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B60A",
    "hex1": "F0",
    "hex2": "F5",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B601",
    "comment": "exit if nothing to collect",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B60C",
    "hex1": "A5",
    "hex2": "55",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$55",
    "comment": "get copied step size",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B60E",
    "hex1": "29",
    "hex2": "04",
    "hex3": null,
    "opcode": "AND",
    "argument": "#$04",
    "comment": "mask step size, $04 for variables, $00 for array or stack",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B610",
    "hex1": "4A",
    "hex2": "",
    "hex3": null,
    "opcode": "LSR",
    "argument": "",
    "comment": ">> 1",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B611",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy to index",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B612",
    "hex1": "85",
    "hex2": "55",
    "hex3": null,
    "opcode": "STA",
    "argument": "$55",
    "comment": "save offset to descriptor start",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B614",
    "hex1": "B1",
    "hex2": "4E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($4E),Y",
    "comment": "get string length low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B616",
    "hex1": "65",
    "hex2": "5F",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$5F",
    "comment": "add string start low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B618",
    "hex1": "85",
    "hex2": "5A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$5A",
    "comment": "set block end low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B61A",
    "hex1": "A5",
    "hex2": "60",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$60",
    "comment": "get string start high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B61C",
    "hex1": "69",
    "hex2": "00",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$00",
    "comment": "add carry",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B61E",
    "hex1": "85",
    "hex2": "5B",
    "hex3": null,
    "opcode": "STA",
    "argument": "$5B",
    "comment": "set block end high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B620",
    "hex1": "A5",
    "hex2": "33",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$33",
    "comment": "get bottom of string space low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B622",
    "hex1": "A6",
    "hex2": "34",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$34",
    "comment": "get bottom of string space high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B624",
    "hex1": "85",
    "hex2": "58",
    "hex3": null,
    "opcode": "STA",
    "argument": "$58",
    "comment": "save destination end low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B626",
    "hex1": "86",
    "hex2": "59",
    "hex3": null,
    "opcode": "STX",
    "argument": "$59",
    "comment": "save destination end high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B628",
    "hex1": "20",
    "hex2": "BF",
    "hex3": "A3",
    "opcode": "JSR",
    "argument": "$A3BF",
    "comment": "open up space in memory, don't set array end. this copies the string from where it is to the end of the uncollected string memory",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B62B",
    "hex1": "A4",
    "hex2": "55",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$55",
    "comment": "restore offset to descriptor start",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B62D",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index to string pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B62E",
    "hex1": "A5",
    "hex2": "58",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$58",
    "comment": "get new string pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B630",
    "hex1": "91",
    "hex2": "4E",
    "hex3": null,
    "opcode": "STA",
    "argument": "($4E),Y",
    "comment": "save new string pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B632",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy string pointer low byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B633",
    "hex1": "E6",
    "hex2": "59",
    "hex3": null,
    "opcode": "INC",
    "argument": "$59",
    "comment": "increment new string pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B635",
    "hex1": "A5",
    "hex2": "59",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$59",
    "comment": "get new string pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B637",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index to string pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B638",
    "hex1": "91",
    "hex2": "4E",
    "hex3": null,
    "opcode": "STA",
    "argument": "($4E),Y",
    "comment": "save new string pointer high byte",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B63A",
    "hex1": "4C",
    "hex2": "2A",
    "hex3": "B5",
    "opcode": "JMP",
    "argument": "$B52A",
    "comment": "re-run routine from last ending, XA holds new bottom of string memory pointer",
    "parent": "garbage_collection_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of garbage_collection_r)"
  },
  {
    "addr": "B63D",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get descriptor pointer high byte",
    "desc": "concatenate add strings, the first string is in the descriptor, the second string is in line",
    "parent": "this",
    "entry": true,
    "label": "concatenate_add_stri"
  },
  {
    "addr": "B63F",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "put on stack",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B640",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get descriptor pointer low byte",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B642",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "put on stack",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B643",
    "hex1": "20",
    "hex2": "83",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AE83",
    "comment": "get value from line",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B646",
    "hex1": "20",
    "hex2": "8F",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8F",
    "comment": "check if source is string, else do type mismatch",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B649",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "get descriptor pointer low byte back",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B64A",
    "hex1": "85",
    "hex2": "6F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6F",
    "comment": "set pointer low byte",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B64C",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "get descriptor pointer high byte back",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B64D",
    "hex1": "85",
    "hex2": "70",
    "hex3": null,
    "opcode": "STA",
    "argument": "$70",
    "comment": "set pointer high byte",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B64F",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B651",
    "hex1": "B1",
    "hex2": "6F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($6F),Y",
    "comment": "get length of first string from descriptor",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B653",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B654",
    "hex1": "71",
    "hex2": "64",
    "hex3": null,
    "opcode": "ADC",
    "argument": "($64),Y",
    "comment": "add length of second string",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B656",
    "hex1": "90",
    "hex2": "05",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B65D",
    "comment": "branch if no overflow",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B658",
    "hex1": "A2",
    "hex2": "17",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$17",
    "comment": "else error $17, string too long error",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B65A",
    "hex1": "4C",
    "hex2": "37",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A437",
    "comment": "do error #X then warm start",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B65D",
    "hex1": "20",
    "hex2": "75",
    "hex3": "B4",
    "opcode": "JSR",
    "argument": "$B475",
    "comment": "copy descriptor pointer and make string space A bytes long",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B660",
    "hex1": "20",
    "hex2": "7A",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B67A",
    "comment": "copy string from descriptor to utility pointer",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B663",
    "hex1": "A5",
    "hex2": "50",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$50",
    "comment": "get descriptor pointer low byte",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B665",
    "hex1": "A4",
    "hex2": "51",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$51",
    "comment": "get descriptor pointer high byte",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B667",
    "hex1": "20",
    "hex2": "AA",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B6AA",
    "comment": "pop (YA) descriptor off stack or from top of string space returns with A = length, X = pointer low byte, Y = pointer high byte",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B66A",
    "hex1": "20",
    "hex2": "8C",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B68C",
    "comment": "store string from pointer to utility pointer",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B66D",
    "hex1": "A5",
    "hex2": "6F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$6F",
    "comment": "get descriptor pointer low byte",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B66F",
    "hex1": "A4",
    "hex2": "70",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$70",
    "comment": "get descriptor pointer high byte",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B671",
    "hex1": "20",
    "hex2": "AA",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B6AA",
    "comment": "pop (YA) descriptor off stack or from top of string space returns with A = length, X = pointer low byte, Y = pointer high byte",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B674",
    "hex1": "20",
    "hex2": "CA",
    "hex3": "B4",
    "opcode": "JSR",
    "argument": "$B4CA",
    "comment": "check space on descriptor stack then put string address and length on descriptor stack and update stack pointers",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B677",
    "hex1": "4C",
    "hex2": "B8",
    "hex3": "AD",
    "opcode": "JMP",
    "argument": "$ADB8",
    "comment": "continue evaluation",
    "parent": "concatenate_add_stri",
    "entry": false,
    "label": "n/a",
    "desc": "(part of concatenate_add_stri)"
  },
  {
    "addr": "B67A",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "desc": "copy string from descriptor to utility pointer",
    "parent": "this",
    "entry": true,
    "label": "copy_string_from_des"
  },
  {
    "addr": "B67C",
    "hex1": "B1",
    "hex2": "6F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($6F),Y",
    "comment": "get string length",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B67E",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B67F",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B680",
    "hex1": "B1",
    "hex2": "6F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($6F),Y",
    "comment": "get string pointer low byte",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B682",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy to X",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B683",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B684",
    "hex1": "B1",
    "hex2": "6F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($6F),Y",
    "comment": "get string pointer high byte",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B686",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy to Y",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B687",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "get length back",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B688",
    "hex1": "86",
    "hex2": "22",
    "hex3": null,
    "opcode": "STX",
    "argument": "$22",
    "comment": "save string pointer low byte",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B68A",
    "hex1": "84",
    "hex2": "23",
    "hex3": null,
    "opcode": "STY",
    "argument": "$23",
    "comment": "save string pointer high byte store string from pointer to utility pointer",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B68C",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy length as index",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B68D",
    "hex1": "F0",
    "hex2": "0A",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B699",
    "comment": "branch if null string",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B68F",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save length",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B690",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement length/index",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B691",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get byte from string",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B693",
    "hex1": "91",
    "hex2": "35",
    "hex3": null,
    "opcode": "STA",
    "argument": "($35),Y",
    "comment": "save byte to destination",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B695",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "copy length/index",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B696",
    "hex1": "D0",
    "hex2": "F8",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B690",
    "comment": "loop if not all done yet",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B698",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "restore length",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B699",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B69A",
    "hex1": "65",
    "hex2": "35",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$35",
    "comment": "add string utility ptr low byte",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B69C",
    "hex1": "85",
    "hex2": "35",
    "hex3": null,
    "opcode": "STA",
    "argument": "$35",
    "comment": "save string utility ptr low byte",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B69E",
    "hex1": "90",
    "hex2": "02",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B6A2",
    "comment": "branch if no rollover",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B6A0",
    "hex1": "E6",
    "hex2": "36",
    "hex3": null,
    "opcode": "INC",
    "argument": "$36",
    "comment": "increment string utility ptr high byte",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B6A2",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "copy_string_from_des",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_string_from_des)"
  },
  {
    "addr": "B6A3",
    "hex1": "20",
    "hex2": "8F",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8F",
    "comment": "check if source is string, else do type mismatch pop string off descriptor stack, or from top of string space returns with A = length, X = pointer low byte, Y = pointer high byte",
    "desc": "evaluate string",
    "parent": "this",
    "entry": true,
    "label": "evaluate_string"
  },
  {
    "addr": "B6A6",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get descriptor pointer low byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6A8",
    "hex1": "A4",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$65",
    "comment": "get descriptor pointer high byte pop (YA) descriptor off stack or from top of string space returns with A = length, X = pointer low byte, Y = pointer high byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6AA",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save string pointer low byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6AC",
    "hex1": "84",
    "hex2": "23",
    "hex3": null,
    "opcode": "STY",
    "argument": "$23",
    "comment": "save string pointer high byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6AE",
    "hex1": "20",
    "hex2": "DB",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B6DB",
    "comment": "clean descriptor stack, YA = pointer",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6B1",
    "hex1": "08",
    "hex2": "",
    "hex3": null,
    "opcode": "PHP",
    "argument": "",
    "comment": "save status flags",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6B2",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6B4",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get length from string descriptor",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6B6",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "put on stack",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6B7",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6B8",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get string pointer low byte from descriptor",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6BA",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy to X",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6BB",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6BC",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get string pointer high byte from descriptor",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6BE",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy to Y",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6BF",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "get string length back",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6C0",
    "hex1": "28",
    "hex2": "",
    "hex3": null,
    "opcode": "PLP",
    "argument": "",
    "comment": "restore status",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6C1",
    "hex1": "D0",
    "hex2": "13",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B6D6",
    "comment": "branch if pointer <> last_sl,last_sh",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6C3",
    "hex1": "C4",
    "hex2": "34",
    "hex3": null,
    "opcode": "CPY",
    "argument": "$34",
    "comment": "compare with bottom of string space high byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6C5",
    "hex1": "D0",
    "hex2": "0F",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B6D6",
    "comment": "branch if <>",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6C7",
    "hex1": "E4",
    "hex2": "33",
    "hex3": null,
    "opcode": "CPX",
    "argument": "$33",
    "comment": "else compare with bottom of string space low byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6C9",
    "hex1": "D0",
    "hex2": "0B",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B6D6",
    "comment": "branch if <>",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6CB",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save string length",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6CC",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6CD",
    "hex1": "65",
    "hex2": "33",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$33",
    "comment": "add bottom of string space low byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6CF",
    "hex1": "85",
    "hex2": "33",
    "hex3": null,
    "opcode": "STA",
    "argument": "$33",
    "comment": "set bottom of string space low byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6D1",
    "hex1": "90",
    "hex2": "02",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B6D5",
    "comment": "skip increment if no overflow",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6D3",
    "hex1": "E6",
    "hex2": "34",
    "hex3": null,
    "opcode": "INC",
    "argument": "$34",
    "comment": "increment bottom of string space high byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6D5",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "restore string length",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6D6",
    "hex1": "86",
    "hex2": "22",
    "hex3": null,
    "opcode": "STX",
    "argument": "$22",
    "comment": "save string pointer low byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6D8",
    "hex1": "84",
    "hex2": "23",
    "hex3": null,
    "opcode": "STY",
    "argument": "$23",
    "comment": "save string pointer high byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6DA",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "clean descriptor stack, YA = pointer checks if AY is on the descriptor stack, if so does a stack discard",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6DB",
    "hex1": "C4",
    "hex2": "18",
    "hex3": null,
    "opcode": "CPY",
    "argument": "$18",
    "comment": "compare high byte with current descriptor stack item pointer high byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6DD",
    "hex1": "D0",
    "hex2": "0C",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B6EB",
    "comment": "exit if <>",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6DF",
    "hex1": "C5",
    "hex2": "17",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$17",
    "comment": "compare low byte with current descriptor stack item pointer low byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6E1",
    "hex1": "D0",
    "hex2": "08",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B6EB",
    "comment": "exit if <>",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6E3",
    "hex1": "85",
    "hex2": "16",
    "hex3": null,
    "opcode": "STA",
    "argument": "$16",
    "comment": "set descriptor stack pointer",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6E5",
    "hex1": "E9",
    "hex2": "03",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$03",
    "comment": "update last string pointer low byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6E7",
    "hex1": "85",
    "hex2": "17",
    "hex3": null,
    "opcode": "STA",
    "argument": "$17",
    "comment": "save current descriptor stack item pointer low byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6E9",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear high byte",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6EB",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "evaluate_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string)"
  },
  {
    "addr": "B6EC",
    "hex1": "20",
    "hex2": "A1",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B7A1",
    "comment": "evaluate byte expression, result in X",
    "desc": "perform CHR$()",
    "parent": "this",
    "entry": true,
    "label": "perform_chr"
  },
  {
    "addr": "B6EF",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy to A",
    "parent": "perform_chr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_chr)"
  },
  {
    "addr": "B6F0",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save character",
    "parent": "perform_chr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_chr)"
  },
  {
    "addr": "B6F1",
    "hex1": "A9",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$01",
    "comment": "string is single byte",
    "parent": "perform_chr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_chr)"
  },
  {
    "addr": "B6F3",
    "hex1": "20",
    "hex2": "7D",
    "hex3": "B4",
    "opcode": "JSR",
    "argument": "$B47D",
    "comment": "make string space A bytes long",
    "parent": "perform_chr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_chr)"
  },
  {
    "addr": "B6F6",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "get character back",
    "parent": "perform_chr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_chr)"
  },
  {
    "addr": "B6F7",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "perform_chr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_chr)"
  },
  {
    "addr": "B6F9",
    "hex1": "91",
    "hex2": "62",
    "hex3": null,
    "opcode": "STA",
    "argument": "($62),Y",
    "comment": "save byte in string - byte IS string!",
    "parent": "perform_chr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_chr)"
  },
  {
    "addr": "B6FB",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "dump return address (skip type check)",
    "parent": "perform_chr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_chr)"
  },
  {
    "addr": "B6FC",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "dump return address (skip type check)",
    "parent": "perform_chr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_chr)"
  },
  {
    "addr": "B6FD",
    "hex1": "4C",
    "hex2": "CA",
    "hex3": "B4",
    "opcode": "JMP",
    "argument": "$B4CA",
    "comment": "check space on descriptor stack then put string address and length on descriptor stack and update stack pointers",
    "parent": "perform_chr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_chr)"
  },
  {
    "addr": "B700",
    "hex1": "20",
    "hex2": "61",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B761",
    "comment": "pull string data and byte parameter from stack return pointer in descriptor, byte in A (and X), Y=0",
    "desc": "perform LEFT$()",
    "parent": "this",
    "entry": true,
    "label": "perform_left"
  },
  {
    "addr": "B703",
    "hex1": "D1",
    "hex2": "50",
    "hex3": null,
    "opcode": "CMP",
    "argument": "($50),Y",
    "comment": "compare byte parameter with string length",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B705",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "clear A",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B706",
    "hex1": "90",
    "hex2": "04",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B70C",
    "comment": "branch if string length > byte parameter",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B708",
    "hex1": "B1",
    "hex2": "50",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($50),Y",
    "comment": "else make parameter = length",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B70A",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy to byte parameter copy",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B70B",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "clear string start offset",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B70C",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save string start offset",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B70D",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy byte parameter (or string length if <)",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B70E",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save string length",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B70F",
    "hex1": "20",
    "hex2": "7D",
    "hex3": "B4",
    "opcode": "JSR",
    "argument": "$B47D",
    "comment": "make string space A bytes long",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B712",
    "hex1": "A5",
    "hex2": "50",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$50",
    "comment": "get descriptor pointer low byte",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B714",
    "hex1": "A4",
    "hex2": "51",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$51",
    "comment": "get descriptor pointer high byte",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B716",
    "hex1": "20",
    "hex2": "AA",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B6AA",
    "comment": "pop (YA) descriptor off stack or from top of string space returns with A = length, X = pointer low byte, Y = pointer high byte",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B719",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "get string length back",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B71A",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy length to Y",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B71B",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "get string start offset back",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B71C",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B71D",
    "hex1": "65",
    "hex2": "22",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$22",
    "comment": "add start offset to string start pointer low byte",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B71F",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save string start pointer low byte",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B721",
    "hex1": "90",
    "hex2": "02",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B725",
    "comment": "branch if no overflow",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B723",
    "hex1": "E6",
    "hex2": "23",
    "hex3": null,
    "opcode": "INC",
    "argument": "$23",
    "comment": "else increment string start pointer high byte",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B725",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "copy length to A",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B726",
    "hex1": "20",
    "hex2": "8C",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B68C",
    "comment": "store string from pointer to utility pointer",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B729",
    "hex1": "4C",
    "hex2": "CA",
    "hex3": "B4",
    "opcode": "JMP",
    "argument": "$B4CA",
    "comment": "check space on descriptor stack then put string address and length on descriptor stack and update stack pointers",
    "parent": "perform_left",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_left)"
  },
  {
    "addr": "B72C",
    "hex1": "20",
    "hex2": "61",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B761",
    "comment": "pull string data and byte parameter from stack return pointer in descriptor, byte in A (and X), Y=0",
    "desc": "perform RIGHT$()",
    "parent": "this",
    "entry": true,
    "label": "perform_right"
  },
  {
    "addr": "B72F",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add-1",
    "parent": "perform_right",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_right)"
  },
  {
    "addr": "B730",
    "hex1": "F1",
    "hex2": "50",
    "hex3": null,
    "opcode": "SBC",
    "argument": "($50),Y",
    "comment": "subtract string length",
    "parent": "perform_right",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_right)"
  },
  {
    "addr": "B732",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "invert it (A=LEN(expression$)-l)",
    "parent": "perform_right",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_right)"
  },
  {
    "addr": "B734",
    "hex1": "4C",
    "hex2": "06",
    "hex3": "B7",
    "opcode": "JMP",
    "argument": "$B706",
    "comment": "go do rest of LEFT$()",
    "parent": "perform_right",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_right)"
  },
  {
    "addr": "B737",
    "hex1": "A9",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$FF",
    "comment": "set default length = 255",
    "desc": "perform MID$()",
    "parent": "this",
    "entry": true,
    "label": "perform_mid"
  },
  {
    "addr": "B739",
    "hex1": "85",
    "hex2": "65",
    "hex3": null,
    "opcode": "STA",
    "argument": "$65",
    "comment": "save default length",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B73B",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B73E",
    "hex1": "C9",
    "hex2": "29",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$29",
    "comment": "compare with \")\"",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B740",
    "hex1": "F0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B748",
    "comment": "branch if = \")\" (skip second byte get)",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B742",
    "hex1": "20",
    "hex2": "FD",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFD",
    "comment": "scan for \",\", else do syntax error then warm start",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B745",
    "hex1": "20",
    "hex2": "9E",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B79E",
    "comment": "get byte parameter",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B748",
    "hex1": "20",
    "hex2": "61",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B761",
    "comment": "pull string data and byte parameter from stack return pointer in descriptor, byte in A (and X), Y=0",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B74B",
    "hex1": "F0",
    "hex2": "4B",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B798",
    "comment": "if null do illegal quantity error then warm start",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B74D",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement start index",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B74E",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy to A",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B74F",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save string start offset",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B750",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for sub-1",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B751",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "clear output string length",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B753",
    "hex1": "F1",
    "hex2": "50",
    "hex3": null,
    "opcode": "SBC",
    "argument": "($50),Y",
    "comment": "subtract string length",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B755",
    "hex1": "B0",
    "hex2": "B6",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B70D",
    "comment": "if start>string length go do null string",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B757",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement -length",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B759",
    "hex1": "C5",
    "hex2": "65",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$65",
    "comment": "compare byte parameter",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B75B",
    "hex1": "90",
    "hex2": "B1",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B70E",
    "comment": "if length>remaining string go do RIGHT$",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B75D",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get length byte",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B75F",
    "hex1": "B0",
    "hex2": "AD",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B70E",
    "comment": "go do string copy, branch always",
    "parent": "perform_mid",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_mid)"
  },
  {
    "addr": "B761",
    "hex1": "20",
    "hex2": "F7",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEF7",
    "comment": "scan for \")\", else do syntax error then warm start",
    "desc": "pull string data and byte parameter from stack return pointer in descriptor, byte in A (and X), Y=0",
    "parent": "this",
    "entry": true,
    "label": "pull_string_data_and"
  },
  {
    "addr": "B764",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull return address low byte",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B765",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "save return address low byte",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B766",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull return address high byte",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B767",
    "hex1": "85",
    "hex2": "55",
    "hex3": null,
    "opcode": "STA",
    "argument": "$55",
    "comment": "save return address high byte",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B769",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "dump call to function vector low byte",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B76A",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "dump call to function vector high byte",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B76B",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull byte parameter",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B76C",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy byte parameter to X",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B76D",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull string pointer low byte",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B76E",
    "hex1": "85",
    "hex2": "50",
    "hex3": null,
    "opcode": "STA",
    "argument": "$50",
    "comment": "save it",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B770",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull string pointer high byte",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B771",
    "hex1": "85",
    "hex2": "51",
    "hex3": null,
    "opcode": "STA",
    "argument": "$51",
    "comment": "save it",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B773",
    "hex1": "A5",
    "hex2": "55",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$55",
    "comment": "get return address high byte",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B775",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "back on stack",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B776",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "get return address low byte",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B777",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "back on stack",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B778",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B77A",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy byte parameter",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B77B",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "pull_string_data_and",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pull_string_data_and)"
  },
  {
    "addr": "B77C",
    "hex1": "20",
    "hex2": "82",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B782",
    "comment": "evaluate string, get length in A (and Y)",
    "desc": "perform LEN()",
    "parent": "this",
    "entry": true,
    "label": "perform_len"
  },
  {
    "addr": "B77F",
    "hex1": "4C",
    "hex2": "A2",
    "hex3": "B3",
    "opcode": "JMP",
    "argument": "$B3A2",
    "comment": "convert Y to byte in FAC1 and return",
    "parent": "perform_len",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_len)"
  },
  {
    "addr": "B782",
    "hex1": "20",
    "hex2": "A3",
    "hex3": "B6",
    "opcode": "JSR",
    "argument": "$B6A3",
    "comment": "evaluate string",
    "desc": "evaluate string, get length in Y",
    "parent": "this",
    "entry": true,
    "label": "evaluate_string_get_"
  },
  {
    "addr": "B785",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "set data type = numeric",
    "parent": "evaluate_string_get_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string_get_)"
  },
  {
    "addr": "B787",
    "hex1": "86",
    "hex2": "0D",
    "hex3": null,
    "opcode": "STX",
    "argument": "$0D",
    "comment": "clear data type flag, $FF = string, $00 = numeric",
    "parent": "evaluate_string_get_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string_get_)"
  },
  {
    "addr": "B789",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy length to Y",
    "parent": "evaluate_string_get_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string_get_)"
  },
  {
    "addr": "B78A",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "evaluate_string_get_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_string_get_)"
  },
  {
    "addr": "B78B",
    "hex1": "20",
    "hex2": "82",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B782",
    "comment": "evaluate string, get length in A (and Y)",
    "desc": "perform ASC()",
    "parent": "this",
    "entry": true,
    "label": "perform_asc"
  },
  {
    "addr": "B78E",
    "hex1": "F0",
    "hex2": "08",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B798",
    "comment": "if null do illegal quantity error then warm start",
    "parent": "perform_asc",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_asc)"
  },
  {
    "addr": "B790",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "set index to first character",
    "parent": "perform_asc",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_asc)"
  },
  {
    "addr": "B792",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get byte",
    "parent": "perform_asc",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_asc)"
  },
  {
    "addr": "B794",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy to Y",
    "parent": "perform_asc",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_asc)"
  },
  {
    "addr": "B795",
    "hex1": "4C",
    "hex2": "A2",
    "hex3": "B3",
    "opcode": "JMP",
    "argument": "$B3A2",
    "comment": "convert Y to byte in FAC1 and return",
    "parent": "perform_asc",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_asc)"
  },
  {
    "addr": "B798",
    "hex1": "4C",
    "hex2": "48",
    "hex3": "B2",
    "opcode": "JMP",
    "argument": "$B248",
    "comment": "do illegal quantity error then warm start",
    "desc": "do illegal quantity error then warm start",
    "parent": "this",
    "entry": true,
    "label": "do_illegal_quantity_"
  },
  {
    "addr": "B79B",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "desc": "scan and get byte parameter",
    "parent": "this",
    "entry": true,
    "label": "scan_and_get_byte_pa"
  },
  {
    "addr": "B79E",
    "hex1": "20",
    "hex2": "8A",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8A",
    "comment": "evaluate expression and check is numeric, else do type mismatch",
    "desc": "get byte parameter",
    "parent": "this",
    "entry": true,
    "label": "get_byte_parameter"
  },
  {
    "addr": "B7A1",
    "hex1": "20",
    "hex2": "B8",
    "hex3": "B1",
    "opcode": "JSR",
    "argument": "$B1B8",
    "comment": "evaluate integer expression, sign check",
    "desc": "evaluate byte expression, result in X",
    "parent": "this",
    "entry": true,
    "label": "evaluate_byte_expres"
  },
  {
    "addr": "B7A4",
    "hex1": "A6",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$64",
    "comment": "get FAC1 mantissa 3",
    "parent": "evaluate_byte_expres",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_byte_expres)"
  },
  {
    "addr": "B7A6",
    "hex1": "D0",
    "hex2": "F0",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B798",
    "comment": "if not null do illegal quantity error then warm start",
    "parent": "evaluate_byte_expres",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_byte_expres)"
  },
  {
    "addr": "B7A8",
    "hex1": "A6",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "evaluate_byte_expres",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_byte_expres)"
  },
  {
    "addr": "B7AA",
    "hex1": "4C",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JMP",
    "argument": "$0079",
    "comment": "scan memory and return",
    "parent": "evaluate_byte_expres",
    "entry": false,
    "label": "n/a",
    "desc": "(part of evaluate_byte_expres)"
  },
  {
    "addr": "B7AD",
    "hex1": "20",
    "hex2": "82",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B782",
    "comment": "evaluate string, get length in A (and Y)",
    "desc": "perform VAL()",
    "parent": "this",
    "entry": true,
    "label": "perform_val"
  },
  {
    "addr": "B7B0",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B7B5",
    "comment": "branch if not null string string was null so set result = $00",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7B2",
    "hex1": "4C",
    "hex2": "F7",
    "hex3": "B8",
    "opcode": "JMP",
    "argument": "$B8F7",
    "comment": "clear FAC1 exponent and sign and return",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7B5",
    "hex1": "A6",
    "hex2": "7A",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$7A",
    "comment": "get BASIC execute pointer low byte",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7B7",
    "hex1": "A4",
    "hex2": "7B",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$7B",
    "comment": "get BASIC execute pointer high byte",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7B9",
    "hex1": "86",
    "hex2": "71",
    "hex3": null,
    "opcode": "STX",
    "argument": "$71",
    "comment": "save BASIC execute pointer low byte",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7BB",
    "hex1": "84",
    "hex2": "72",
    "hex3": null,
    "opcode": "STY",
    "argument": "$72",
    "comment": "save BASIC execute pointer high byte",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7BD",
    "hex1": "A6",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$22",
    "comment": "get string pointer low byte",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7BF",
    "hex1": "86",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STX",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7C1",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7C2",
    "hex1": "65",
    "hex2": "22",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$22",
    "comment": "add string length",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7C4",
    "hex1": "85",
    "hex2": "24",
    "hex3": null,
    "opcode": "STA",
    "argument": "$24",
    "comment": "save string end low byte",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7C6",
    "hex1": "A6",
    "hex2": "23",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$23",
    "comment": "get string pointer high byte",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7C8",
    "hex1": "86",
    "hex2": "7B",
    "hex3": null,
    "opcode": "STX",
    "argument": "$7B",
    "comment": "save BASIC execute pointer high byte",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7CA",
    "hex1": "90",
    "hex2": "01",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B7CD",
    "comment": "branch if no high byte increment",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7CC",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment string end high byte",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7CD",
    "hex1": "86",
    "hex2": "25",
    "hex3": null,
    "opcode": "STX",
    "argument": "$25",
    "comment": "save string end high byte",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7CF",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "set index to $00",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7D1",
    "hex1": "B1",
    "hex2": "24",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($24),Y",
    "comment": "get string end byte",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7D3",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "push it",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7D4",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "clear A",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7D5",
    "hex1": "91",
    "hex2": "24",
    "hex3": null,
    "opcode": "STA",
    "argument": "($24),Y",
    "comment": "terminate string with $00",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7D7",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7DA",
    "hex1": "20",
    "hex2": "F3",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BCF3",
    "comment": "get FAC1 from string",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7DD",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "restore string end byte",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7DE",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7E0",
    "hex1": "91",
    "hex2": "24",
    "hex3": null,
    "opcode": "STA",
    "argument": "($24),Y",
    "comment": "put string end byte back",
    "parent": "perform_val",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_val)"
  },
  {
    "addr": "B7E2",
    "hex1": "A6",
    "hex2": "71",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$71",
    "comment": "get BASIC execute pointer low byte back",
    "desc": "restore BASIC execute pointer from temp",
    "parent": "this",
    "entry": true,
    "label": "restore_basic_execut"
  },
  {
    "addr": "B7E4",
    "hex1": "A4",
    "hex2": "72",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$72",
    "comment": "get BASIC execute pointer high byte back",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B7E6",
    "hex1": "86",
    "hex2": "7A",
    "hex3": null,
    "opcode": "STX",
    "argument": "$7A",
    "comment": "save BASIC execute pointer low byte",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B7E8",
    "hex1": "84",
    "hex2": "7B",
    "hex3": null,
    "opcode": "STY",
    "argument": "$7B",
    "comment": "save BASIC execute pointer high byte",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B7EA",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "restore_basic_execut",
    "entry": false,
    "label": "n/a",
    "desc": "(part of restore_basic_execut)"
  },
  {
    "addr": "B7EB",
    "hex1": "20",
    "hex2": "8A",
    "hex3": "AD",
    "opcode": "JSR",
    "argument": "$AD8A",
    "comment": "evaluate expression and check is numeric, else do type mismatch",
    "desc": "get parameters for POKE/WAIT",
    "parent": "this",
    "entry": true,
    "label": "get_parameters_for_p"
  },
  {
    "addr": "B7EE",
    "hex1": "20",
    "hex2": "F7",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B7F7",
    "comment": "convert FAC_1 to integer in temporary integer",
    "parent": "get_parameters_for_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_parameters_for_p)"
  },
  {
    "addr": "B7F1",
    "hex1": "20",
    "hex2": "FD",
    "hex3": "AE",
    "opcode": "JSR",
    "argument": "$AEFD",
    "comment": "scan for \",\", else do syntax error then warm start",
    "parent": "get_parameters_for_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_parameters_for_p)"
  },
  {
    "addr": "B7F4",
    "hex1": "4C",
    "hex2": "9E",
    "hex3": "B7",
    "opcode": "JMP",
    "argument": "$B79E",
    "comment": "get byte parameter and return",
    "parent": "get_parameters_for_p",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_parameters_for_p)"
  },
  {
    "addr": "B7F7",
    "hex1": "A5",
    "hex2": "66",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$66",
    "comment": "get FAC1 sign",
    "desc": "convert FAC_1 to integer in temporary integer",
    "parent": "this",
    "entry": true,
    "label": "convert_fac_1_to_int"
  },
  {
    "addr": "B7F9",
    "hex1": "30",
    "hex2": "9D",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$B798",
    "comment": "if -ve do illegal quantity error then warm start",
    "parent": "convert_fac_1_to_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac_1_to_int)"
  },
  {
    "addr": "B7FB",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "parent": "convert_fac_1_to_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac_1_to_int)"
  },
  {
    "addr": "B7FD",
    "hex1": "C9",
    "hex2": "91",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$91",
    "comment": "compare with exponent = 2^16",
    "parent": "convert_fac_1_to_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac_1_to_int)"
  },
  {
    "addr": "B7FF",
    "hex1": "B0",
    "hex2": "97",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B798",
    "comment": "if >= do illegal quantity error then warm start",
    "parent": "convert_fac_1_to_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac_1_to_int)"
  },
  {
    "addr": "B801",
    "hex1": "20",
    "hex2": "9B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC9B",
    "comment": "convert FAC1 floating to fixed",
    "parent": "convert_fac_1_to_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac_1_to_int)"
  },
  {
    "addr": "B804",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get FAC1 mantissa 3",
    "parent": "convert_fac_1_to_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac_1_to_int)"
  },
  {
    "addr": "B806",
    "hex1": "A4",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "convert_fac_1_to_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac_1_to_int)"
  },
  {
    "addr": "B808",
    "hex1": "84",
    "hex2": "14",
    "hex3": null,
    "opcode": "STY",
    "argument": "$14",
    "comment": "save temporary integer low byte",
    "parent": "convert_fac_1_to_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac_1_to_int)"
  },
  {
    "addr": "B80A",
    "hex1": "85",
    "hex2": "15",
    "hex3": null,
    "opcode": "STA",
    "argument": "$15",
    "comment": "save temporary integer high byte",
    "parent": "convert_fac_1_to_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac_1_to_int)"
  },
  {
    "addr": "B80C",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "convert_fac_1_to_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac_1_to_int)"
  },
  {
    "addr": "B80D",
    "hex1": "A5",
    "hex2": "15",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$15",
    "comment": "get line number high byte",
    "desc": "perform PEEK()",
    "parent": "this",
    "entry": true,
    "label": "perform_peek"
  },
  {
    "addr": "B80F",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save line number high byte",
    "parent": "perform_peek",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_peek)"
  },
  {
    "addr": "B810",
    "hex1": "A5",
    "hex2": "14",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$14",
    "comment": "get line number low byte",
    "parent": "perform_peek",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_peek)"
  },
  {
    "addr": "B812",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save line number low byte",
    "parent": "perform_peek",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_peek)"
  },
  {
    "addr": "B813",
    "hex1": "20",
    "hex2": "F7",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B7F7",
    "comment": "convert FAC_1 to integer in temporary integer",
    "parent": "perform_peek",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_peek)"
  },
  {
    "addr": "B816",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "perform_peek",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_peek)"
  },
  {
    "addr": "B818",
    "hex1": "B1",
    "hex2": "14",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($14),Y",
    "comment": "read byte",
    "parent": "perform_peek",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_peek)"
  },
  {
    "addr": "B81A",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy byte to A",
    "parent": "perform_peek",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_peek)"
  },
  {
    "addr": "B81B",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull byte",
    "parent": "perform_peek",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_peek)"
  },
  {
    "addr": "B81C",
    "hex1": "85",
    "hex2": "14",
    "hex3": null,
    "opcode": "STA",
    "argument": "$14",
    "comment": "restore line number low byte",
    "parent": "perform_peek",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_peek)"
  },
  {
    "addr": "B81E",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull byte",
    "parent": "perform_peek",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_peek)"
  },
  {
    "addr": "B81F",
    "hex1": "85",
    "hex2": "15",
    "hex3": null,
    "opcode": "STA",
    "argument": "$15",
    "comment": "restore line number high byte",
    "parent": "perform_peek",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_peek)"
  },
  {
    "addr": "B821",
    "hex1": "4C",
    "hex2": "A2",
    "hex3": "B3",
    "opcode": "JMP",
    "argument": "$B3A2",
    "comment": "convert Y to byte in FAC_1 and return",
    "parent": "perform_peek",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_peek)"
  },
  {
    "addr": "B824",
    "hex1": "20",
    "hex2": "EB",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B7EB",
    "comment": "get parameters for POKE/WAIT",
    "desc": "perform POKE",
    "parent": "this",
    "entry": true,
    "label": "perform_poke"
  },
  {
    "addr": "B827",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy byte to A",
    "parent": "perform_poke",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_poke)"
  },
  {
    "addr": "B828",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "perform_poke",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_poke)"
  },
  {
    "addr": "B82A",
    "hex1": "91",
    "hex2": "14",
    "hex3": null,
    "opcode": "STA",
    "argument": "($14),Y",
    "comment": "write byte",
    "parent": "perform_poke",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_poke)"
  },
  {
    "addr": "B82C",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "perform_poke",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_poke)"
  },
  {
    "addr": "B82D",
    "hex1": "20",
    "hex2": "EB",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B7EB",
    "comment": "get parameters for POKE/WAIT",
    "desc": "perform WAIT",
    "parent": "this",
    "entry": true,
    "label": "perform_wait"
  },
  {
    "addr": "B830",
    "hex1": "86",
    "hex2": "49",
    "hex3": null,
    "opcode": "STX",
    "argument": "$49",
    "comment": "save byte",
    "parent": "perform_wait",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_wait)"
  },
  {
    "addr": "B832",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "clear mask",
    "parent": "perform_wait",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_wait)"
  },
  {
    "addr": "B834",
    "hex1": "20",
    "hex2": "79",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0079",
    "comment": "scan memory",
    "parent": "perform_wait",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_wait)"
  },
  {
    "addr": "B837",
    "hex1": "F0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B83C",
    "comment": "skip if no third argument",
    "parent": "perform_wait",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_wait)"
  },
  {
    "addr": "B839",
    "hex1": "20",
    "hex2": "F1",
    "hex3": "B7",
    "opcode": "JSR",
    "argument": "$B7F1",
    "comment": "scan for \",\" and get byte, else syntax error then warm start",
    "parent": "perform_wait",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_wait)"
  },
  {
    "addr": "B83C",
    "hex1": "86",
    "hex2": "4A",
    "hex3": null,
    "opcode": "STX",
    "argument": "$4A",
    "comment": "save EOR argument",
    "parent": "perform_wait",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_wait)"
  },
  {
    "addr": "B83E",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "perform_wait",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_wait)"
  },
  {
    "addr": "B840",
    "hex1": "B1",
    "hex2": "14",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($14),Y",
    "comment": "get byte via temporary integer (address)",
    "parent": "perform_wait",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_wait)"
  },
  {
    "addr": "B842",
    "hex1": "45",
    "hex2": "4A",
    "hex3": null,
    "opcode": "EOR",
    "argument": "$4A",
    "comment": "EOR with second argument       (mask)",
    "parent": "perform_wait",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_wait)"
  },
  {
    "addr": "B844",
    "hex1": "25",
    "hex2": "49",
    "hex3": null,
    "opcode": "AND",
    "argument": "$49",
    "comment": "AND with first argument        (byte)",
    "parent": "perform_wait",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_wait)"
  },
  {
    "addr": "B846",
    "hex1": "F0",
    "hex2": "F8",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B840",
    "comment": "loop if result is zero",
    "parent": "perform_wait",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_wait)"
  },
  {
    "addr": "B848",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "perform_wait",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_wait)"
  },
  {
    "addr": "B849",
    "hex1": "A9",
    "hex2": "11",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$11",
    "comment": "set 0.5 pointer low byte",
    "desc": "add 0.5 to FAC1 (round FAC1)",
    "parent": "this",
    "entry": true,
    "label": "add_05_to_fac1_round"
  },
  {
    "addr": "B84B",
    "hex1": "A0",
    "hex2": "BF",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$BF",
    "comment": "set 0.5 pointer high byte",
    "parent": "add_05_to_fac1_round",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_05_to_fac1_round)"
  },
  {
    "addr": "B84D",
    "hex1": "4C",
    "hex2": "67",
    "hex3": "B8",
    "opcode": "JMP",
    "argument": "$B867",
    "comment": "add (AY) to FAC1",
    "parent": "add_05_to_fac1_round",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_05_to_fac1_round)"
  },
  {
    "addr": "B850",
    "hex1": "20",
    "hex2": "8C",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BA8C",
    "comment": "unpack memory (AY) into FAC2",
    "desc": "perform subtraction, FAC1 from (AY)",
    "parent": "this",
    "entry": true,
    "label": "perform_subtraction_"
  },
  {
    "addr": "B853",
    "hex1": "A5",
    "hex2": "66",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$66",
    "comment": "get FAC1 sign (b7)",
    "desc": "perform subtraction, FAC1 from FAC2",
    "parent": "this",
    "entry": true,
    "label": "perform_subtraction_"
  },
  {
    "addr": "B855",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement it",
    "parent": "perform_subtraction_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_subtraction_)"
  },
  {
    "addr": "B857",
    "hex1": "85",
    "hex2": "66",
    "hex3": null,
    "opcode": "STA",
    "argument": "$66",
    "comment": "save FAC1 sign (b7)",
    "parent": "perform_subtraction_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_subtraction_)"
  },
  {
    "addr": "B859",
    "hex1": "45",
    "hex2": "6E",
    "hex3": null,
    "opcode": "EOR",
    "argument": "$6E",
    "comment": "EOR with FAC2 sign (b7)",
    "parent": "perform_subtraction_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_subtraction_)"
  },
  {
    "addr": "B85B",
    "hex1": "85",
    "hex2": "6F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6F",
    "comment": "save sign compare (FAC1 EOR FAC2)",
    "parent": "perform_subtraction_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_subtraction_)"
  },
  {
    "addr": "B85D",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "parent": "perform_subtraction_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_subtraction_)"
  },
  {
    "addr": "B85F",
    "hex1": "4C",
    "hex2": "6A",
    "hex3": "B8",
    "opcode": "JMP",
    "argument": "$B86A",
    "comment": "add FAC2 to FAC1 and return",
    "parent": "perform_subtraction_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_subtraction_)"
  },
  {
    "addr": "B862",
    "hex1": "20",
    "hex2": "99",
    "hex3": "B9",
    "opcode": "JSR",
    "argument": "$B999",
    "comment": "shift FACX A times right (>8 shifts)",
    "parent": "perform_subtraction_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_subtraction_)"
  },
  {
    "addr": "B865",
    "hex1": "90",
    "hex2": "3C",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B8A3",
    "comment": "go subtract mantissas",
    "parent": "perform_subtraction_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_subtraction_)"
  },
  {
    "addr": "B867",
    "hex1": "20",
    "hex2": "8C",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BA8C",
    "comment": "unpack memory (AY) into FAC2",
    "desc": "add (AY) to FAC1",
    "parent": "this",
    "entry": true,
    "label": "add_ay_to_fac1"
  },
  {
    "addr": "B86A",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B86F",
    "comment": "branch if FAC1 is not zero",
    "desc": "add FAC2 to FAC1",
    "parent": "this",
    "entry": true,
    "label": "add_fac2_to_fac1"
  },
  {
    "addr": "B86C",
    "hex1": "4C",
    "hex2": "FC",
    "hex3": "BB",
    "opcode": "JMP",
    "argument": "$BBFC",
    "comment": "FAC1 was zero so copy FAC2 to FAC1 and return FAC1 is non zero",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B86F",
    "hex1": "A6",
    "hex2": "70",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$70",
    "comment": "get FAC1 rounding byte",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B871",
    "hex1": "86",
    "hex2": "56",
    "hex3": null,
    "opcode": "STX",
    "argument": "$56",
    "comment": "save as FAC2 rounding byte",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B873",
    "hex1": "A2",
    "hex2": "69",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$69",
    "comment": "set index to FAC2 exponent address",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B875",
    "hex1": "A5",
    "hex2": "69",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$69",
    "comment": "get FAC2 exponent",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B877",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy exponent",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B878",
    "hex1": "F0",
    "hex2": "CE",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B848",
    "comment": "exit if zero",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B87A",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B87B",
    "hex1": "E5",
    "hex2": "61",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$61",
    "comment": "subtract FAC1 exponent",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B87D",
    "hex1": "F0",
    "hex2": "24",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B8A3",
    "comment": "if equal go add mantissas",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B87F",
    "hex1": "90",
    "hex2": "12",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B893",
    "comment": "if FAC2 < FAC1 then go shift FAC2 right else FAC2 > FAC1",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B881",
    "hex1": "84",
    "hex2": "61",
    "hex3": null,
    "opcode": "STY",
    "argument": "$61",
    "comment": "save FAC1 exponent",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B883",
    "hex1": "A4",
    "hex2": "6E",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$6E",
    "comment": "get FAC2 sign (b7)",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B885",
    "hex1": "84",
    "hex2": "66",
    "hex3": null,
    "opcode": "STY",
    "argument": "$66",
    "comment": "save FAC1 sign (b7)",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B887",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement A",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B889",
    "hex1": "69",
    "hex2": "00",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$00",
    "comment": "+1, twos complement, carry is set",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B88B",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear Y",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B88D",
    "hex1": "84",
    "hex2": "56",
    "hex3": null,
    "opcode": "STY",
    "argument": "$56",
    "comment": "clear FAC2 rounding byte",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B88F",
    "hex1": "A2",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$61",
    "comment": "set index to FAC1 exponent address",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B891",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B897",
    "comment": "branch always FAC2 < FAC1",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B893",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear Y",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B895",
    "hex1": "84",
    "hex2": "70",
    "hex3": null,
    "opcode": "STY",
    "argument": "$70",
    "comment": "clear FAC1 rounding byte",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B897",
    "hex1": "C9",
    "hex2": "F9",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$F9",
    "comment": "compare exponent diff with $F9",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B899",
    "hex1": "30",
    "hex2": "C7",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$B862",
    "comment": "branch if range $79-$F8",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B89B",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy exponent difference to Y",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B89C",
    "hex1": "A5",
    "hex2": "70",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$70",
    "comment": "get FAC1 rounding byte",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B89E",
    "hex1": "56",
    "hex2": "01",
    "hex3": null,
    "opcode": "LSR",
    "argument": "$01,X",
    "comment": "shift FAC? mantissa 1",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8A0",
    "hex1": "20",
    "hex2": "B0",
    "hex3": "B9",
    "opcode": "JSR",
    "argument": "$B9B0",
    "comment": "shift FACX Y times right exponents are equal now do mantissa subtract",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8A3",
    "hex1": "24",
    "hex2": "6F",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$6F",
    "comment": "test sign compare (FAC1 EOR FAC2)",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8A5",
    "hex1": "10",
    "hex2": "57",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$B8FE",
    "comment": "if = add FAC2 mantissa to FAC1 mantissa and return",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8A7",
    "hex1": "A0",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$61",
    "comment": "set the Y index to FAC1 exponent address",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8A9",
    "hex1": "E0",
    "hex2": "69",
    "hex3": null,
    "opcode": "CPX",
    "argument": "#$69",
    "comment": "compare X to FAC2 exponent address",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8AB",
    "hex1": "F0",
    "hex2": "02",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B8AF",
    "comment": "if = continue, Y = FAC1, X = FAC2",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8AD",
    "hex1": "A0",
    "hex2": "69",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$69",
    "comment": "else set the Y index to FAC2 exponent address subtract the smaller from the bigger (take the sign of the bigger)",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8AF",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8B0",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "ones complement A",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8B2",
    "hex1": "65",
    "hex2": "56",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$56",
    "comment": "add FAC2 rounding byte",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8B4",
    "hex1": "85",
    "hex2": "70",
    "hex3": null,
    "opcode": "STA",
    "argument": "$70",
    "comment": "save FAC1 rounding byte",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8B6",
    "hex1": "B9",
    "hex2": "04",
    "hex3": "00",
    "opcode": "LDA",
    "argument": "$0004,Y",
    "comment": "get FACY mantissa 4",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8B9",
    "hex1": "F5",
    "hex2": "04",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$04,X",
    "comment": "subtract FACX mantissa 4",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8BB",
    "hex1": "85",
    "hex2": "65",
    "hex3": null,
    "opcode": "STA",
    "argument": "$65",
    "comment": "save FAC1 mantissa 4",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8BD",
    "hex1": "B9",
    "hex2": "03",
    "hex3": "00",
    "opcode": "LDA",
    "argument": "$0003,Y",
    "comment": "get FACY mantissa 3",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8C0",
    "hex1": "F5",
    "hex2": "03",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$03,X",
    "comment": "subtract FACX mantissa 3",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8C2",
    "hex1": "85",
    "hex2": "64",
    "hex3": null,
    "opcode": "STA",
    "argument": "$64",
    "comment": "save FAC1 mantissa 3",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8C4",
    "hex1": "B9",
    "hex2": "02",
    "hex3": "00",
    "opcode": "LDA",
    "argument": "$0002,Y",
    "comment": "get FACY mantissa 2",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8C7",
    "hex1": "F5",
    "hex2": "02",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$02,X",
    "comment": "subtract FACX mantissa 2",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8C9",
    "hex1": "85",
    "hex2": "63",
    "hex3": null,
    "opcode": "STA",
    "argument": "$63",
    "comment": "save FAC1 mantissa 2",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8CB",
    "hex1": "B9",
    "hex2": "01",
    "hex3": "00",
    "opcode": "LDA",
    "argument": "$0001,Y",
    "comment": "get FACY mantissa 1",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8CE",
    "hex1": "F5",
    "hex2": "01",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$01,X",
    "comment": "subtract FACX mantissa 1",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8D0",
    "hex1": "85",
    "hex2": "62",
    "hex3": null,
    "opcode": "STA",
    "argument": "$62",
    "comment": "save FAC1 mantissa 1",
    "parent": "add_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_to_fac1)"
  },
  {
    "addr": "B8D2",
    "hex1": "B0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B8D7",
    "comment": "branch if number is +ve",
    "desc": "do ABS and normalise FAC1",
    "parent": "this",
    "entry": true,
    "label": "do_abs_and_normalise"
  },
  {
    "addr": "B8D4",
    "hex1": "20",
    "hex2": "47",
    "hex3": "B9",
    "opcode": "JSR",
    "argument": "$B947",
    "comment": "negate FAC1",
    "parent": "do_abs_and_normalise",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_abs_and_normalise)"
  },
  {
    "addr": "B8D7",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear Y",
    "desc": "normalise FAC1",
    "parent": "this",
    "entry": true,
    "label": "normalise_fac1"
  },
  {
    "addr": "B8D9",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "clear A",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8DA",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8DB",
    "hex1": "A6",
    "hex2": "62",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$62",
    "comment": "get FAC1 mantissa 1",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8DD",
    "hex1": "D0",
    "hex2": "4A",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B929",
    "comment": "if not zero normalise FAC1",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8DF",
    "hex1": "A6",
    "hex2": "63",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$63",
    "comment": "get FAC1 mantissa 2",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8E1",
    "hex1": "86",
    "hex2": "62",
    "hex3": null,
    "opcode": "STX",
    "argument": "$62",
    "comment": "save FAC1 mantissa 1",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8E3",
    "hex1": "A6",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$64",
    "comment": "get FAC1 mantissa 3",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8E5",
    "hex1": "86",
    "hex2": "63",
    "hex3": null,
    "opcode": "STX",
    "argument": "$63",
    "comment": "save FAC1 mantissa 2",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8E7",
    "hex1": "A6",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8E9",
    "hex1": "86",
    "hex2": "64",
    "hex3": null,
    "opcode": "STX",
    "argument": "$64",
    "comment": "save FAC1 mantissa 3",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8EB",
    "hex1": "A6",
    "hex2": "70",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$70",
    "comment": "get FAC1 rounding byte",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8ED",
    "hex1": "86",
    "hex2": "65",
    "hex3": null,
    "opcode": "STX",
    "argument": "$65",
    "comment": "save FAC1 mantissa 4",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8EF",
    "hex1": "84",
    "hex2": "70",
    "hex3": null,
    "opcode": "STY",
    "argument": "$70",
    "comment": "clear FAC1 rounding byte",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8F1",
    "hex1": "69",
    "hex2": "08",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$08",
    "comment": "add x to exponent offset",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8F3",
    "hex1": "C9",
    "hex2": "20",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$20",
    "comment": "compare with $20, max offset, all bits would be = 0",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8F5",
    "hex1": "D0",
    "hex2": "E4",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B8DB",
    "comment": "loop if not max",
    "parent": "normalise_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of normalise_fac1)"
  },
  {
    "addr": "B8F7",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A",
    "desc": "clear FAC1 exponent and sign",
    "parent": "this",
    "entry": true,
    "label": "clear_fac1_exponent_"
  },
  {
    "addr": "B8F9",
    "hex1": "85",
    "hex2": "61",
    "hex3": null,
    "opcode": "STA",
    "argument": "$61",
    "comment": "set FAC1 exponent",
    "parent": "clear_fac1_exponent_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of clear_fac1_exponent_)"
  },
  {
    "addr": "B8FB",
    "hex1": "85",
    "hex2": "66",
    "hex3": null,
    "opcode": "STA",
    "argument": "$66",
    "comment": "save FAC1 sign (b7)",
    "desc": "save FAC1 sign",
    "parent": "this",
    "entry": true,
    "label": "save_fac1_sign"
  },
  {
    "addr": "B8FD",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "save_fac1_sign",
    "entry": false,
    "label": "n/a",
    "desc": "(part of save_fac1_sign)"
  },
  {
    "addr": "B8FE",
    "hex1": "65",
    "hex2": "56",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$56",
    "comment": "add FAC2 rounding byte",
    "desc": "add FAC2 mantissa to FAC1 mantissa",
    "parent": "this",
    "entry": true,
    "label": "add_fac2_mantissa_to"
  },
  {
    "addr": "B900",
    "hex1": "85",
    "hex2": "70",
    "hex3": null,
    "opcode": "STA",
    "argument": "$70",
    "comment": "save FAC1 rounding byte",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B902",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B904",
    "hex1": "65",
    "hex2": "6D",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$6D",
    "comment": "add FAC2 mantissa 4",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B906",
    "hex1": "85",
    "hex2": "65",
    "hex3": null,
    "opcode": "STA",
    "argument": "$65",
    "comment": "save FAC1 mantissa 4",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B908",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get FAC1 mantissa 3",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B90A",
    "hex1": "65",
    "hex2": "6C",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$6C",
    "comment": "add FAC2 mantissa 3",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B90C",
    "hex1": "85",
    "hex2": "64",
    "hex3": null,
    "opcode": "STA",
    "argument": "$64",
    "comment": "save FAC1 mantissa 3",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B90E",
    "hex1": "A5",
    "hex2": "63",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$63",
    "comment": "get FAC1 mantissa 2",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B910",
    "hex1": "65",
    "hex2": "6B",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$6B",
    "comment": "add FAC2 mantissa 2",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B912",
    "hex1": "85",
    "hex2": "63",
    "hex3": null,
    "opcode": "STA",
    "argument": "$63",
    "comment": "save FAC1 mantissa 2",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B914",
    "hex1": "A5",
    "hex2": "62",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$62",
    "comment": "get FAC1 mantissa 1",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B916",
    "hex1": "65",
    "hex2": "6A",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$6A",
    "comment": "add FAC2 mantissa 1",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B918",
    "hex1": "85",
    "hex2": "62",
    "hex3": null,
    "opcode": "STA",
    "argument": "$62",
    "comment": "save FAC1 mantissa 1",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B91A",
    "hex1": "4C",
    "hex2": "36",
    "hex3": "B9",
    "opcode": "JMP",
    "argument": "$B936",
    "comment": "test and normalise FAC1 for C=0/1",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B91D",
    "hex1": "69",
    "hex2": "01",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$01",
    "comment": "add 1 to exponent offset",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B91F",
    "hex1": "06",
    "hex2": "70",
    "hex3": null,
    "opcode": "ASL",
    "argument": "$70",
    "comment": "shift FAC1 rounding byte",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B921",
    "hex1": "26",
    "hex2": "65",
    "hex3": null,
    "opcode": "ROL",
    "argument": "$65",
    "comment": "shift FAC1 mantissa 4",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B923",
    "hex1": "26",
    "hex2": "64",
    "hex3": null,
    "opcode": "ROL",
    "argument": "$64",
    "comment": "shift FAC1 mantissa 3",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B925",
    "hex1": "26",
    "hex2": "63",
    "hex3": null,
    "opcode": "ROL",
    "argument": "$63",
    "comment": "shift FAC1 mantissa 2",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B927",
    "hex1": "26",
    "hex2": "62",
    "hex3": null,
    "opcode": "ROL",
    "argument": "$62",
    "comment": "shift FAC1 mantissa 1 normalise FAC1",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B929",
    "hex1": "10",
    "hex2": "F2",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$B91D",
    "comment": "loop if not normalised",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B92B",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B92C",
    "hex1": "E5",
    "hex2": "61",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$61",
    "comment": "subtract FAC1 exponent",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B92E",
    "hex1": "B0",
    "hex2": "C7",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B8F7",
    "comment": "branch if underflow (set result = $0)",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B930",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement exponent",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B932",
    "hex1": "69",
    "hex2": "01",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$01",
    "comment": "+1 (twos complement)",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B934",
    "hex1": "85",
    "hex2": "61",
    "hex3": null,
    "opcode": "STA",
    "argument": "$61",
    "comment": "save FAC1 exponent test and normalise FAC1 for C=0/1",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B936",
    "hex1": "90",
    "hex2": "0E",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B946",
    "comment": "exit if no overflow normalise FAC1 for C=1",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B938",
    "hex1": "E6",
    "hex2": "61",
    "hex3": null,
    "opcode": "INC",
    "argument": "$61",
    "comment": "increment FAC1 exponent",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B93A",
    "hex1": "F0",
    "hex2": "42",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B97E",
    "comment": "if zero do overflow error then warm start",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B93C",
    "hex1": "66",
    "hex2": "62",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$62",
    "comment": "shift FAC1 mantissa 1",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B93E",
    "hex1": "66",
    "hex2": "63",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$63",
    "comment": "shift FAC1 mantissa 2",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B940",
    "hex1": "66",
    "hex2": "64",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$64",
    "comment": "shift FAC1 mantissa 3",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B942",
    "hex1": "66",
    "hex2": "65",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$65",
    "comment": "shift FAC1 mantissa 4",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B944",
    "hex1": "66",
    "hex2": "70",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$70",
    "comment": "shift FAC1 rounding byte",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B946",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "add_fac2_mantissa_to",
    "entry": false,
    "label": "n/a",
    "desc": "(part of add_fac2_mantissa_to)"
  },
  {
    "addr": "B947",
    "hex1": "A5",
    "hex2": "66",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$66",
    "comment": "get FAC1 sign (b7)",
    "desc": "negate FAC1",
    "parent": "this",
    "entry": true,
    "label": "negate_fac1"
  },
  {
    "addr": "B949",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement it",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B94B",
    "hex1": "85",
    "hex2": "66",
    "hex3": null,
    "opcode": "STA",
    "argument": "$66",
    "comment": "save FAC1 sign (b7) twos complement FAC1 mantissa",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B94D",
    "hex1": "A5",
    "hex2": "62",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$62",
    "comment": "get FAC1 mantissa 1",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B94F",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement it",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B951",
    "hex1": "85",
    "hex2": "62",
    "hex3": null,
    "opcode": "STA",
    "argument": "$62",
    "comment": "save FAC1 mantissa 1",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B953",
    "hex1": "A5",
    "hex2": "63",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$63",
    "comment": "get FAC1 mantissa 2",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B955",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement it",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B957",
    "hex1": "85",
    "hex2": "63",
    "hex3": null,
    "opcode": "STA",
    "argument": "$63",
    "comment": "save FAC1 mantissa 2",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B959",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get FAC1 mantissa 3",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B95B",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement it",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B95D",
    "hex1": "85",
    "hex2": "64",
    "hex3": null,
    "opcode": "STA",
    "argument": "$64",
    "comment": "save FAC1 mantissa 3",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B95F",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B961",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement it",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B963",
    "hex1": "85",
    "hex2": "65",
    "hex3": null,
    "opcode": "STA",
    "argument": "$65",
    "comment": "save FAC1 mantissa 4",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B965",
    "hex1": "A5",
    "hex2": "70",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$70",
    "comment": "get FAC1 rounding byte",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B967",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement it",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B969",
    "hex1": "85",
    "hex2": "70",
    "hex3": null,
    "opcode": "STA",
    "argument": "$70",
    "comment": "save FAC1 rounding byte",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B96B",
    "hex1": "E6",
    "hex2": "70",
    "hex3": null,
    "opcode": "INC",
    "argument": "$70",
    "comment": "increment FAC1 rounding byte",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B96D",
    "hex1": "D0",
    "hex2": "0E",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B97D",
    "comment": "exit if no overflow increment FAC1 mantissa",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B96F",
    "hex1": "E6",
    "hex2": "65",
    "hex3": null,
    "opcode": "INC",
    "argument": "$65",
    "comment": "increment FAC1 mantissa 4",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B971",
    "hex1": "D0",
    "hex2": "0A",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B97D",
    "comment": "finished if no rollover",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B973",
    "hex1": "E6",
    "hex2": "64",
    "hex3": null,
    "opcode": "INC",
    "argument": "$64",
    "comment": "increment FAC1 mantissa 3",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B975",
    "hex1": "D0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B97D",
    "comment": "finished if no rollover",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B977",
    "hex1": "E6",
    "hex2": "63",
    "hex3": null,
    "opcode": "INC",
    "argument": "$63",
    "comment": "increment FAC1 mantissa 2",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B979",
    "hex1": "D0",
    "hex2": "02",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B97D",
    "comment": "finished if no rollover",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B97B",
    "hex1": "E6",
    "hex2": "62",
    "hex3": null,
    "opcode": "INC",
    "argument": "$62",
    "comment": "increment FAC1 mantissa 1",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B97D",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "negate_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of negate_fac1)"
  },
  {
    "addr": "B97E",
    "hex1": "A2",
    "hex2": "0F",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$0F",
    "comment": "error $0F, overflow error",
    "desc": "do overflow error then warm start",
    "parent": "this",
    "entry": true,
    "label": "do_overflow_error_th"
  },
  {
    "addr": "B980",
    "hex1": "4C",
    "hex2": "37",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A437",
    "comment": "do error #X then warm start",
    "parent": "do_overflow_error_th",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_overflow_error_th)"
  },
  {
    "addr": "B983",
    "hex1": "A2",
    "hex2": "25",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$25",
    "comment": "set the offset to FACtemp",
    "desc": "shift FCAtemp << A+8 times",
    "parent": "this",
    "entry": true,
    "label": "shift_fcatemp_a8_tim"
  },
  {
    "addr": "B985",
    "hex1": "B4",
    "hex2": "04",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$04,X",
    "comment": "get FACX mantissa 4",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B987",
    "hex1": "84",
    "hex2": "70",
    "hex3": null,
    "opcode": "STY",
    "argument": "$70",
    "comment": "save as FAC1 rounding byte",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B989",
    "hex1": "B4",
    "hex2": "03",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$03,X",
    "comment": "get FACX mantissa 3",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B98B",
    "hex1": "94",
    "hex2": "04",
    "hex3": null,
    "opcode": "STY",
    "argument": "$04,X",
    "comment": "save FACX mantissa 4",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B98D",
    "hex1": "B4",
    "hex2": "02",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$02,X",
    "comment": "get FACX mantissa 2",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B98F",
    "hex1": "94",
    "hex2": "03",
    "hex3": null,
    "opcode": "STY",
    "argument": "$03,X",
    "comment": "save FACX mantissa 3",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B991",
    "hex1": "B4",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$01,X",
    "comment": "get FACX mantissa 1",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B993",
    "hex1": "94",
    "hex2": "02",
    "hex3": null,
    "opcode": "STY",
    "argument": "$02,X",
    "comment": "save FACX mantissa 2",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B995",
    "hex1": "A4",
    "hex2": "68",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$68",
    "comment": "get FAC1 overflow byte",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B997",
    "hex1": "94",
    "hex2": "01",
    "hex3": null,
    "opcode": "STY",
    "argument": "$01,X",
    "comment": "save FACX mantissa 1 shift FACX -A times right (> 8 shifts)",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B999",
    "hex1": "69",
    "hex2": "08",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$08",
    "comment": "add 8 to shift count",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B99B",
    "hex1": "30",
    "hex2": "E8",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$B985",
    "comment": "go do 8 shift if still -ve",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B99D",
    "hex1": "F0",
    "hex2": "E6",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B985",
    "comment": "go do 8 shift if zero",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B99F",
    "hex1": "E9",
    "hex2": "08",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$08",
    "comment": "else subtract 8 again",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9A1",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "save count to Y",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9A2",
    "hex1": "A5",
    "hex2": "70",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$70",
    "comment": "get FAC1 rounding byte",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9A4",
    "hex1": "B0",
    "hex2": "14",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$B9BA",
    "comment": "",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9A6",
    "hex1": "16",
    "hex2": "01",
    "hex3": null,
    "opcode": "ASL",
    "argument": "$01,X",
    "comment": "shift FACX mantissa 1",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9A8",
    "hex1": "90",
    "hex2": "02",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$B9AC",
    "comment": "branch if +ve",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9AA",
    "hex1": "F6",
    "hex2": "01",
    "hex3": null,
    "opcode": "INC",
    "argument": "$01,X",
    "comment": "this sets b7 eventually",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9AC",
    "hex1": "76",
    "hex2": "01",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$01,X",
    "comment": "shift FACX mantissa 1 (correct for ASL)",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9AE",
    "hex1": "76",
    "hex2": "01",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$01,X",
    "comment": "shift FACX mantissa 1 (put carry in b7) shift FACX Y times right",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9B0",
    "hex1": "76",
    "hex2": "02",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$02,X",
    "comment": "shift FACX mantissa 2",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9B2",
    "hex1": "76",
    "hex2": "03",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$03,X",
    "comment": "shift FACX mantissa 3",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9B4",
    "hex1": "76",
    "hex2": "04",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$04,X",
    "comment": "shift FACX mantissa 4",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9B6",
    "hex1": "6A",
    "hex2": "",
    "hex3": null,
    "opcode": "ROR",
    "argument": "",
    "comment": "shift FACX rounding byte",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9B7",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment exponent diff",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9B8",
    "hex1": "D0",
    "hex2": "EC",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$B9A6",
    "comment": "branch if range adjust not complete",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9BA",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "just clear it",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9BB",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "shift_fcatemp_a8_tim",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fcatemp_a8_tim)"
  },
  {
    "addr": "B9BC",
    "hex1": "81",
    "hex2": "00",
    "hex3": "00",
    "opcode": "00",
    "argument": "0",
    "comment": "1",
    "desc": "constants and series for LOG(n)",
    "parent": "this",
    "entry": true,
    "label": "constants_and_series"
  },
  {
    "addr": "B9C1",
    "hex1": "03",
    "hex2": "",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "series counter",
    "parent": "constants_and_series",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants_and_series)"
  },
  {
    "addr": "B9C2",
    "hex1": "7F",
    "hex2": "5E",
    "hex3": "56",
    "opcode": "CB",
    "argument": "9",
    "comment": ".434255942",
    "parent": "constants_and_series",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants_and_series)"
  },
  {
    "addr": "B9C7",
    "hex1": "80",
    "hex2": "13",
    "hex3": "9B",
    "opcode": "0B",
    "argument": "4",
    "comment": ".576584541",
    "parent": "constants_and_series",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants_and_series)"
  },
  {
    "addr": "B9CC",
    "hex1": "80",
    "hex2": "76",
    "hex3": "38",
    "opcode": "93",
    "argument": "6",
    "comment": ".961800759",
    "parent": "constants_and_series",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants_and_series)"
  },
  {
    "addr": "B9D1",
    "hex1": "82",
    "hex2": "38",
    "hex3": "AA",
    "opcode": "3B",
    "argument": "0",
    "comment": "2.88539007",
    "parent": "constants_and_series",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants_and_series)"
  },
  {
    "addr": "B9D6",
    "hex1": "80",
    "hex2": "35",
    "hex3": "04",
    "opcode": "F3",
    "argument": "4",
    "comment": ".707106781 = 1/SQR(2)",
    "parent": "constants_and_series",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants_and_series)"
  },
  {
    "addr": "B9DB",
    "hex1": "81",
    "hex2": "35",
    "hex3": "04",
    "opcode": "F3",
    "argument": "4",
    "comment": "1.41421356 = SQR(2)",
    "parent": "constants_and_series",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants_and_series)"
  },
  {
    "addr": "B9E0",
    "hex1": "80",
    "hex2": "80",
    "hex3": "00",
    "opcode": "00",
    "argument": "0",
    "comment": "-.5",
    "parent": "constants_and_series",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants_and_series)"
  },
  {
    "addr": "B9E5",
    "hex1": "80",
    "hex2": "31",
    "hex3": "72",
    "opcode": "17",
    "argument": "8",
    "comment": ".693147181  =  LOG(2)",
    "parent": "constants_and_series",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants_and_series)"
  },
  {
    "addr": "B9EA",
    "hex1": "20",
    "hex2": "2B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC2B",
    "comment": "test sign and zero",
    "desc": "perform LOG()",
    "parent": "this",
    "entry": true,
    "label": "perform_log"
  },
  {
    "addr": "B9ED",
    "hex1": "F0",
    "hex2": "02",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$B9F1",
    "comment": "if zero do illegal quantity error then warm start",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "B9EF",
    "hex1": "10",
    "hex2": "03",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$B9F4",
    "comment": "skip error if +ve",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "B9F1",
    "hex1": "4C",
    "hex2": "48",
    "hex3": "B2",
    "opcode": "JMP",
    "argument": "$B248",
    "comment": "do illegal quantity error then warm start",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "B9F4",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "B9F6",
    "hex1": "E9",
    "hex2": "7F",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$7F",
    "comment": "normalise it",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "B9F8",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save it",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "B9F9",
    "hex1": "A9",
    "hex2": "80",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$80",
    "comment": "set exponent to zero",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "B9FB",
    "hex1": "85",
    "hex2": "61",
    "hex3": null,
    "opcode": "STA",
    "argument": "$61",
    "comment": "save FAC1 exponent",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "B9FD",
    "hex1": "A9",
    "hex2": "D6",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$D6",
    "comment": "pointer to 1/root 2 low byte",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "B9FF",
    "hex1": "A0",
    "hex2": "B9",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$B9",
    "comment": "pointer to 1/root 2 high byte",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA01",
    "hex1": "20",
    "hex2": "67",
    "hex3": "B8",
    "opcode": "JSR",
    "argument": "$B867",
    "comment": "add (AY) to FAC1 (1/root2)",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA04",
    "hex1": "A9",
    "hex2": "DB",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$DB",
    "comment": "pointer to root 2 low byte",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA06",
    "hex1": "A0",
    "hex2": "B9",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$B9",
    "comment": "pointer to root 2 high byte",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA08",
    "hex1": "20",
    "hex2": "0F",
    "hex3": "BB",
    "opcode": "JSR",
    "argument": "$BB0F",
    "comment": "convert AY and do (AY)/FAC1 (root2/(x+(1/root2)))",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA0B",
    "hex1": "A9",
    "hex2": "BC",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$BC",
    "comment": "pointer to 1 low byte",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA0D",
    "hex1": "A0",
    "hex2": "B9",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$B9",
    "comment": "pointer to 1 high byte",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA0F",
    "hex1": "20",
    "hex2": "50",
    "hex3": "B8",
    "opcode": "JSR",
    "argument": "$B850",
    "comment": "subtract FAC1 ((root2/(x+(1/root2)))-1) from (AY)",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA12",
    "hex1": "A9",
    "hex2": "C1",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$C1",
    "comment": "pointer to series for LOG(n) low byte",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA14",
    "hex1": "A0",
    "hex2": "B9",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$B9",
    "comment": "pointer to series for LOG(n) high byte",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA16",
    "hex1": "20",
    "hex2": "43",
    "hex3": "E0",
    "opcode": "JSR",
    "argument": "$E043",
    "comment": "^2 then series evaluation",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA19",
    "hex1": "A9",
    "hex2": "E0",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$E0",
    "comment": "pointer to -0.5 low byte",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA1B",
    "hex1": "A0",
    "hex2": "B9",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$B9",
    "comment": "pointer to -0.5 high byte",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA1D",
    "hex1": "20",
    "hex2": "67",
    "hex3": "B8",
    "opcode": "JSR",
    "argument": "$B867",
    "comment": "add (AY) to FAC1",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA20",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "restore FAC1 exponent",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA21",
    "hex1": "20",
    "hex2": "7E",
    "hex3": "BD",
    "opcode": "JSR",
    "argument": "$BD7E",
    "comment": "evaluate new ASCII digit",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA24",
    "hex1": "A9",
    "hex2": "E5",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$E5",
    "comment": "pointer to LOG(2) low byte",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA26",
    "hex1": "A0",
    "hex2": "B9",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$B9",
    "comment": "pointer to LOG(2) high byte",
    "parent": "perform_log",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_log)"
  },
  {
    "addr": "BA28",
    "hex1": "20",
    "hex2": "8C",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BA8C",
    "comment": "unpack memory (AY) into FAC2",
    "desc": "do convert AY, FCA1*(AY)",
    "parent": "this",
    "entry": true,
    "label": "do_convert_ay_fca1ay"
  },
  {
    "addr": "BA2B",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BA30",
    "comment": "multiply FAC1 by FAC2 ??",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA2D",
    "hex1": "4C",
    "hex2": "8B",
    "hex3": "BA",
    "opcode": "JMP",
    "argument": "$BA8B",
    "comment": "exit if zero",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA30",
    "hex1": "20",
    "hex2": "B7",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BAB7",
    "comment": "test and adjust accumulators",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA33",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA35",
    "hex1": "85",
    "hex2": "26",
    "hex3": null,
    "opcode": "STA",
    "argument": "$26",
    "comment": "clear temp mantissa 1",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA37",
    "hex1": "85",
    "hex2": "27",
    "hex3": null,
    "opcode": "STA",
    "argument": "$27",
    "comment": "clear temp mantissa 2",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA39",
    "hex1": "85",
    "hex2": "28",
    "hex3": null,
    "opcode": "STA",
    "argument": "$28",
    "comment": "clear temp mantissa 3",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA3B",
    "hex1": "85",
    "hex2": "29",
    "hex3": null,
    "opcode": "STA",
    "argument": "$29",
    "comment": "clear temp mantissa 4",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA3D",
    "hex1": "A5",
    "hex2": "70",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$70",
    "comment": "get FAC1 rounding byte",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA3F",
    "hex1": "20",
    "hex2": "59",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BA59",
    "comment": "go do shift/add FAC2",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA42",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA44",
    "hex1": "20",
    "hex2": "59",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BA59",
    "comment": "go do shift/add FAC2",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA47",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get FAC1 mantissa 3",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA49",
    "hex1": "20",
    "hex2": "59",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BA59",
    "comment": "go do shift/add FAC2",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA4C",
    "hex1": "A5",
    "hex2": "63",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$63",
    "comment": "get FAC1 mantissa 2",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA4E",
    "hex1": "20",
    "hex2": "59",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BA59",
    "comment": "go do shift/add FAC2",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA51",
    "hex1": "A5",
    "hex2": "62",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$62",
    "comment": "get FAC1 mantissa 1",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA53",
    "hex1": "20",
    "hex2": "5E",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BA5E",
    "comment": "go do shift/add FAC2",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA56",
    "hex1": "4C",
    "hex2": "8F",
    "hex3": "BB",
    "opcode": "JMP",
    "argument": "$BB8F",
    "comment": "copy temp to FAC1, normalise and return",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA59",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BA5E",
    "comment": "branch if byte <> zero",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA5B",
    "hex1": "4C",
    "hex2": "83",
    "hex3": "B9",
    "opcode": "JMP",
    "argument": "$B983",
    "comment": "shift FCAtemp << A+8 times else do shift and add",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA5E",
    "hex1": "4A",
    "hex2": "",
    "hex3": null,
    "opcode": "LSR",
    "argument": "",
    "comment": "shift byte",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA5F",
    "hex1": "09",
    "hex2": "80",
    "hex3": null,
    "opcode": "ORA",
    "argument": "#$80",
    "comment": "set top bit (mark for 8 times)",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA61",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy result",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA62",
    "hex1": "90",
    "hex2": "19",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$BA7D",
    "comment": "skip next if bit was zero",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA64",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA65",
    "hex1": "A5",
    "hex2": "29",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$29",
    "comment": "get temp mantissa 4",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA67",
    "hex1": "65",
    "hex2": "6D",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$6D",
    "comment": "add FAC2 mantissa 4",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA69",
    "hex1": "85",
    "hex2": "29",
    "hex3": null,
    "opcode": "STA",
    "argument": "$29",
    "comment": "save temp mantissa 4",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA6B",
    "hex1": "A5",
    "hex2": "28",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$28",
    "comment": "get temp mantissa 3",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA6D",
    "hex1": "65",
    "hex2": "6C",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$6C",
    "comment": "add FAC2 mantissa 3",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA6F",
    "hex1": "85",
    "hex2": "28",
    "hex3": null,
    "opcode": "STA",
    "argument": "$28",
    "comment": "save temp mantissa 3",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA71",
    "hex1": "A5",
    "hex2": "27",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$27",
    "comment": "get temp mantissa 2",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA73",
    "hex1": "65",
    "hex2": "6B",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$6B",
    "comment": "add FAC2 mantissa 2",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA75",
    "hex1": "85",
    "hex2": "27",
    "hex3": null,
    "opcode": "STA",
    "argument": "$27",
    "comment": "save temp mantissa 2",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA77",
    "hex1": "A5",
    "hex2": "26",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$26",
    "comment": "get temp mantissa 1",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA79",
    "hex1": "65",
    "hex2": "6A",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$6A",
    "comment": "add FAC2 mantissa 1",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA7B",
    "hex1": "85",
    "hex2": "26",
    "hex3": null,
    "opcode": "STA",
    "argument": "$26",
    "comment": "save temp mantissa 1",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA7D",
    "hex1": "66",
    "hex2": "26",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$26",
    "comment": "shift temp mantissa 1",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA7F",
    "hex1": "66",
    "hex2": "27",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$27",
    "comment": "shift temp mantissa 2",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA81",
    "hex1": "66",
    "hex2": "28",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$28",
    "comment": "shift temp mantissa 3",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA83",
    "hex1": "66",
    "hex2": "29",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$29",
    "comment": "shift temp mantissa 4",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA85",
    "hex1": "66",
    "hex2": "70",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$70",
    "comment": "shift temp rounding byte",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA87",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "get byte back",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA88",
    "hex1": "4A",
    "hex2": "",
    "hex3": null,
    "opcode": "LSR",
    "argument": "",
    "comment": "shift byte",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA89",
    "hex1": "D0",
    "hex2": "D6",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BA61",
    "comment": "loop if all bits not done",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA8B",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "do_convert_ay_fca1ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_convert_ay_fca1ay)"
  },
  {
    "addr": "BA8C",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save pointer low byte",
    "desc": "unpack memory (AY) into FAC2",
    "parent": "this",
    "entry": true,
    "label": "unpack_memory_ay_int"
  },
  {
    "addr": "BA8E",
    "hex1": "84",
    "hex2": "23",
    "hex3": null,
    "opcode": "STY",
    "argument": "$23",
    "comment": "save pointer high byte",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BA90",
    "hex1": "A0",
    "hex2": "04",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$04",
    "comment": "5 bytes to get (0-4)",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BA92",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get mantissa 4",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BA94",
    "hex1": "85",
    "hex2": "6D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6D",
    "comment": "save FAC2 mantissa 4",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BA96",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BA97",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get mantissa 3",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BA99",
    "hex1": "85",
    "hex2": "6C",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6C",
    "comment": "save FAC2 mantissa 3",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BA9B",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BA9C",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get mantissa 2",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BA9E",
    "hex1": "85",
    "hex2": "6B",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6B",
    "comment": "save FAC2 mantissa 2",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BAA0",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BAA1",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get mantissa 1 + sign",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BAA3",
    "hex1": "85",
    "hex2": "6E",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6E",
    "comment": "save FAC2 sign (b7)",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BAA5",
    "hex1": "45",
    "hex2": "66",
    "hex3": null,
    "opcode": "EOR",
    "argument": "$66",
    "comment": "EOR with FAC1 sign (b7)",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BAA7",
    "hex1": "85",
    "hex2": "6F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6F",
    "comment": "save sign compare (FAC1 EOR FAC2)",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BAA9",
    "hex1": "A5",
    "hex2": "6E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$6E",
    "comment": "recover FAC2 sign (b7)",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BAAB",
    "hex1": "09",
    "hex2": "80",
    "hex3": null,
    "opcode": "ORA",
    "argument": "#$80",
    "comment": "set 1xxx xxx (set normal bit)",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BAAD",
    "hex1": "85",
    "hex2": "6A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6A",
    "comment": "save FAC2 mantissa 1",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BAAF",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BAB0",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get exponent byte",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BAB2",
    "hex1": "85",
    "hex2": "69",
    "hex3": null,
    "opcode": "STA",
    "argument": "$69",
    "comment": "save FAC2 exponent",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BAB4",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BAB6",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BAB7",
    "hex1": "A5",
    "hex2": "69",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$69",
    "comment": "get FAC2 exponent",
    "desc": "test and adjust accumulators",
    "parent": "this",
    "entry": true,
    "label": "test_and_adjust_accu"
  },
  {
    "addr": "BAB9",
    "hex1": "F0",
    "hex2": "1F",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BADA",
    "comment": "branch if FAC2 = $00 (handle underflow)",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BABB",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BABC",
    "hex1": "65",
    "hex2": "61",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$61",
    "comment": "add FAC1 exponent",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BABE",
    "hex1": "90",
    "hex2": "04",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$BAC4",
    "comment": "branch if sum of exponents < $0100",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BAC0",
    "hex1": "30",
    "hex2": "1D",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$BADF",
    "comment": "do overflow error",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BAC2",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for the add",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BAC3",
    "hex1": "2C",
    "hex2": "",
    "hex3": null,
    "opcode": ".BY",
    "argument": "E $2C",
    "comment": "makes next line BIT $1410",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BAC4",
    "hex1": "10",
    "hex2": "14",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BADA",
    "comment": "if +ve go handle underflow",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BAC6",
    "hex1": "69",
    "hex2": "80",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$80",
    "comment": "adjust exponent",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BAC8",
    "hex1": "85",
    "hex2": "61",
    "hex3": null,
    "opcode": "STA",
    "argument": "$61",
    "comment": "save FAC1 exponent",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BACA",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BACF",
    "comment": "branch if not zero",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BACC",
    "hex1": "4C",
    "hex2": "FB",
    "hex3": "B8",
    "opcode": "JMP",
    "argument": "$B8FB",
    "comment": "save FAC1 sign and return",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BACF",
    "hex1": "A5",
    "hex2": "6F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$6F",
    "comment": "get sign compare (FAC1 EOR FAC2)",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BAD1",
    "hex1": "85",
    "hex2": "66",
    "hex3": null,
    "opcode": "STA",
    "argument": "$66",
    "comment": "save FAC1 sign (b7)",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BAD3",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "handle overflow and underflow",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BAD4",
    "hex1": "A5",
    "hex2": "66",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$66",
    "comment": "get FAC1 sign (b7)",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BAD6",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement it",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BAD8",
    "hex1": "30",
    "hex2": "05",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$BADF",
    "comment": "do overflow error handle underflow",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BADA",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop return address low byte",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BADB",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pop return address high byte",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BADC",
    "hex1": "4C",
    "hex2": "F7",
    "hex3": "B8",
    "opcode": "JMP",
    "argument": "$B8F7",
    "comment": "clear FAC1 exponent and sign and return",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BADF",
    "hex1": "4C",
    "hex2": "7E",
    "hex3": "B9",
    "opcode": "JMP",
    "argument": "$B97E",
    "comment": "do overflow error then warm start",
    "parent": "test_and_adjust_accu",
    "entry": false,
    "label": "n/a",
    "desc": "(part of test_and_adjust_accu)"
  },
  {
    "addr": "BAE2",
    "hex1": "20",
    "hex2": "0C",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC0C",
    "comment": "round and copy FAC1 to FAC2",
    "desc": "multiply FAC1 by 10",
    "parent": "this",
    "entry": true,
    "label": "multiply_fac1_by_10"
  },
  {
    "addr": "BAE5",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy exponent (set the flags)",
    "parent": "multiply_fac1_by_10",
    "entry": false,
    "label": "n/a",
    "desc": "(part of multiply_fac1_by_10)"
  },
  {
    "addr": "BAE6",
    "hex1": "F0",
    "hex2": "10",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BAF8",
    "comment": "exit if zero",
    "parent": "multiply_fac1_by_10",
    "entry": false,
    "label": "n/a",
    "desc": "(part of multiply_fac1_by_10)"
  },
  {
    "addr": "BAE8",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "multiply_fac1_by_10",
    "entry": false,
    "label": "n/a",
    "desc": "(part of multiply_fac1_by_10)"
  },
  {
    "addr": "BAE9",
    "hex1": "69",
    "hex2": "02",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$02",
    "comment": "add two to exponent (*4)",
    "parent": "multiply_fac1_by_10",
    "entry": false,
    "label": "n/a",
    "desc": "(part of multiply_fac1_by_10)"
  },
  {
    "addr": "BAEB",
    "hex1": "B0",
    "hex2": "F2",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$BADF",
    "comment": "do overflow error if > $FF FAC1 = (FAC1 + FAC2) * 2",
    "parent": "multiply_fac1_by_10",
    "entry": false,
    "label": "n/a",
    "desc": "(part of multiply_fac1_by_10)"
  },
  {
    "addr": "BAED",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "clear byte",
    "parent": "multiply_fac1_by_10",
    "entry": false,
    "label": "n/a",
    "desc": "(part of multiply_fac1_by_10)"
  },
  {
    "addr": "BAEF",
    "hex1": "86",
    "hex2": "6F",
    "hex3": null,
    "opcode": "STX",
    "argument": "$6F",
    "comment": "clear sign compare (FAC1 EOR FAC2)",
    "parent": "multiply_fac1_by_10",
    "entry": false,
    "label": "n/a",
    "desc": "(part of multiply_fac1_by_10)"
  },
  {
    "addr": "BAF1",
    "hex1": "20",
    "hex2": "77",
    "hex3": "B8",
    "opcode": "JSR",
    "argument": "$B877",
    "comment": "add FAC2 to FAC1 (*5)",
    "parent": "multiply_fac1_by_10",
    "entry": false,
    "label": "n/a",
    "desc": "(part of multiply_fac1_by_10)"
  },
  {
    "addr": "BAF4",
    "hex1": "E6",
    "hex2": "61",
    "hex3": null,
    "opcode": "INC",
    "argument": "$61",
    "comment": "increment FAC1 exponent (*10)",
    "parent": "multiply_fac1_by_10",
    "entry": false,
    "label": "n/a",
    "desc": "(part of multiply_fac1_by_10)"
  },
  {
    "addr": "BAF6",
    "hex1": "F0",
    "hex2": "E7",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BADF",
    "comment": "if exponent now zero go do overflow error",
    "parent": "multiply_fac1_by_10",
    "entry": false,
    "label": "n/a",
    "desc": "(part of multiply_fac1_by_10)"
  },
  {
    "addr": "BAF8",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "multiply_fac1_by_10",
    "entry": false,
    "label": "n/a",
    "desc": "(part of multiply_fac1_by_10)"
  },
  {
    "addr": "BAF9",
    "hex1": "84",
    "hex2": "20",
    "hex3": "00",
    "opcode": "00",
    "argument": "0",
    "comment": "10",
    "desc": "10 as a floating value",
    "parent": "this",
    "entry": true,
    "label": "10_as_a_floating_val"
  },
  {
    "addr": "BAFE",
    "hex1": "20",
    "hex2": "0C",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC0C",
    "comment": "round and copy FAC1 to FAC2",
    "desc": "divide FAC1 by 10",
    "parent": "this",
    "entry": true,
    "label": "divide_fac1_by_10"
  },
  {
    "addr": "BB01",
    "hex1": "A9",
    "hex2": "F9",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$F9",
    "comment": "set 10 pointer low byte",
    "parent": "divide_fac1_by_10",
    "entry": false,
    "label": "n/a",
    "desc": "(part of divide_fac1_by_10)"
  },
  {
    "addr": "BB03",
    "hex1": "A0",
    "hex2": "BA",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$BA",
    "comment": "set 10 pointer high byte",
    "parent": "divide_fac1_by_10",
    "entry": false,
    "label": "n/a",
    "desc": "(part of divide_fac1_by_10)"
  },
  {
    "addr": "BB05",
    "hex1": "A2",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$00",
    "comment": "clear sign",
    "parent": "divide_fac1_by_10",
    "entry": false,
    "label": "n/a",
    "desc": "(part of divide_fac1_by_10)"
  },
  {
    "addr": "BB07",
    "hex1": "86",
    "hex2": "6F",
    "hex3": null,
    "opcode": "STX",
    "argument": "$6F",
    "comment": "save sign compare (FAC1 EOR FAC2)",
    "desc": "divide by (AY) (X=sign)",
    "parent": "this",
    "entry": true,
    "label": "divide_by_ay_xsign"
  },
  {
    "addr": "BB09",
    "hex1": "20",
    "hex2": "A2",
    "hex3": "BB",
    "opcode": "JSR",
    "argument": "$BBA2",
    "comment": "unpack memory (AY) into FAC1",
    "parent": "divide_by_ay_xsign",
    "entry": false,
    "label": "n/a",
    "desc": "(part of divide_by_ay_xsign)"
  },
  {
    "addr": "BB0C",
    "hex1": "4C",
    "hex2": "12",
    "hex3": "BB",
    "opcode": "JMP",
    "argument": "$BB12",
    "comment": "do FAC2/FAC1 Perform divide-by",
    "parent": "divide_by_ay_xsign",
    "entry": false,
    "label": "n/a",
    "desc": "(part of divide_by_ay_xsign)"
  },
  {
    "addr": "BB0F",
    "hex1": "20",
    "hex2": "8C",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BA8C",
    "comment": "unpack memory (AY) into FAC2",
    "desc": "convert AY and do (AY)/FAC1",
    "parent": "this",
    "entry": true,
    "label": "convert_ay_and_do_ay"
  },
  {
    "addr": "BB12",
    "hex1": "F0",
    "hex2": "76",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BB8A",
    "comment": "if zero go do /0 error",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB14",
    "hex1": "20",
    "hex2": "1B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC1B",
    "comment": "round FAC1",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB17",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB19",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB1A",
    "hex1": "E5",
    "hex2": "61",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$61",
    "comment": "subtract FAC1 exponent (2s complement)",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB1C",
    "hex1": "85",
    "hex2": "61",
    "hex3": null,
    "opcode": "STA",
    "argument": "$61",
    "comment": "save FAC1 exponent",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB1E",
    "hex1": "20",
    "hex2": "B7",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BAB7",
    "comment": "test and adjust accumulators",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB21",
    "hex1": "E6",
    "hex2": "61",
    "hex3": null,
    "opcode": "INC",
    "argument": "$61",
    "comment": "increment FAC1 exponent",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB23",
    "hex1": "F0",
    "hex2": "BA",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BADF",
    "comment": "if zero do overflow error",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB25",
    "hex1": "A2",
    "hex2": "FC",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$FC",
    "comment": "set index to FAC temp",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB27",
    "hex1": "A9",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$01",
    "comment": "set byte",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB29",
    "hex1": "A4",
    "hex2": "6A",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$6A",
    "comment": "get FAC2 mantissa 1",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB2B",
    "hex1": "C4",
    "hex2": "62",
    "hex3": null,
    "opcode": "CPY",
    "argument": "$62",
    "comment": "compare FAC1 mantissa 1",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB2D",
    "hex1": "D0",
    "hex2": "10",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BB3F",
    "comment": "branch if <>",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB2F",
    "hex1": "A4",
    "hex2": "6B",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$6B",
    "comment": "get FAC2 mantissa 2",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB31",
    "hex1": "C4",
    "hex2": "63",
    "hex3": null,
    "opcode": "CPY",
    "argument": "$63",
    "comment": "compare FAC1 mantissa 2",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB33",
    "hex1": "D0",
    "hex2": "0A",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BB3F",
    "comment": "branch if <>",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB35",
    "hex1": "A4",
    "hex2": "6C",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$6C",
    "comment": "get FAC2 mantissa 3",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB37",
    "hex1": "C4",
    "hex2": "64",
    "hex3": null,
    "opcode": "CPY",
    "argument": "$64",
    "comment": "compare FAC1 mantissa 3",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB39",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BB3F",
    "comment": "branch if <>",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB3B",
    "hex1": "A4",
    "hex2": "6D",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$6D",
    "comment": "get FAC2 mantissa 4",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB3D",
    "hex1": "C4",
    "hex2": "65",
    "hex3": null,
    "opcode": "CPY",
    "argument": "$65",
    "comment": "compare FAC1 mantissa 4",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB3F",
    "hex1": "08",
    "hex2": "",
    "hex3": null,
    "opcode": "PHP",
    "argument": "",
    "comment": "save FAC2-FAC1 compare status",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB40",
    "hex1": "2A",
    "hex2": "",
    "hex3": null,
    "opcode": "ROL",
    "argument": "",
    "comment": "shift byte",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB41",
    "hex1": "90",
    "hex2": "09",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$BB4C",
    "comment": "skip next if no carry",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB43",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment index to FAC temp",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB44",
    "hex1": "95",
    "hex2": "29",
    "hex3": null,
    "opcode": "STA",
    "argument": "$29,X",
    "comment": "",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB46",
    "hex1": "F0",
    "hex2": "32",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BB7A",
    "comment": "",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB48",
    "hex1": "10",
    "hex2": "34",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BB7E",
    "comment": "",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB4A",
    "hex1": "A9",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$01",
    "comment": "",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB4C",
    "hex1": "28",
    "hex2": "",
    "hex3": null,
    "opcode": "PLP",
    "argument": "",
    "comment": "restore FAC2-FAC1 compare status",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB4D",
    "hex1": "B0",
    "hex2": "0E",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$BB5D",
    "comment": "if FAC2 >= FAC1 then do subtract FAC2 = FAC2*2",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB4F",
    "hex1": "06",
    "hex2": "6D",
    "hex3": null,
    "opcode": "ASL",
    "argument": "$6D",
    "comment": "shift FAC2 mantissa 4",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB51",
    "hex1": "26",
    "hex2": "6C",
    "hex3": null,
    "opcode": "ROL",
    "argument": "$6C",
    "comment": "shift FAC2 mantissa 3",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB53",
    "hex1": "26",
    "hex2": "6B",
    "hex3": null,
    "opcode": "ROL",
    "argument": "$6B",
    "comment": "shift FAC2 mantissa 2",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB55",
    "hex1": "26",
    "hex2": "6A",
    "hex3": null,
    "opcode": "ROL",
    "argument": "$6A",
    "comment": "shift FAC2 mantissa 1",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB57",
    "hex1": "B0",
    "hex2": "E6",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$BB3F",
    "comment": "loop with no compare",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB59",
    "hex1": "30",
    "hex2": "CE",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$BB29",
    "comment": "loop with compare",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB5B",
    "hex1": "10",
    "hex2": "E2",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BB3F",
    "comment": "loop with no compare, branch always",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB5D",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "save FAC2-FAC1 compare status",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB5E",
    "hex1": "A5",
    "hex2": "6D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$6D",
    "comment": "get FAC2 mantissa 4",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB60",
    "hex1": "E5",
    "hex2": "65",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$65",
    "comment": "subtract FAC1 mantissa 4",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB62",
    "hex1": "85",
    "hex2": "6D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6D",
    "comment": "save FAC2 mantissa 4",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB64",
    "hex1": "A5",
    "hex2": "6C",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$6C",
    "comment": "get FAC2 mantissa 3",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB66",
    "hex1": "E5",
    "hex2": "64",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$64",
    "comment": "subtract FAC1 mantissa 3",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB68",
    "hex1": "85",
    "hex2": "6C",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6C",
    "comment": "save FAC2 mantissa 3",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB6A",
    "hex1": "A5",
    "hex2": "6B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$6B",
    "comment": "get FAC2 mantissa 2",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB6C",
    "hex1": "E5",
    "hex2": "63",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$63",
    "comment": "subtract FAC1 mantissa 2",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB6E",
    "hex1": "85",
    "hex2": "6B",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6B",
    "comment": "save FAC2 mantissa 2",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB70",
    "hex1": "A5",
    "hex2": "6A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$6A",
    "comment": "get FAC2 mantissa 1",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB72",
    "hex1": "E5",
    "hex2": "62",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$62",
    "comment": "subtract FAC1 mantissa 1",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB74",
    "hex1": "85",
    "hex2": "6A",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6A",
    "comment": "save FAC2 mantissa 1",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB76",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "restore FAC2-FAC1 compare status",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB77",
    "hex1": "4C",
    "hex2": "4F",
    "hex3": "BB",
    "opcode": "JMP",
    "argument": "$BB4F",
    "comment": "",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB7A",
    "hex1": "A9",
    "hex2": "40",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$40",
    "comment": "",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB7C",
    "hex1": "D0",
    "hex2": "CE",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BB4C",
    "comment": "branch always do A<<6, save as FAC1 rounding byte, normalise and return",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB7E",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB7F",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB80",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB81",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB82",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB83",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB84",
    "hex1": "85",
    "hex2": "70",
    "hex3": null,
    "opcode": "STA",
    "argument": "$70",
    "comment": "save FAC1 rounding byte",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB86",
    "hex1": "28",
    "hex2": "",
    "hex3": null,
    "opcode": "PLP",
    "argument": "",
    "comment": "dump FAC2-FAC1 compare status",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB87",
    "hex1": "4C",
    "hex2": "8F",
    "hex3": "BB",
    "opcode": "JMP",
    "argument": "$BB8F",
    "comment": "copy temp to FAC1, normalise and return do \"Divide by zero\" error",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB8A",
    "hex1": "A2",
    "hex2": "14",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$14",
    "comment": "error $14, divide by zero error",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB8C",
    "hex1": "4C",
    "hex2": "37",
    "hex3": "A4",
    "opcode": "JMP",
    "argument": "$A437",
    "comment": "do error #X then warm start",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB8F",
    "hex1": "A5",
    "hex2": "26",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$26",
    "comment": "get temp mantissa 1",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB91",
    "hex1": "85",
    "hex2": "62",
    "hex3": null,
    "opcode": "STA",
    "argument": "$62",
    "comment": "save FAC1 mantissa 1",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB93",
    "hex1": "A5",
    "hex2": "27",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$27",
    "comment": "get temp mantissa 2",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB95",
    "hex1": "85",
    "hex2": "63",
    "hex3": null,
    "opcode": "STA",
    "argument": "$63",
    "comment": "save FAC1 mantissa 2",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB97",
    "hex1": "A5",
    "hex2": "28",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$28",
    "comment": "get temp mantissa 3",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB99",
    "hex1": "85",
    "hex2": "64",
    "hex3": null,
    "opcode": "STA",
    "argument": "$64",
    "comment": "save FAC1 mantissa 3",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB9B",
    "hex1": "A5",
    "hex2": "29",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$29",
    "comment": "get temp mantissa 4",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB9D",
    "hex1": "85",
    "hex2": "65",
    "hex3": null,
    "opcode": "STA",
    "argument": "$65",
    "comment": "save FAC1 mantissa 4",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BB9F",
    "hex1": "4C",
    "hex2": "D7",
    "hex3": "B8",
    "opcode": "JMP",
    "argument": "$B8D7",
    "comment": "normalise FAC1 and return",
    "parent": "convert_ay_and_do_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_ay_and_do_ay)"
  },
  {
    "addr": "BBA2",
    "hex1": "85",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "$22",
    "comment": "save pointer low byte",
    "desc": "unpack memory (AY) into FAC1",
    "parent": "this",
    "entry": true,
    "label": "unpack_memory_ay_int"
  },
  {
    "addr": "BBA4",
    "hex1": "84",
    "hex2": "23",
    "hex3": null,
    "opcode": "STY",
    "argument": "$23",
    "comment": "save pointer high byte",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBA6",
    "hex1": "A0",
    "hex2": "04",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$04",
    "comment": "5 bytes to do",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBA8",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get fifth byte",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBAA",
    "hex1": "85",
    "hex2": "65",
    "hex3": null,
    "opcode": "STA",
    "argument": "$65",
    "comment": "save FAC1 mantissa 4",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBAC",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBAD",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get fourth byte",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBAF",
    "hex1": "85",
    "hex2": "64",
    "hex3": null,
    "opcode": "STA",
    "argument": "$64",
    "comment": "save FAC1 mantissa 3",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBB1",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBB2",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get third byte",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBB4",
    "hex1": "85",
    "hex2": "63",
    "hex3": null,
    "opcode": "STA",
    "argument": "$63",
    "comment": "save FAC1 mantissa 2",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBB6",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBB7",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get second byte",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBB9",
    "hex1": "85",
    "hex2": "66",
    "hex3": null,
    "opcode": "STA",
    "argument": "$66",
    "comment": "save FAC1 sign (b7)",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBBB",
    "hex1": "09",
    "hex2": "80",
    "hex3": null,
    "opcode": "ORA",
    "argument": "#$80",
    "comment": "set 1xxx xxxx (add normal bit)",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBBD",
    "hex1": "85",
    "hex2": "62",
    "hex3": null,
    "opcode": "STA",
    "argument": "$62",
    "comment": "save FAC1 mantissa 1",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBBF",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBC0",
    "hex1": "B1",
    "hex2": "22",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($22),Y",
    "comment": "get first byte (exponent)",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBC2",
    "hex1": "85",
    "hex2": "61",
    "hex3": null,
    "opcode": "STA",
    "argument": "$61",
    "comment": "save FAC1 exponent",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBC4",
    "hex1": "84",
    "hex2": "70",
    "hex3": null,
    "opcode": "STY",
    "argument": "$70",
    "comment": "clear FAC1 rounding byte",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBC6",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "unpack_memory_ay_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of unpack_memory_ay_int)"
  },
  {
    "addr": "BBC7",
    "hex1": "A2",
    "hex2": "5C",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$5C",
    "comment": "set pointer low byte",
    "desc": "pack FAC1 into $5C",
    "parent": "this",
    "entry": true,
    "label": "pack_fac1_into_5c"
  },
  {
    "addr": "BBC9",
    "hex1": "2C",
    "hex2": "",
    "hex3": null,
    "opcode": ".BY",
    "argument": "E $2C",
    "comment": "makes next line BIT $57A2",
    "parent": "pack_fac1_into_5c",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_5c)"
  },
  {
    "addr": "BBCA",
    "hex1": "A2",
    "hex2": "57",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$57",
    "comment": "set pointer low byte",
    "desc": "pack FAC1 into $57",
    "parent": "this",
    "entry": true,
    "label": "pack_fac1_into_57"
  },
  {
    "addr": "BBCC",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "set pointer high byte",
    "parent": "pack_fac1_into_57",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_57)"
  },
  {
    "addr": "BBCE",
    "hex1": "F0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BBD4",
    "comment": "pack FAC1 into (XY) and return, branch always",
    "parent": "pack_fac1_into_57",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_57)"
  },
  {
    "addr": "BBD0",
    "hex1": "A6",
    "hex2": "49",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$49",
    "comment": "get destination pointer low byte",
    "desc": "pack FAC1 into variable pointer",
    "parent": "this",
    "entry": true,
    "label": "pack_fac1_into_varia"
  },
  {
    "addr": "BBD2",
    "hex1": "A4",
    "hex2": "4A",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$4A",
    "comment": "get destination pointer high byte",
    "parent": "pack_fac1_into_varia",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_varia)"
  },
  {
    "addr": "BBD4",
    "hex1": "20",
    "hex2": "1B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC1B",
    "comment": "round FAC1",
    "desc": "pack FAC1 into (XY)",
    "parent": "this",
    "entry": true,
    "label": "pack_fac1_into_xy"
  },
  {
    "addr": "BBD7",
    "hex1": "86",
    "hex2": "22",
    "hex3": null,
    "opcode": "STX",
    "argument": "$22",
    "comment": "save pointer low byte",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBD9",
    "hex1": "84",
    "hex2": "23",
    "hex3": null,
    "opcode": "STY",
    "argument": "$23",
    "comment": "save pointer high byte",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBDB",
    "hex1": "A0",
    "hex2": "04",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$04",
    "comment": "set index",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBDD",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBDF",
    "hex1": "91",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "($22),Y",
    "comment": "store in destination",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBE1",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBE2",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get FAC1 mantissa 3",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBE4",
    "hex1": "91",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "($22),Y",
    "comment": "store in destination",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBE6",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBE7",
    "hex1": "A5",
    "hex2": "63",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$63",
    "comment": "get FAC1 mantissa 2",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBE9",
    "hex1": "91",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "($22),Y",
    "comment": "store in destination",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBEB",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBEC",
    "hex1": "A5",
    "hex2": "66",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$66",
    "comment": "get FAC1 sign (b7)",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBEE",
    "hex1": "09",
    "hex2": "7F",
    "hex3": null,
    "opcode": "ORA",
    "argument": "#$7F",
    "comment": "set bits x111 1111",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBF0",
    "hex1": "25",
    "hex2": "62",
    "hex3": null,
    "opcode": "AND",
    "argument": "$62",
    "comment": "AND in FAC1 mantissa 1",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBF2",
    "hex1": "91",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "($22),Y",
    "comment": "store in destination",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBF4",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement index",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBF5",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBF7",
    "hex1": "91",
    "hex2": "22",
    "hex3": null,
    "opcode": "STA",
    "argument": "($22),Y",
    "comment": "store in destination",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBF9",
    "hex1": "84",
    "hex2": "70",
    "hex3": null,
    "opcode": "STY",
    "argument": "$70",
    "comment": "clear FAC1 rounding byte",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBFB",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "pack_fac1_into_xy",
    "entry": false,
    "label": "n/a",
    "desc": "(part of pack_fac1_into_xy)"
  },
  {
    "addr": "BBFC",
    "hex1": "A5",
    "hex2": "6E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$6E",
    "comment": "get FAC2 sign (b7) save FAC1 sign and copy ABS(FAC2) to FAC1",
    "desc": "copy FAC2 to FAC1",
    "parent": "this",
    "entry": true,
    "label": "copy_fac2_to_fac1"
  },
  {
    "addr": "BBFE",
    "hex1": "85",
    "hex2": "66",
    "hex3": null,
    "opcode": "STA",
    "argument": "$66",
    "comment": "save FAC1 sign (b7)",
    "parent": "copy_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_fac2_to_fac1)"
  },
  {
    "addr": "BC00",
    "hex1": "A2",
    "hex2": "05",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$05",
    "comment": "5 bytes to copy",
    "parent": "copy_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_fac2_to_fac1)"
  },
  {
    "addr": "BC02",
    "hex1": "B5",
    "hex2": "68",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$68,X",
    "comment": "get byte from FAC2,X",
    "parent": "copy_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_fac2_to_fac1)"
  },
  {
    "addr": "BC04",
    "hex1": "95",
    "hex2": "60",
    "hex3": null,
    "opcode": "STA",
    "argument": "$60,X",
    "comment": "save byte at FAC1,X",
    "parent": "copy_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_fac2_to_fac1)"
  },
  {
    "addr": "BC06",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement count",
    "parent": "copy_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_fac2_to_fac1)"
  },
  {
    "addr": "BC07",
    "hex1": "D0",
    "hex2": "F9",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BC02",
    "comment": "loop if not all done",
    "parent": "copy_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_fac2_to_fac1)"
  },
  {
    "addr": "BC09",
    "hex1": "86",
    "hex2": "70",
    "hex3": null,
    "opcode": "STX",
    "argument": "$70",
    "comment": "clear FAC1 rounding byte",
    "parent": "copy_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_fac2_to_fac1)"
  },
  {
    "addr": "BC0B",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "copy_fac2_to_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of copy_fac2_to_fac1)"
  },
  {
    "addr": "BC0C",
    "hex1": "20",
    "hex2": "1B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC1B",
    "comment": "round FAC1 copy FAC1 to FAC2",
    "desc": "round and copy FAC1 to FAC2",
    "parent": "this",
    "entry": true,
    "label": "round_and_copy_fac1_"
  },
  {
    "addr": "BC0F",
    "hex1": "A2",
    "hex2": "06",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$06",
    "comment": "6 bytes to copy",
    "parent": "round_and_copy_fac1_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_and_copy_fac1_)"
  },
  {
    "addr": "BC11",
    "hex1": "B5",
    "hex2": "60",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$60,X",
    "comment": "get byte from FAC1,X",
    "parent": "round_and_copy_fac1_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_and_copy_fac1_)"
  },
  {
    "addr": "BC13",
    "hex1": "95",
    "hex2": "68",
    "hex3": null,
    "opcode": "STA",
    "argument": "$68,X",
    "comment": "save byte at FAC2,X",
    "parent": "round_and_copy_fac1_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_and_copy_fac1_)"
  },
  {
    "addr": "BC15",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement count",
    "parent": "round_and_copy_fac1_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_and_copy_fac1_)"
  },
  {
    "addr": "BC16",
    "hex1": "D0",
    "hex2": "F9",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BC11",
    "comment": "loop if not all done",
    "parent": "round_and_copy_fac1_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_and_copy_fac1_)"
  },
  {
    "addr": "BC18",
    "hex1": "86",
    "hex2": "70",
    "hex3": null,
    "opcode": "STX",
    "argument": "$70",
    "comment": "clear FAC1 rounding byte",
    "parent": "round_and_copy_fac1_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_and_copy_fac1_)"
  },
  {
    "addr": "BC1A",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "round_and_copy_fac1_",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_and_copy_fac1_)"
  },
  {
    "addr": "BC1B",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "desc": "round FAC1",
    "parent": "this",
    "entry": true,
    "label": "round_fac1"
  },
  {
    "addr": "BC1D",
    "hex1": "F0",
    "hex2": "FB",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BC1A",
    "comment": "exit if zero",
    "parent": "round_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1)"
  },
  {
    "addr": "BC1F",
    "hex1": "06",
    "hex2": "70",
    "hex3": null,
    "opcode": "ASL",
    "argument": "$70",
    "comment": "shift FAC1 rounding byte",
    "parent": "round_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1)"
  },
  {
    "addr": "BC21",
    "hex1": "90",
    "hex2": "F7",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$BC1A",
    "comment": "exit if no overflow round FAC1 (no check)",
    "parent": "round_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1)"
  },
  {
    "addr": "BC23",
    "hex1": "20",
    "hex2": "6F",
    "hex3": "B9",
    "opcode": "JSR",
    "argument": "$B96F",
    "comment": "increment FAC1 mantissa",
    "parent": "round_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1)"
  },
  {
    "addr": "BC26",
    "hex1": "D0",
    "hex2": "F2",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BC1A",
    "comment": "branch if no overflow",
    "parent": "round_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1)"
  },
  {
    "addr": "BC28",
    "hex1": "4C",
    "hex2": "38",
    "hex3": "B9",
    "opcode": "JMP",
    "argument": "$B938",
    "comment": "nornalise FAC1 for C=1 and return",
    "parent": "round_fac1",
    "entry": false,
    "label": "n/a",
    "desc": "(part of round_fac1)"
  },
  {
    "addr": "BC2B",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "desc": "get FAC1 sign return A = $FF, Cb = 1/-ve A = $01, Cb = 0/+ve, A = $00, Cb = ?/0",
    "parent": "this",
    "entry": true,
    "label": "get_fac1_sign_return"
  },
  {
    "addr": "BC2D",
    "hex1": "F0",
    "hex2": "09",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BC38",
    "comment": "exit if zero (allready correct SGN(0)=0)",
    "parent": "get_fac1_sign_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_sign_return)"
  },
  {
    "addr": "BC2F",
    "hex1": "A5",
    "hex2": "66",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$66",
    "comment": "else get FAC1 sign (b7)",
    "desc": "return A = $FF, Cb = 1/-ve A = $01, Cb = 0/+ve no = 0 check",
    "parent": "this",
    "entry": true,
    "label": "return_a_ff_cb_1ve_a"
  },
  {
    "addr": "BC31",
    "hex1": "2A",
    "hex2": "",
    "hex3": null,
    "opcode": "ROL",
    "argument": "",
    "comment": "move sign bit to carry",
    "desc": "return A = $FF, Cb = 1/-ve A = $01, Cb = 0/+ve no = 0 check, sign in A",
    "parent": "this",
    "entry": true,
    "label": "return_a_ff_cb_1ve_a"
  },
  {
    "addr": "BC32",
    "hex1": "A9",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$FF",
    "comment": "set byte for -ve result",
    "parent": "return_a_ff_cb_1ve_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of return_a_ff_cb_1ve_a)"
  },
  {
    "addr": "BC34",
    "hex1": "B0",
    "hex2": "02",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$BC38",
    "comment": "return if sign was set (-ve)",
    "parent": "return_a_ff_cb_1ve_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of return_a_ff_cb_1ve_a)"
  },
  {
    "addr": "BC36",
    "hex1": "A9",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$01",
    "comment": "else set byte for +ve result",
    "parent": "return_a_ff_cb_1ve_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of return_a_ff_cb_1ve_a)"
  },
  {
    "addr": "BC38",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "return_a_ff_cb_1ve_a",
    "entry": false,
    "label": "n/a",
    "desc": "(part of return_a_ff_cb_1ve_a)"
  },
  {
    "addr": "BC39",
    "hex1": "20",
    "hex2": "2B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC2B",
    "comment": "get FAC1 sign, return A = $FF -ve, A = $01 +ve",
    "desc": "perform SGN()",
    "parent": "this",
    "entry": true,
    "label": "perform_sgn"
  },
  {
    "addr": "BC3C",
    "hex1": "85",
    "hex2": "62",
    "hex3": null,
    "opcode": "STA",
    "argument": "$62",
    "comment": "save FAC1 mantissa 1",
    "desc": "save A as integer byte",
    "parent": "this",
    "entry": true,
    "label": "save_a_as_integer_by"
  },
  {
    "addr": "BC3E",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A",
    "parent": "save_a_as_integer_by",
    "entry": false,
    "label": "n/a",
    "desc": "(part of save_a_as_integer_by)"
  },
  {
    "addr": "BC40",
    "hex1": "85",
    "hex2": "63",
    "hex3": null,
    "opcode": "STA",
    "argument": "$63",
    "comment": "clear FAC1 mantissa 2",
    "parent": "save_a_as_integer_by",
    "entry": false,
    "label": "n/a",
    "desc": "(part of save_a_as_integer_by)"
  },
  {
    "addr": "BC42",
    "hex1": "A2",
    "hex2": "88",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$88",
    "comment": "set exponent set exponent = X, clear FAC1 3 and 4 and normalise",
    "parent": "save_a_as_integer_by",
    "entry": false,
    "label": "n/a",
    "desc": "(part of save_a_as_integer_by)"
  },
  {
    "addr": "BC44",
    "hex1": "A5",
    "hex2": "62",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$62",
    "comment": "get FAC1 mantissa 1",
    "parent": "save_a_as_integer_by",
    "entry": false,
    "label": "n/a",
    "desc": "(part of save_a_as_integer_by)"
  },
  {
    "addr": "BC46",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement it",
    "parent": "save_a_as_integer_by",
    "entry": false,
    "label": "n/a",
    "desc": "(part of save_a_as_integer_by)"
  },
  {
    "addr": "BC48",
    "hex1": "2A",
    "hex2": "",
    "hex3": null,
    "opcode": "ROL",
    "argument": "",
    "comment": "sign bit into carry set exponent = X, clear mantissa 4 and 3 and normalise FAC1",
    "parent": "save_a_as_integer_by",
    "entry": false,
    "label": "n/a",
    "desc": "(part of save_a_as_integer_by)"
  },
  {
    "addr": "BC49",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A",
    "parent": "save_a_as_integer_by",
    "entry": false,
    "label": "n/a",
    "desc": "(part of save_a_as_integer_by)"
  },
  {
    "addr": "BC4B",
    "hex1": "85",
    "hex2": "65",
    "hex3": null,
    "opcode": "STA",
    "argument": "$65",
    "comment": "clear FAC1 mantissa 4",
    "parent": "save_a_as_integer_by",
    "entry": false,
    "label": "n/a",
    "desc": "(part of save_a_as_integer_by)"
  },
  {
    "addr": "BC4D",
    "hex1": "85",
    "hex2": "64",
    "hex3": null,
    "opcode": "STA",
    "argument": "$64",
    "comment": "clear FAC1 mantissa 3 set exponent = X and normalise FAC1",
    "parent": "save_a_as_integer_by",
    "entry": false,
    "label": "n/a",
    "desc": "(part of save_a_as_integer_by)"
  },
  {
    "addr": "BC4F",
    "hex1": "86",
    "hex2": "61",
    "hex3": null,
    "opcode": "STX",
    "argument": "$61",
    "comment": "set FAC1 exponent",
    "parent": "save_a_as_integer_by",
    "entry": false,
    "label": "n/a",
    "desc": "(part of save_a_as_integer_by)"
  },
  {
    "addr": "BC51",
    "hex1": "85",
    "hex2": "70",
    "hex3": null,
    "opcode": "STA",
    "argument": "$70",
    "comment": "clear FAC1 rounding byte",
    "parent": "save_a_as_integer_by",
    "entry": false,
    "label": "n/a",
    "desc": "(part of save_a_as_integer_by)"
  },
  {
    "addr": "BC53",
    "hex1": "85",
    "hex2": "66",
    "hex3": null,
    "opcode": "STA",
    "argument": "$66",
    "comment": "clear FAC1 sign (b7)",
    "parent": "save_a_as_integer_by",
    "entry": false,
    "label": "n/a",
    "desc": "(part of save_a_as_integer_by)"
  },
  {
    "addr": "BC55",
    "hex1": "4C",
    "hex2": "D2",
    "hex3": "B8",
    "opcode": "JMP",
    "argument": "$B8D2",
    "comment": "do ABS and normalise FAC1",
    "parent": "save_a_as_integer_by",
    "entry": false,
    "label": "n/a",
    "desc": "(part of save_a_as_integer_by)"
  },
  {
    "addr": "BC58",
    "hex1": "46",
    "hex2": "66",
    "hex3": null,
    "opcode": "LSR",
    "argument": "$66",
    "comment": "clear FAC1 sign, put zero in b7",
    "desc": "perform ABS()",
    "parent": "this",
    "entry": true,
    "label": "perform_abs"
  },
  {
    "addr": "BC5A",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "perform_abs",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_abs)"
  },
  {
    "addr": "BC5B",
    "hex1": "85",
    "hex2": "24",
    "hex3": null,
    "opcode": "STA",
    "argument": "$24",
    "comment": "save pointer low byte",
    "desc": "compare FAC1 with (AY) returns A=$00 if FAC1 = (AY) returns A=$01 if FAC1 > (AY) returns A=$FF if FAC1 < (AY)",
    "parent": "this",
    "entry": true,
    "label": "compare_fac1_with_ay"
  },
  {
    "addr": "BC5D",
    "hex1": "84",
    "hex2": "25",
    "hex3": null,
    "opcode": "STY",
    "argument": "$25",
    "comment": "save pointer high byte",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC5F",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC61",
    "hex1": "B1",
    "hex2": "24",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($24),Y",
    "comment": "get exponent",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC63",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC64",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy (AY) exponent to X",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC65",
    "hex1": "F0",
    "hex2": "C4",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BC2B",
    "comment": "branch if (AY) exponent=0 and get FAC1 sign A = $FF, Cb = 1/-ve A = $01, Cb = 0/+ve",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC67",
    "hex1": "B1",
    "hex2": "24",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($24),Y",
    "comment": "get (AY) mantissa 1, with sign",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC69",
    "hex1": "45",
    "hex2": "66",
    "hex3": null,
    "opcode": "EOR",
    "argument": "$66",
    "comment": "EOR FAC1 sign (b7)",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC6B",
    "hex1": "30",
    "hex2": "C2",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$BC2F",
    "comment": "if signs <> do return A = $FF, Cb = 1/-ve A = $01, Cb = 0/+ve and return",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC6D",
    "hex1": "E4",
    "hex2": "61",
    "hex3": null,
    "opcode": "CPX",
    "argument": "$61",
    "comment": "compare (AY) exponent with FAC1 exponent",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC6F",
    "hex1": "D0",
    "hex2": "21",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BC92",
    "comment": "branch if different",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC71",
    "hex1": "B1",
    "hex2": "24",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($24),Y",
    "comment": "get (AY) mantissa 1, with sign",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC73",
    "hex1": "09",
    "hex2": "80",
    "hex3": null,
    "opcode": "ORA",
    "argument": "#$80",
    "comment": "normalise top bit",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC75",
    "hex1": "C5",
    "hex2": "62",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$62",
    "comment": "compare with FAC1 mantissa 1",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC77",
    "hex1": "D0",
    "hex2": "19",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BC92",
    "comment": "branch if different",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC79",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC7A",
    "hex1": "B1",
    "hex2": "24",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($24),Y",
    "comment": "get mantissa 2",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC7C",
    "hex1": "C5",
    "hex2": "63",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$63",
    "comment": "compare with FAC1 mantissa 2",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC7E",
    "hex1": "D0",
    "hex2": "12",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BC92",
    "comment": "branch if different",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC80",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC81",
    "hex1": "B1",
    "hex2": "24",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($24),Y",
    "comment": "get mantissa 3",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC83",
    "hex1": "C5",
    "hex2": "64",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$64",
    "comment": "compare with FAC1 mantissa 3",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC85",
    "hex1": "D0",
    "hex2": "0B",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BC92",
    "comment": "branch if different",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC87",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC88",
    "hex1": "A9",
    "hex2": "7F",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$7F",
    "comment": "set for 1/2 value rounding byte",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC8A",
    "hex1": "C5",
    "hex2": "70",
    "hex3": null,
    "opcode": "CMP",
    "argument": "$70",
    "comment": "compare with FAC1 rounding byte (set carry)",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC8C",
    "hex1": "B1",
    "hex2": "24",
    "hex3": null,
    "opcode": "LDA",
    "argument": "($24),Y",
    "comment": "get mantissa 4",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC8E",
    "hex1": "E5",
    "hex2": "65",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$65",
    "comment": "subtract FAC1 mantissa 4",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC90",
    "hex1": "F0",
    "hex2": "28",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BCBA",
    "comment": "exit if mantissa 4 equal gets here if number <> FAC1",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC92",
    "hex1": "A5",
    "hex2": "66",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$66",
    "comment": "get FAC1 sign (b7)",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC94",
    "hex1": "90",
    "hex2": "02",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$BC98",
    "comment": "branch if FAC1 > (AY)",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC96",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "else toggle FAC1 sign",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC98",
    "hex1": "4C",
    "hex2": "31",
    "hex3": "BC",
    "opcode": "JMP",
    "argument": "$BC31",
    "comment": "return A = $FF, Cb = 1/-ve A = $01, Cb = 0/+ve",
    "parent": "compare_fac1_with_ay",
    "entry": false,
    "label": "n/a",
    "desc": "(part of compare_fac1_with_ay)"
  },
  {
    "addr": "BC9B",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "desc": "convert FAC1 floating to fixed",
    "parent": "this",
    "entry": true,
    "label": "convert_fac1_floatin"
  },
  {
    "addr": "BC9D",
    "hex1": "F0",
    "hex2": "4A",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BCE9",
    "comment": "if zero go clear FAC1 and return",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BC9F",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCA0",
    "hex1": "E9",
    "hex2": "A0",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$A0",
    "comment": "subtract maximum integer range exponent",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCA2",
    "hex1": "24",
    "hex2": "66",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$66",
    "comment": "test FAC1 sign (b7)",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCA4",
    "hex1": "10",
    "hex2": "09",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BCAF",
    "comment": "branch if FAC1 +ve FAC1 was -ve",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCA6",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy subtracted exponent",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCA7",
    "hex1": "A9",
    "hex2": "FF",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$FF",
    "comment": "overflow for -ve number",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCA9",
    "hex1": "85",
    "hex2": "68",
    "hex3": null,
    "opcode": "STA",
    "argument": "$68",
    "comment": "set FAC1 overflow byte",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCAB",
    "hex1": "20",
    "hex2": "4D",
    "hex3": "B9",
    "opcode": "JSR",
    "argument": "$B94D",
    "comment": "twos complement FAC1 mantissa",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCAE",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "restore subtracted exponent",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCAF",
    "hex1": "A2",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$61",
    "comment": "set index to FAC1",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCB1",
    "hex1": "C9",
    "hex2": "F9",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$F9",
    "comment": "compare exponent result",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCB3",
    "hex1": "10",
    "hex2": "06",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BCBB",
    "comment": "if < 8 shifts shift FAC1 A times right and return",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCB5",
    "hex1": "20",
    "hex2": "99",
    "hex3": "B9",
    "opcode": "JSR",
    "argument": "$B999",
    "comment": "shift FAC1 A times right (> 8 shifts)",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCB8",
    "hex1": "84",
    "hex2": "68",
    "hex3": null,
    "opcode": "STY",
    "argument": "$68",
    "comment": "clear FAC1 overflow byte",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCBA",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "convert_fac1_floatin",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_floatin)"
  },
  {
    "addr": "BCBB",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "copy shift count",
    "desc": "shift FAC1 A times right",
    "parent": "this",
    "entry": true,
    "label": "shift_fac1_a_times_r"
  },
  {
    "addr": "BCBC",
    "hex1": "A5",
    "hex2": "66",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$66",
    "comment": "get FAC1 sign (b7)",
    "parent": "shift_fac1_a_times_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fac1_a_times_r)"
  },
  {
    "addr": "BCBE",
    "hex1": "29",
    "hex2": "80",
    "hex3": null,
    "opcode": "AND",
    "argument": "#$80",
    "comment": "mask sign bit only (x000 0000)",
    "parent": "shift_fac1_a_times_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fac1_a_times_r)"
  },
  {
    "addr": "BCC0",
    "hex1": "46",
    "hex2": "62",
    "hex3": null,
    "opcode": "LSR",
    "argument": "$62",
    "comment": "shift FAC1 mantissa 1",
    "parent": "shift_fac1_a_times_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fac1_a_times_r)"
  },
  {
    "addr": "BCC2",
    "hex1": "05",
    "hex2": "62",
    "hex3": null,
    "opcode": "ORA",
    "argument": "$62",
    "comment": "OR sign in b7 FAC1 mantissa 1",
    "parent": "shift_fac1_a_times_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fac1_a_times_r)"
  },
  {
    "addr": "BCC4",
    "hex1": "85",
    "hex2": "62",
    "hex3": null,
    "opcode": "STA",
    "argument": "$62",
    "comment": "save FAC1 mantissa 1",
    "parent": "shift_fac1_a_times_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fac1_a_times_r)"
  },
  {
    "addr": "BCC6",
    "hex1": "20",
    "hex2": "B0",
    "hex3": "B9",
    "opcode": "JSR",
    "argument": "$B9B0",
    "comment": "shift FAC1 Y times right",
    "parent": "shift_fac1_a_times_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fac1_a_times_r)"
  },
  {
    "addr": "BCC9",
    "hex1": "84",
    "hex2": "68",
    "hex3": null,
    "opcode": "STY",
    "argument": "$68",
    "comment": "clear FAC1 overflow byte",
    "parent": "shift_fac1_a_times_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fac1_a_times_r)"
  },
  {
    "addr": "BCCB",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "shift_fac1_a_times_r",
    "entry": false,
    "label": "n/a",
    "desc": "(part of shift_fac1_a_times_r)"
  },
  {
    "addr": "BCCC",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "desc": "perform INT()",
    "parent": "this",
    "entry": true,
    "label": "perform_int"
  },
  {
    "addr": "BCCE",
    "hex1": "C9",
    "hex2": "A0",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$A0",
    "comment": "compare with max int",
    "parent": "perform_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_int)"
  },
  {
    "addr": "BCD0",
    "hex1": "B0",
    "hex2": "20",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$BCF2",
    "comment": "exit if >= (allready int, too big for fractional part!)",
    "parent": "perform_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_int)"
  },
  {
    "addr": "BCD2",
    "hex1": "20",
    "hex2": "9B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC9B",
    "comment": "convert FAC1 floating to fixed",
    "parent": "perform_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_int)"
  },
  {
    "addr": "BCD5",
    "hex1": "84",
    "hex2": "70",
    "hex3": null,
    "opcode": "STY",
    "argument": "$70",
    "comment": "save FAC1 rounding byte",
    "parent": "perform_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_int)"
  },
  {
    "addr": "BCD7",
    "hex1": "A5",
    "hex2": "66",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$66",
    "comment": "get FAC1 sign (b7)",
    "parent": "perform_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_int)"
  },
  {
    "addr": "BCD9",
    "hex1": "84",
    "hex2": "66",
    "hex3": null,
    "opcode": "STY",
    "argument": "$66",
    "comment": "save FAC1 sign (b7)",
    "parent": "perform_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_int)"
  },
  {
    "addr": "BCDB",
    "hex1": "49",
    "hex2": "80",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$80",
    "comment": "toggle FAC1 sign",
    "parent": "perform_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_int)"
  },
  {
    "addr": "BCDD",
    "hex1": "2A",
    "hex2": "",
    "hex3": null,
    "opcode": "ROL",
    "argument": "",
    "comment": "shift into carry",
    "parent": "perform_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_int)"
  },
  {
    "addr": "BCDE",
    "hex1": "A9",
    "hex2": "A0",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$A0",
    "comment": "set new exponent",
    "parent": "perform_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_int)"
  },
  {
    "addr": "BCE0",
    "hex1": "85",
    "hex2": "61",
    "hex3": null,
    "opcode": "STA",
    "argument": "$61",
    "comment": "save FAC1 exponent",
    "parent": "perform_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_int)"
  },
  {
    "addr": "BCE2",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "perform_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_int)"
  },
  {
    "addr": "BCE4",
    "hex1": "85",
    "hex2": "07",
    "hex3": null,
    "opcode": "STA",
    "argument": "$07",
    "comment": "save FAC1 mantissa 4 for power function",
    "parent": "perform_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_int)"
  },
  {
    "addr": "BCE6",
    "hex1": "4C",
    "hex2": "D2",
    "hex3": "B8",
    "opcode": "JMP",
    "argument": "$B8D2",
    "comment": "do ABS and normalise FAC1",
    "parent": "perform_int",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_int)"
  },
  {
    "addr": "BCE9",
    "hex1": "85",
    "hex2": "62",
    "hex3": null,
    "opcode": "STA",
    "argument": "$62",
    "comment": "clear FAC1 mantissa 1",
    "desc": "clear FAC1 and return",
    "parent": "this",
    "entry": true,
    "label": "clear_fac1_and_retur"
  },
  {
    "addr": "BCEB",
    "hex1": "85",
    "hex2": "63",
    "hex3": null,
    "opcode": "STA",
    "argument": "$63",
    "comment": "clear FAC1 mantissa 2",
    "parent": "clear_fac1_and_retur",
    "entry": false,
    "label": "n/a",
    "desc": "(part of clear_fac1_and_retur)"
  },
  {
    "addr": "BCED",
    "hex1": "85",
    "hex2": "64",
    "hex3": null,
    "opcode": "STA",
    "argument": "$64",
    "comment": "clear FAC1 mantissa 3",
    "parent": "clear_fac1_and_retur",
    "entry": false,
    "label": "n/a",
    "desc": "(part of clear_fac1_and_retur)"
  },
  {
    "addr": "BCEF",
    "hex1": "85",
    "hex2": "65",
    "hex3": null,
    "opcode": "STA",
    "argument": "$65",
    "comment": "clear FAC1 mantissa 4",
    "parent": "clear_fac1_and_retur",
    "entry": false,
    "label": "n/a",
    "desc": "(part of clear_fac1_and_retur)"
  },
  {
    "addr": "BCF1",
    "hex1": "A8",
    "hex2": "",
    "hex3": null,
    "opcode": "TAY",
    "argument": "",
    "comment": "clear Y",
    "parent": "clear_fac1_and_retur",
    "entry": false,
    "label": "n/a",
    "desc": "(part of clear_fac1_and_retur)"
  },
  {
    "addr": "BCF2",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "clear_fac1_and_retur",
    "entry": false,
    "label": "n/a",
    "desc": "(part of clear_fac1_and_retur)"
  },
  {
    "addr": "BCF3",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear Y",
    "desc": "get FAC1 from string",
    "parent": "this",
    "entry": true,
    "label": "get_fac1_from_string"
  },
  {
    "addr": "BCF5",
    "hex1": "A2",
    "hex2": "0A",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$0A",
    "comment": "set index",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BCF7",
    "hex1": "94",
    "hex2": "5D",
    "hex3": null,
    "opcode": "STY",
    "argument": "$5D,X",
    "comment": "clear byte",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BCF9",
    "hex1": "CA",
    "hex2": "",
    "hex3": null,
    "opcode": "DEX",
    "argument": "",
    "comment": "decrement index",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BCFA",
    "hex1": "10",
    "hex2": "FB",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BCF7",
    "comment": "loop until numexp to negnum (and FAC1) = $00",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BCFC",
    "hex1": "90",
    "hex2": "0F",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$BD0D",
    "comment": "branch if first character is numeric",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BCFE",
    "hex1": "C9",
    "hex2": "2D",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$2D",
    "comment": "else compare with \"-\"",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD00",
    "hex1": "D0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BD06",
    "comment": "branch if not \"-\"",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD02",
    "hex1": "86",
    "hex2": "67",
    "hex3": null,
    "opcode": "STX",
    "argument": "$67",
    "comment": "set flag for -ve n (negnum = $FF)",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD04",
    "hex1": "F0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BD0A",
    "comment": "branch always",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD06",
    "hex1": "C9",
    "hex2": "2B",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$2B",
    "comment": "else compare with \"+\"",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD08",
    "hex1": "D0",
    "hex2": "05",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BD0F",
    "comment": "branch if not \"+\"",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD0A",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD0D",
    "hex1": "90",
    "hex2": "5B",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$BD6A",
    "comment": "branch if numeric character",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD0F",
    "hex1": "C9",
    "hex2": "2E",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$2E",
    "comment": "else compare with \".\"",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD11",
    "hex1": "F0",
    "hex2": "2E",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BD41",
    "comment": "branch if \".\"",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD13",
    "hex1": "C9",
    "hex2": "45",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$45",
    "comment": "else compare with \"E\"",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD15",
    "hex1": "D0",
    "hex2": "30",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BD47",
    "comment": "branch if not \"E\" was \"E\" so evaluate exponential part",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD17",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD1A",
    "hex1": "90",
    "hex2": "17",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$BD33",
    "comment": "branch if numeric character",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD1C",
    "hex1": "C9",
    "hex2": "AB",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$AB",
    "comment": "else compare with token for -",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD1E",
    "hex1": "F0",
    "hex2": "0E",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BD2E",
    "comment": "branch if token for -",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD20",
    "hex1": "C9",
    "hex2": "2D",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$2D",
    "comment": "else compare with \"-\"",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD22",
    "hex1": "F0",
    "hex2": "0A",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BD2E",
    "comment": "branch if \"-\"",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD24",
    "hex1": "C9",
    "hex2": "AA",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$AA",
    "comment": "else compare with token for +",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD26",
    "hex1": "F0",
    "hex2": "08",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BD30",
    "comment": "branch if token for +",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD28",
    "hex1": "C9",
    "hex2": "2B",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$2B",
    "comment": "else compare with \"+\"",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD2A",
    "hex1": "F0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BD30",
    "comment": "branch if \"+\"",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD2C",
    "hex1": "D0",
    "hex2": "07",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BD35",
    "comment": "branch always",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD2E",
    "hex1": "66",
    "hex2": "60",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$60",
    "comment": "set exponent -ve flag (C, which=1, into b7)",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD30",
    "hex1": "20",
    "hex2": "73",
    "hex3": "00",
    "opcode": "JSR",
    "argument": "$0073",
    "comment": "increment and scan memory",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD33",
    "hex1": "90",
    "hex2": "5C",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$BD91",
    "comment": "branch if numeric character",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD35",
    "hex1": "24",
    "hex2": "60",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$60",
    "comment": "test exponent -ve flag",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD37",
    "hex1": "10",
    "hex2": "0E",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BD47",
    "comment": "if +ve go evaluate exponent else do exponent = -exponent",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD39",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear result",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD3B",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD3C",
    "hex1": "E5",
    "hex2": "5E",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$5E",
    "comment": "subtract exponent byte",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD3E",
    "hex1": "4C",
    "hex2": "49",
    "hex3": "BD",
    "opcode": "JMP",
    "argument": "$BD49",
    "comment": "go evaluate exponent",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD41",
    "hex1": "66",
    "hex2": "5F",
    "hex3": null,
    "opcode": "ROR",
    "argument": "$5F",
    "comment": "set decimal point flag",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD43",
    "hex1": "24",
    "hex2": "5F",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$5F",
    "comment": "test decimal point flag",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD45",
    "hex1": "50",
    "hex2": "C3",
    "hex3": null,
    "opcode": "BVC",
    "argument": "$BD0A",
    "comment": "branch if only one decimal point so far evaluate exponent",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD47",
    "hex1": "A5",
    "hex2": "5E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$5E",
    "comment": "get exponent count byte",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD49",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD4A",
    "hex1": "E5",
    "hex2": "5D",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$5D",
    "comment": "subtract numerator exponent",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD4C",
    "hex1": "85",
    "hex2": "5E",
    "hex3": null,
    "opcode": "STA",
    "argument": "$5E",
    "comment": "save exponent count byte",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD4E",
    "hex1": "F0",
    "hex2": "12",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BD62",
    "comment": "branch if no adjustment",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD50",
    "hex1": "10",
    "hex2": "09",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BD5B",
    "comment": "else if +ve go do FAC1*10^expcnt else go do FAC1/10^(0-expcnt)",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD52",
    "hex1": "20",
    "hex2": "FE",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BAFE",
    "comment": "divide FAC1 by 10",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD55",
    "hex1": "E6",
    "hex2": "5E",
    "hex3": null,
    "opcode": "INC",
    "argument": "$5E",
    "comment": "increment exponent count byte",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD57",
    "hex1": "D0",
    "hex2": "F9",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BD52",
    "comment": "loop until all done",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD59",
    "hex1": "F0",
    "hex2": "07",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BD62",
    "comment": "branch always",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD5B",
    "hex1": "20",
    "hex2": "E2",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BAE2",
    "comment": "multiply FAC1 by 10",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD5E",
    "hex1": "C6",
    "hex2": "5E",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$5E",
    "comment": "decrement exponent count byte",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD60",
    "hex1": "D0",
    "hex2": "F9",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BD5B",
    "comment": "loop until all done",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD62",
    "hex1": "A5",
    "hex2": "67",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$67",
    "comment": "get -ve flag",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD64",
    "hex1": "30",
    "hex2": "01",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$BD67",
    "comment": "if -ve do - FAC1 and return",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD66",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "get_fac1_from_string",
    "entry": false,
    "label": "n/a",
    "desc": "(part of get_fac1_from_string)"
  },
  {
    "addr": "BD67",
    "hex1": "4C",
    "hex2": "B4",
    "hex3": "BF",
    "opcode": "JMP",
    "argument": "$BFB4",
    "comment": "do - FAC1 do unsigned FAC1*10+number",
    "desc": "do - FAC1 and return",
    "parent": "this",
    "entry": true,
    "label": "do_fac1_and_return"
  },
  {
    "addr": "BD6A",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save character",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD6B",
    "hex1": "24",
    "hex2": "5F",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$5F",
    "comment": "test decimal point flag",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD6D",
    "hex1": "10",
    "hex2": "02",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BD71",
    "comment": "skip exponent increment if not set",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD6F",
    "hex1": "E6",
    "hex2": "5D",
    "hex3": null,
    "opcode": "INC",
    "argument": "$5D",
    "comment": "else increment number exponent",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD71",
    "hex1": "20",
    "hex2": "E2",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BAE2",
    "comment": "multiply FAC1 by 10",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD74",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "restore character",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD75",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD76",
    "hex1": "E9",
    "hex2": "30",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$30",
    "comment": "convert to binary",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD78",
    "hex1": "20",
    "hex2": "7E",
    "hex3": "BD",
    "opcode": "JSR",
    "argument": "$BD7E",
    "comment": "evaluate new ASCII digit",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD7B",
    "hex1": "4C",
    "hex2": "0A",
    "hex3": "BD",
    "opcode": "JMP",
    "argument": "$BD0A",
    "comment": "go do next character evaluate new ASCII digit multiply FAC1 by 10 then (ABS) add in new digit",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD7E",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": "save digit",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD7F",
    "hex1": "20",
    "hex2": "0C",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC0C",
    "comment": "round and copy FAC1 to FAC2",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD82",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "restore digit",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD83",
    "hex1": "20",
    "hex2": "3C",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC3C",
    "comment": "save A as integer byte",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD86",
    "hex1": "A5",
    "hex2": "6E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$6E",
    "comment": "get FAC2 sign (b7)",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD88",
    "hex1": "45",
    "hex2": "66",
    "hex3": null,
    "opcode": "EOR",
    "argument": "$66",
    "comment": "toggle with FAC1 sign (b7)",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD8A",
    "hex1": "85",
    "hex2": "6F",
    "hex3": null,
    "opcode": "STA",
    "argument": "$6F",
    "comment": "save sign compare (FAC1 EOR FAC2)",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD8C",
    "hex1": "A6",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD8E",
    "hex1": "4C",
    "hex2": "6A",
    "hex3": "B8",
    "opcode": "JMP",
    "argument": "$B86A",
    "comment": "add FAC2 to FAC1 and return evaluate next character of exponential part of number",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD91",
    "hex1": "A5",
    "hex2": "5E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$5E",
    "comment": "get exponent count byte",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD93",
    "hex1": "C9",
    "hex2": "0A",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$0A",
    "comment": "compare with 10 decimal",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD95",
    "hex1": "90",
    "hex2": "09",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$BDA0",
    "comment": "branch if less",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD97",
    "hex1": "A9",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$64",
    "comment": "make all -ve exponents = -100 decimal (causes underflow)",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD99",
    "hex1": "24",
    "hex2": "60",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$60",
    "comment": "test exponent -ve flag",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD9B",
    "hex1": "30",
    "hex2": "11",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$BDAE",
    "comment": "branch if -ve",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BD9D",
    "hex1": "4C",
    "hex2": "7E",
    "hex3": "B9",
    "opcode": "JMP",
    "argument": "$B97E",
    "comment": "else do overflow error then warm start",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BDA0",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "*2",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BDA1",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "*4",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BDA2",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BDA3",
    "hex1": "65",
    "hex2": "5E",
    "hex3": null,
    "opcode": "ADC",
    "argument": "$5E",
    "comment": "*5",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BDA5",
    "hex1": "0A",
    "hex2": "",
    "hex3": null,
    "opcode": "ASL",
    "argument": "",
    "comment": "*10",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BDA6",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BDA7",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "set index",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BDA9",
    "hex1": "71",
    "hex2": "7A",
    "hex3": null,
    "opcode": "ADC",
    "argument": "($7A),Y",
    "comment": "add character (will be $30 too much!)",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BDAB",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BDAC",
    "hex1": "E9",
    "hex2": "30",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$30",
    "comment": "convert character to binary",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BDAE",
    "hex1": "85",
    "hex2": "5E",
    "hex3": null,
    "opcode": "STA",
    "argument": "$5E",
    "comment": "save exponent count byte",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BDB0",
    "hex1": "4C",
    "hex2": "30",
    "hex3": "BD",
    "opcode": "JMP",
    "argument": "$BD30",
    "comment": "go get next character",
    "parent": "do_fac1_and_return",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_fac1_and_return)"
  },
  {
    "addr": "BDB3",
    "hex1": "9B",
    "hex2": "3E",
    "hex3": "BC",
    "opcode": "1F",
    "argument": "D",
    "comment": "99999999.90625, maximum value with at least one decimal",
    "desc": "limits for scientific mode",
    "parent": "this",
    "entry": true,
    "label": "limits_for_scientifi"
  },
  {
    "addr": "BDB8",
    "hex1": "9E",
    "hex2": "6E",
    "hex3": "6B",
    "opcode": "27",
    "argument": "D",
    "comment": "999999999.25, maximum value before scientific notation",
    "parent": "limits_for_scientifi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of limits_for_scientifi)"
  },
  {
    "addr": "BDBD",
    "hex1": "9E",
    "hex2": "6E",
    "hex3": "6B",
    "opcode": "28",
    "argument": "0",
    "comment": "1000000000",
    "parent": "limits_for_scientifi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of limits_for_scientifi)"
  },
  {
    "addr": "BDC2",
    "hex1": "A9",
    "hex2": "71",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$71",
    "comment": "set \" IN \" pointer low byte",
    "desc": "do \" IN \" line number message",
    "parent": "this",
    "entry": true,
    "label": "do_in_line_number_me"
  },
  {
    "addr": "BDC4",
    "hex1": "A0",
    "hex2": "A3",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$A3",
    "comment": "set \" IN \" pointer high byte",
    "parent": "do_in_line_number_me",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_in_line_number_me)"
  },
  {
    "addr": "BDC6",
    "hex1": "20",
    "hex2": "DA",
    "hex3": "BD",
    "opcode": "JSR",
    "argument": "$BDDA",
    "comment": "print null terminated string",
    "parent": "do_in_line_number_me",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_in_line_number_me)"
  },
  {
    "addr": "BDC9",
    "hex1": "A5",
    "hex2": "3A",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$3A",
    "comment": "get the current line number high byte",
    "parent": "do_in_line_number_me",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_in_line_number_me)"
  },
  {
    "addr": "BDCB",
    "hex1": "A6",
    "hex2": "39",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$39",
    "comment": "get the current line number low byte",
    "parent": "do_in_line_number_me",
    "entry": false,
    "label": "n/a",
    "desc": "(part of do_in_line_number_me)"
  },
  {
    "addr": "BDCD",
    "hex1": "85",
    "hex2": "62",
    "hex3": null,
    "opcode": "STA",
    "argument": "$62",
    "comment": "save high byte as FAC1 mantissa1",
    "desc": "print XA as unsigned integer",
    "parent": "this",
    "entry": true,
    "label": "print_xa_as_unsigned"
  },
  {
    "addr": "BDCF",
    "hex1": "86",
    "hex2": "63",
    "hex3": null,
    "opcode": "STX",
    "argument": "$63",
    "comment": "save low byte as FAC1 mantissa2",
    "parent": "print_xa_as_unsigned",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_xa_as_unsigned)"
  },
  {
    "addr": "BDD1",
    "hex1": "A2",
    "hex2": "90",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$90",
    "comment": "set exponent to 16d bits",
    "parent": "print_xa_as_unsigned",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_xa_as_unsigned)"
  },
  {
    "addr": "BDD3",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set integer is +ve flag",
    "parent": "print_xa_as_unsigned",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_xa_as_unsigned)"
  },
  {
    "addr": "BDD4",
    "hex1": "20",
    "hex2": "49",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC49",
    "comment": "set exponent = X, clear mantissa 4 and 3 and normalise FAC1",
    "parent": "print_xa_as_unsigned",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_xa_as_unsigned)"
  },
  {
    "addr": "BDD7",
    "hex1": "20",
    "hex2": "DF",
    "hex3": "BD",
    "opcode": "JSR",
    "argument": "$BDDF",
    "comment": "convert FAC1 to string",
    "parent": "print_xa_as_unsigned",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_xa_as_unsigned)"
  },
  {
    "addr": "BDDA",
    "hex1": "4C",
    "hex2": "1E",
    "hex3": "AB",
    "opcode": "JMP",
    "argument": "$AB1E",
    "comment": "print null terminated string",
    "parent": "print_xa_as_unsigned",
    "entry": false,
    "label": "n/a",
    "desc": "(part of print_xa_as_unsigned)"
  },
  {
    "addr": "BDDD",
    "hex1": "A0",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$01",
    "comment": "set index = 1",
    "desc": "convert FAC1 to ASCII string result in (AY)",
    "parent": "this",
    "entry": true,
    "label": "convert_fac1_to_asci"
  },
  {
    "addr": "BDDF",
    "hex1": "A9",
    "hex2": "20",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$20",
    "comment": "character = \" \" (assume +ve)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDE1",
    "hex1": "24",
    "hex2": "66",
    "hex3": null,
    "opcode": "BIT",
    "argument": "$66",
    "comment": "test FAC1 sign (b7)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDE3",
    "hex1": "10",
    "hex2": "02",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BDE7",
    "comment": "branch if +ve",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDE5",
    "hex1": "A9",
    "hex2": "2D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$2D",
    "comment": "else character = \"-\"",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDE7",
    "hex1": "99",
    "hex2": "FF",
    "hex3": "00",
    "opcode": "STA",
    "argument": "$00FF,Y",
    "comment": "save leading character (\" \" or \"-\")",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDEA",
    "hex1": "85",
    "hex2": "66",
    "hex3": null,
    "opcode": "STA",
    "argument": "$66",
    "comment": "save FAC1 sign (b7)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDEC",
    "hex1": "84",
    "hex2": "71",
    "hex3": null,
    "opcode": "STY",
    "argument": "$71",
    "comment": "save index",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDEE",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDEF",
    "hex1": "A9",
    "hex2": "30",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$30",
    "comment": "set character = \"0\"",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDF1",
    "hex1": "A6",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDF3",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BDF8",
    "comment": "branch if FAC1<>0 exponent was $00 so FAC1 is 0",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDF5",
    "hex1": "4C",
    "hex2": "04",
    "hex3": "BF",
    "opcode": "JMP",
    "argument": "$BF04",
    "comment": "save last character, [EOT] and exit FAC1 is some non zero value",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDF8",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear (number exponent count)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDFA",
    "hex1": "E0",
    "hex2": "80",
    "hex3": null,
    "opcode": "CPX",
    "argument": "#$80",
    "comment": "compare FAC1 exponent with $80 (<1.00000)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDFC",
    "hex1": "F0",
    "hex2": "02",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BE00",
    "comment": "branch if 0.5 <= FAC1 < 1.0",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BDFE",
    "hex1": "B0",
    "hex2": "09",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$BE09",
    "comment": "branch if FAC1=>1",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE00",
    "hex1": "A9",
    "hex2": "BD",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$BD",
    "comment": "set 1000000000 pointer low byte",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE02",
    "hex1": "A0",
    "hex2": "BD",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$BD",
    "comment": "set 1000000000 pointer high byte",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE04",
    "hex1": "20",
    "hex2": "28",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BA28",
    "comment": "do convert AY, FCA1*(AY)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE07",
    "hex1": "A9",
    "hex2": "F7",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$F7",
    "comment": "set number exponent count",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE09",
    "hex1": "85",
    "hex2": "5D",
    "hex3": null,
    "opcode": "STA",
    "argument": "$5D",
    "comment": "save number exponent count",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE0B",
    "hex1": "A9",
    "hex2": "B8",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$B8",
    "comment": "set 999999999.25 pointer low byte (max before sci note)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE0D",
    "hex1": "A0",
    "hex2": "BD",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$BD",
    "comment": "set 999999999.25 pointer high byte",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE0F",
    "hex1": "20",
    "hex2": "5B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC5B",
    "comment": "compare FAC1 with (AY)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE12",
    "hex1": "F0",
    "hex2": "1E",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BE32",
    "comment": "exit if FAC1 = (AY)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE14",
    "hex1": "10",
    "hex2": "12",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BE28",
    "comment": "go do /10 if FAC1 > (AY) FAC1 < (AY)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE16",
    "hex1": "A9",
    "hex2": "B3",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$B3",
    "comment": "set 99999999.90625 pointer low byte",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE18",
    "hex1": "A0",
    "hex2": "BD",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$BD",
    "comment": "set 99999999.90625 pointer high byte",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE1A",
    "hex1": "20",
    "hex2": "5B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC5B",
    "comment": "compare FAC1 with (AY)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE1D",
    "hex1": "F0",
    "hex2": "02",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BE21",
    "comment": "branch if FAC1 = (AY) (allow decimal places)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE1F",
    "hex1": "10",
    "hex2": "0E",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BE2F",
    "comment": "branch if FAC1 > (AY) (no decimal places) FAC1 <= (AY)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE21",
    "hex1": "20",
    "hex2": "E2",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BAE2",
    "comment": "multiply FAC1 by 10",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE24",
    "hex1": "C6",
    "hex2": "5D",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$5D",
    "comment": "decrement number exponent count",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE26",
    "hex1": "D0",
    "hex2": "EE",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BE16",
    "comment": "go test again, branch always",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE28",
    "hex1": "20",
    "hex2": "FE",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BAFE",
    "comment": "divide FAC1 by 10",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE2B",
    "hex1": "E6",
    "hex2": "5D",
    "hex3": null,
    "opcode": "INC",
    "argument": "$5D",
    "comment": "increment number exponent count",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE2D",
    "hex1": "D0",
    "hex2": "DC",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BE0B",
    "comment": "go test again, branch always now we have just the digits to do",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE2F",
    "hex1": "20",
    "hex2": "49",
    "hex3": "B8",
    "opcode": "JSR",
    "argument": "$B849",
    "comment": "add 0.5 to FAC1 (round FAC1)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE32",
    "hex1": "20",
    "hex2": "9B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC9B",
    "comment": "convert FAC1 floating to fixed",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE35",
    "hex1": "A2",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$01",
    "comment": "set default digits before dp = 1",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE37",
    "hex1": "A5",
    "hex2": "5D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$5D",
    "comment": "get number exponent count",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE39",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE3A",
    "hex1": "69",
    "hex2": "0A",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$0A",
    "comment": "up to 9 digits before point",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE3C",
    "hex1": "30",
    "hex2": "09",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$BE47",
    "comment": "if -ve then 1 digit before dp",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE3E",
    "hex1": "C9",
    "hex2": "0B",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$0B",
    "comment": "A>=$0B if n>=1E9",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE40",
    "hex1": "B0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$BE48",
    "comment": "branch if >= $0B carry is clear",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE42",
    "hex1": "69",
    "hex2": "FF",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$FF",
    "comment": "take 1 from digit count",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE44",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy to X",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE45",
    "hex1": "A9",
    "hex2": "02",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$02",
    "comment": "set exponent adjust",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE47",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE48",
    "hex1": "E9",
    "hex2": "02",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$02",
    "comment": "-2",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE4A",
    "hex1": "85",
    "hex2": "5E",
    "hex3": null,
    "opcode": "STA",
    "argument": "$5E",
    "comment": "save exponent adjust",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE4C",
    "hex1": "86",
    "hex2": "5D",
    "hex3": null,
    "opcode": "STX",
    "argument": "$5D",
    "comment": "save digits before dp count",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE4E",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy to A",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE4F",
    "hex1": "F0",
    "hex2": "02",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BE53",
    "comment": "branch if no digits before dp",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE51",
    "hex1": "10",
    "hex2": "13",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BE66",
    "comment": "branch if digits before dp",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE53",
    "hex1": "A4",
    "hex2": "71",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$71",
    "comment": "get output string index",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE55",
    "hex1": "A9",
    "hex2": "2E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$2E",
    "comment": "character \".\"",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE57",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE58",
    "hex1": "99",
    "hex2": "FF",
    "hex3": "00",
    "opcode": "STA",
    "argument": "$00FF,Y",
    "comment": "save to output string",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE5B",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE5C",
    "hex1": "F0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BE64",
    "comment": "",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE5E",
    "hex1": "A9",
    "hex2": "30",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$30",
    "comment": "character \"0\"",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE60",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment index",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE61",
    "hex1": "99",
    "hex2": "FF",
    "hex3": "00",
    "opcode": "STA",
    "argument": "$00FF,Y",
    "comment": "save to output string",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE64",
    "hex1": "84",
    "hex2": "71",
    "hex3": null,
    "opcode": "STY",
    "argument": "$71",
    "comment": "save output string index",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE66",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "clear index (point to 100,000)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE68",
    "hex1": "A2",
    "hex2": "80",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$80",
    "comment": "",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE6A",
    "hex1": "A5",
    "hex2": "65",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$65",
    "comment": "get FAC1 mantissa 4",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE6C",
    "hex1": "18",
    "hex2": "",
    "hex3": null,
    "opcode": "CLC",
    "argument": "",
    "comment": "clear carry for add",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE6D",
    "hex1": "79",
    "hex2": "19",
    "hex3": "BF",
    "opcode": "ADC",
    "argument": "$BF19,Y",
    "comment": "add byte 4, least significant",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE70",
    "hex1": "85",
    "hex2": "65",
    "hex3": null,
    "opcode": "STA",
    "argument": "$65",
    "comment": "save FAC1 mantissa4",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE72",
    "hex1": "A5",
    "hex2": "64",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$64",
    "comment": "get FAC1 mantissa 3",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE74",
    "hex1": "79",
    "hex2": "18",
    "hex3": "BF",
    "opcode": "ADC",
    "argument": "$BF18,Y",
    "comment": "add byte 3",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE77",
    "hex1": "85",
    "hex2": "64",
    "hex3": null,
    "opcode": "STA",
    "argument": "$64",
    "comment": "save FAC1 mantissa3",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE79",
    "hex1": "A5",
    "hex2": "63",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$63",
    "comment": "get FAC1 mantissa 2",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE7B",
    "hex1": "79",
    "hex2": "17",
    "hex3": "BF",
    "opcode": "ADC",
    "argument": "$BF17,Y",
    "comment": "add byte 2",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE7E",
    "hex1": "85",
    "hex2": "63",
    "hex3": null,
    "opcode": "STA",
    "argument": "$63",
    "comment": "save FAC1 mantissa2",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE80",
    "hex1": "A5",
    "hex2": "62",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$62",
    "comment": "get FAC1 mantissa 1",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE82",
    "hex1": "79",
    "hex2": "16",
    "hex3": "BF",
    "opcode": "ADC",
    "argument": "$BF16,Y",
    "comment": "add byte 1, most significant",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE85",
    "hex1": "85",
    "hex2": "62",
    "hex3": null,
    "opcode": "STA",
    "argument": "$62",
    "comment": "save FAC1 mantissa1",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE87",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment the digit, set the sign on the test sense bit",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE88",
    "hex1": "B0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$BE8E",
    "comment": "if the carry is set go test if the result was positive else the result needs to be negative",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE8A",
    "hex1": "10",
    "hex2": "DE",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BE6A",
    "comment": "not -ve so try again",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE8C",
    "hex1": "30",
    "hex2": "02",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$BE90",
    "comment": "else done so return the digit",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE8E",
    "hex1": "30",
    "hex2": "DA",
    "hex3": null,
    "opcode": "BMI",
    "argument": "$BE6A",
    "comment": "not +ve so try again else done so return the digit",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE90",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy the digit",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE91",
    "hex1": "90",
    "hex2": "04",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$BE97",
    "comment": "if Cb=0 just use it",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE93",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "else make the 2's complement ..",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE95",
    "hex1": "69",
    "hex2": "0A",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$0A",
    "comment": ".. and subtract it from 10",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE97",
    "hex1": "69",
    "hex2": "2F",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$2F",
    "comment": "add \"0\"-1 to result",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE99",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment ..",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE9A",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": ".. index to..",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE9B",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": ".. next less ..",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE9C",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": ".. power of ten",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE9D",
    "hex1": "84",
    "hex2": "47",
    "hex3": null,
    "opcode": "STY",
    "argument": "$47",
    "comment": "save current variable pointer low byte",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BE9F",
    "hex1": "A4",
    "hex2": "71",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$71",
    "comment": "get output string index",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEA1",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment output string index",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEA2",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy character to X",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEA3",
    "hex1": "29",
    "hex2": "7F",
    "hex3": null,
    "opcode": "AND",
    "argument": "#$7F",
    "comment": "mask out top bit",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEA5",
    "hex1": "99",
    "hex2": "FF",
    "hex3": "00",
    "opcode": "STA",
    "argument": "$00FF,Y",
    "comment": "save to output string",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEA8",
    "hex1": "C6",
    "hex2": "5D",
    "hex3": null,
    "opcode": "DEC",
    "argument": "$5D",
    "comment": "decrement # of characters before the dp",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEAA",
    "hex1": "D0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BEB2",
    "comment": "branch if still characters to do else output the point",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEAC",
    "hex1": "A9",
    "hex2": "2E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$2E",
    "comment": "character \".\"",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEAE",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment output string index",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEAF",
    "hex1": "99",
    "hex2": "FF",
    "hex3": "00",
    "opcode": "STA",
    "argument": "$00FF,Y",
    "comment": "save to output string",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEB2",
    "hex1": "84",
    "hex2": "71",
    "hex3": null,
    "opcode": "STY",
    "argument": "$71",
    "comment": "save output string index",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEB4",
    "hex1": "A4",
    "hex2": "47",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$47",
    "comment": "get current variable pointer low byte",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEB6",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "get character back",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEB7",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "toggle the test sense bit",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEB9",
    "hex1": "29",
    "hex2": "80",
    "hex3": null,
    "opcode": "AND",
    "argument": "#$80",
    "comment": "clear the digit",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEBB",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy it to the new digit",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEBC",
    "hex1": "C0",
    "hex2": "24",
    "hex3": null,
    "opcode": "CPY",
    "argument": "#$24",
    "comment": "compare the table index with the max for decimal numbers",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEBE",
    "hex1": "F0",
    "hex2": "04",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BEC4",
    "comment": "if at the max exit the digit loop",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEC0",
    "hex1": "C0",
    "hex2": "3C",
    "hex3": null,
    "opcode": "CPY",
    "argument": "#$3C",
    "comment": "compare the table index with the max for time",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEC2",
    "hex1": "D0",
    "hex2": "A6",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BE6A",
    "comment": "loop if not at the max now remove trailing zeroes",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEC4",
    "hex1": "A4",
    "hex2": "71",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$71",
    "comment": "restore the output string index",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEC6",
    "hex1": "B9",
    "hex2": "FF",
    "hex3": "00",
    "opcode": "LDA",
    "argument": "$00FF,Y",
    "comment": "get character from output string",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEC9",
    "hex1": "88",
    "hex2": "",
    "hex3": null,
    "opcode": "DEY",
    "argument": "",
    "comment": "decrement output string index",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BECA",
    "hex1": "C9",
    "hex2": "30",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$30",
    "comment": "compare with \"0\"",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BECC",
    "hex1": "F0",
    "hex2": "F8",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BEC6",
    "comment": "loop until non \"0\" character found",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BECE",
    "hex1": "C9",
    "hex2": "2E",
    "hex3": null,
    "opcode": "CMP",
    "argument": "#$2E",
    "comment": "compare with \".\"",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BED0",
    "hex1": "F0",
    "hex2": "01",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BED3",
    "comment": "branch if was dp restore last character",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BED2",
    "hex1": "C8",
    "hex2": "",
    "hex3": null,
    "opcode": "INY",
    "argument": "",
    "comment": "increment output string index",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BED3",
    "hex1": "A9",
    "hex2": "2B",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$2B",
    "comment": "character \"+\"",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BED5",
    "hex1": "A6",
    "hex2": "5E",
    "hex3": null,
    "opcode": "LDX",
    "argument": "$5E",
    "comment": "get exponent count",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BED7",
    "hex1": "F0",
    "hex2": "2E",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BF07",
    "comment": "if zero go set null terminator and exit exponent isn't zero so write exponent",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BED9",
    "hex1": "10",
    "hex2": "08",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BEE3",
    "comment": "branch if exponent count +ve",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEDB",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "clear A",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEDD",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEDE",
    "hex1": "E5",
    "hex2": "5E",
    "hex3": null,
    "opcode": "SBC",
    "argument": "$5E",
    "comment": "subtract exponent count adjust (convert -ve to +ve)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEE0",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "TAX",
    "argument": "",
    "comment": "copy exponent count to X",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEE1",
    "hex1": "A9",
    "hex2": "2D",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$2D",
    "comment": "character \"-\"",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEE3",
    "hex1": "99",
    "hex2": "01",
    "hex3": "01",
    "opcode": "STA",
    "argument": "$0101,Y",
    "comment": "save to output string",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEE6",
    "hex1": "A9",
    "hex2": "45",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$45",
    "comment": "character \"E\"",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEE8",
    "hex1": "99",
    "hex2": "00",
    "hex3": "01",
    "opcode": "STA",
    "argument": "$0100,Y",
    "comment": "save exponent sign to output string",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEEB",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "get exponent count back",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEEC",
    "hex1": "A2",
    "hex2": "2F",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$2F",
    "comment": "one less than \"0\" character",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEEE",
    "hex1": "38",
    "hex2": "",
    "hex3": null,
    "opcode": "SEC",
    "argument": "",
    "comment": "set carry for subtract",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEEF",
    "hex1": "E8",
    "hex2": "",
    "hex3": null,
    "opcode": "INX",
    "argument": "",
    "comment": "increment 10's character",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEF0",
    "hex1": "E9",
    "hex2": "0A",
    "hex3": null,
    "opcode": "SBC",
    "argument": "#$0A",
    "comment": "subtract 10 from exponent count",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEF2",
    "hex1": "B0",
    "hex2": "FB",
    "hex3": null,
    "opcode": "BCS",
    "argument": "$BEEF",
    "comment": "loop while still >= 0",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEF4",
    "hex1": "69",
    "hex2": "3A",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$3A",
    "comment": "add character \":\" ($30+$0A, result is 10 less that value)",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEF6",
    "hex1": "99",
    "hex2": "03",
    "hex3": "01",
    "opcode": "STA",
    "argument": "$0103,Y",
    "comment": "save to output string",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEF9",
    "hex1": "8A",
    "hex2": "",
    "hex3": null,
    "opcode": "TXA",
    "argument": "",
    "comment": "copy 10's character",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEFA",
    "hex1": "99",
    "hex2": "02",
    "hex3": "01",
    "opcode": "STA",
    "argument": "$0102,Y",
    "comment": "save to output string",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEFD",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "set null terminator",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BEFF",
    "hex1": "99",
    "hex2": "04",
    "hex3": "01",
    "opcode": "STA",
    "argument": "$0104,Y",
    "comment": "save to output string",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BF02",
    "hex1": "F0",
    "hex2": "08",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BF0C",
    "comment": "go set string pointer (AY) and exit, branch always save last character, [EOT] and exit",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BF04",
    "hex1": "99",
    "hex2": "FF",
    "hex3": "00",
    "opcode": "STA",
    "argument": "$00FF,Y",
    "comment": "save last character to output string set null terminator and exit",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BF07",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "set null terminator",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BF09",
    "hex1": "99",
    "hex2": "00",
    "hex3": "01",
    "opcode": "STA",
    "argument": "$0100,Y",
    "comment": "save after last character set string pointer (AY) and exit",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BF0C",
    "hex1": "A9",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$00",
    "comment": "set result string pointer low byte",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BF0E",
    "hex1": "A0",
    "hex2": "01",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$01",
    "comment": "set result string pointer high byte",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BF10",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "convert_fac1_to_asci",
    "entry": false,
    "label": "n/a",
    "desc": "(part of convert_fac1_to_asci)"
  },
  {
    "addr": "BF11",
    "hex1": "80",
    "hex2": "00",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "0.5, first two bytes",
    "desc": "constants",
    "parent": "this",
    "entry": true,
    "label": "constants"
  },
  {
    "addr": "BF13",
    "hex1": "00",
    "hex2": "00",
    "hex3": "00",
    "opcode": "",
    "argument": "",
    "comment": "null return for undefined variables",
    "parent": "constants",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants)"
  },
  {
    "addr": "BF16",
    "hex1": "FA",
    "hex2": "0A",
    "hex3": "1F",
    "opcode": "00",
    "argument": "",
    "comment": "-100 000 000",
    "parent": "constants",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants)"
  },
  {
    "addr": "BF1A",
    "hex1": "00",
    "hex2": "98",
    "hex3": "96",
    "opcode": "80",
    "argument": "",
    "comment": "+10 000 000",
    "parent": "constants",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants)"
  },
  {
    "addr": "BF1E",
    "hex1": "FF",
    "hex2": "F0",
    "hex3": "BD",
    "opcode": "C0",
    "argument": "",
    "comment": "-1 000 000",
    "parent": "constants",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants)"
  },
  {
    "addr": "BF22",
    "hex1": "00",
    "hex2": "01",
    "hex3": "86",
    "opcode": "A0",
    "argument": "",
    "comment": "+100 000",
    "parent": "constants",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants)"
  },
  {
    "addr": "BF26",
    "hex1": "FF",
    "hex2": "FF",
    "hex3": "D8",
    "opcode": "F0",
    "argument": "",
    "comment": "-10 000",
    "parent": "constants",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants)"
  },
  {
    "addr": "BF2A",
    "hex1": "00",
    "hex2": "00",
    "hex3": "03",
    "opcode": "E8",
    "argument": "",
    "comment": "+1 000",
    "parent": "constants",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants)"
  },
  {
    "addr": "BF2E",
    "hex1": "FF",
    "hex2": "FF",
    "hex3": "FF",
    "opcode": "9C",
    "argument": "",
    "comment": "- 100",
    "parent": "constants",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants)"
  },
  {
    "addr": "BF32",
    "hex1": "00",
    "hex2": "00",
    "hex3": "00",
    "opcode": "0A",
    "argument": "",
    "comment": "+10",
    "parent": "constants",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants)"
  },
  {
    "addr": "BF36",
    "hex1": "FF",
    "hex2": "FF",
    "hex3": "FF",
    "opcode": "FF",
    "argument": "",
    "comment": "-1",
    "parent": "constants",
    "entry": false,
    "label": "n/a",
    "desc": "(part of constants)"
  },
  {
    "addr": "BF3A",
    "hex1": "FF",
    "hex2": "DF",
    "hex3": "0A",
    "opcode": "80",
    "argument": "",
    "comment": "-2160000    10s hours",
    "desc": "jiffy counts",
    "parent": "this",
    "entry": true,
    "label": "jiffy_counts"
  },
  {
    "addr": "BF3E",
    "hex1": "00",
    "hex2": "03",
    "hex3": "4B",
    "opcode": "C0",
    "argument": "",
    "comment": "+216000        hours",
    "parent": "jiffy_counts",
    "entry": false,
    "label": "n/a",
    "desc": "(part of jiffy_counts)"
  },
  {
    "addr": "BF42",
    "hex1": "FF",
    "hex2": "FF",
    "hex3": "73",
    "opcode": "60",
    "argument": "",
    "comment": "-36000    10s mins",
    "parent": "jiffy_counts",
    "entry": false,
    "label": "n/a",
    "desc": "(part of jiffy_counts)"
  },
  {
    "addr": "BF46",
    "hex1": "00",
    "hex2": "00",
    "hex3": "0E",
    "opcode": "10",
    "argument": "",
    "comment": "+3600        mins",
    "parent": "jiffy_counts",
    "entry": false,
    "label": "n/a",
    "desc": "(part of jiffy_counts)"
  },
  {
    "addr": "BF4A",
    "hex1": "FF",
    "hex2": "FF",
    "hex3": "FD",
    "opcode": "A8",
    "argument": "",
    "comment": "-600    10s secs",
    "parent": "jiffy_counts",
    "entry": false,
    "label": "n/a",
    "desc": "(part of jiffy_counts)"
  },
  {
    "addr": "BF4E",
    "hex1": "00",
    "hex2": "00",
    "hex3": "00",
    "opcode": "3C",
    "argument": "",
    "comment": "+60        secs",
    "parent": "jiffy_counts",
    "entry": false,
    "label": "n/a",
    "desc": "(part of jiffy_counts)"
  },
  {
    "addr": "BF52",
    "hex1": "EC",
    "hex2": "",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "checksum byte",
    "desc": "not referenced",
    "parent": "this",
    "entry": true,
    "label": "not_referenced"
  },
  {
    "addr": "BF53",
    "hex1": "AA",
    "hex2": "AA",
    "hex3": "AA",
    "opcode": "AA",
    "argument": "A",
    "comment": "",
    "desc": "spare bytes, not referenced",
    "parent": "this",
    "entry": true,
    "label": "spare_bytes_not_refe"
  },
  {
    "addr": "BF58",
    "hex1": "AA",
    "hex2": "AA",
    "hex3": "AA",
    "opcode": "AA",
    "argument": "A AA AA AA",
    "comment": "",
    "parent": "spare_bytes_not_refe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of spare_bytes_not_refe)"
  },
  {
    "addr": "BF60",
    "hex1": "AA",
    "hex2": "AA",
    "hex3": "AA",
    "opcode": "AA",
    "argument": "A AA AA AA",
    "comment": "",
    "parent": "spare_bytes_not_refe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of spare_bytes_not_refe)"
  },
  {
    "addr": "BF68",
    "hex1": "AA",
    "hex2": "AA",
    "hex3": "AA",
    "opcode": "AA",
    "argument": "A AA AA AA",
    "comment": "",
    "parent": "spare_bytes_not_refe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of spare_bytes_not_refe)"
  },
  {
    "addr": "BF70",
    "hex1": "AA",
    "hex2": "",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "",
    "parent": "spare_bytes_not_refe",
    "entry": false,
    "label": "n/a",
    "desc": "(part of spare_bytes_not_refe)"
  },
  {
    "addr": "BF71",
    "hex1": "20",
    "hex2": "0C",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC0C",
    "comment": "round and copy FAC1 to FAC2",
    "desc": "perform SQR()",
    "parent": "this",
    "entry": true,
    "label": "perform_sqr"
  },
  {
    "addr": "BF74",
    "hex1": "A9",
    "hex2": "11",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$11",
    "comment": "set 0.5 pointer low address",
    "parent": "perform_sqr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_sqr)"
  },
  {
    "addr": "BF76",
    "hex1": "A0",
    "hex2": "BF",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$BF",
    "comment": "set 0.5 pointer high address",
    "parent": "perform_sqr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_sqr)"
  },
  {
    "addr": "BF78",
    "hex1": "20",
    "hex2": "A2",
    "hex3": "BB",
    "opcode": "JSR",
    "argument": "$BBA2",
    "comment": "unpack memory (AY) into FAC1",
    "parent": "perform_sqr",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_sqr)"
  },
  {
    "addr": "BF7B",
    "hex1": "F0",
    "hex2": "70",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BFED",
    "comment": "perform EXP()",
    "desc": "perform power function",
    "parent": "this",
    "entry": true,
    "label": "perform_power_functi"
  },
  {
    "addr": "BF7D",
    "hex1": "A5",
    "hex2": "69",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$69",
    "comment": "get FAC2 exponent",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF7F",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BF84",
    "comment": "branch if FAC2<>0",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF81",
    "hex1": "4C",
    "hex2": "F9",
    "hex3": "B8",
    "opcode": "JMP",
    "argument": "$B8F9",
    "comment": "clear FAC1 exponent and sign and return",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF84",
    "hex1": "A2",
    "hex2": "4E",
    "hex3": null,
    "opcode": "LDX",
    "argument": "#$4E",
    "comment": "set destination pointer low byte",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF86",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "set destination pointer high byte",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF88",
    "hex1": "20",
    "hex2": "D4",
    "hex3": "BB",
    "opcode": "JSR",
    "argument": "$BBD4",
    "comment": "pack FAC1 into (XY)",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF8B",
    "hex1": "A5",
    "hex2": "6E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$6E",
    "comment": "get FAC2 sign (b7)",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF8D",
    "hex1": "10",
    "hex2": "0F",
    "hex3": null,
    "opcode": "BPL",
    "argument": "$BF9E",
    "comment": "branch if FAC2>0 else FAC2 is -ve and can only be raised to an integer power which gives an x + j0 result",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF8F",
    "hex1": "20",
    "hex2": "CC",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BCCC",
    "comment": "perform INT()",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF92",
    "hex1": "A9",
    "hex2": "4E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$4E",
    "comment": "set source pointer low byte",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF94",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "set source pointer high byte",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF96",
    "hex1": "20",
    "hex2": "5B",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC5B",
    "comment": "compare FAC1 with (AY)",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF99",
    "hex1": "D0",
    "hex2": "03",
    "hex3": null,
    "opcode": "BNE",
    "argument": "$BF9E",
    "comment": "branch if FAC1 <> (AY) to allow Function Call error this will leave FAC1 -ve and cause a Function Call error when LOG() is called",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF9B",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "clear sign b7",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF9C",
    "hex1": "A4",
    "hex2": "07",
    "hex3": null,
    "opcode": "LDY",
    "argument": "$07",
    "comment": "get FAC1 mantissa 4 from INT() function as sign in Y for possible later negation, b0 only needed",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BF9E",
    "hex1": "20",
    "hex2": "FE",
    "hex3": "BB",
    "opcode": "JSR",
    "argument": "$BBFE",
    "comment": "save FAC1 sign and copy ABS(FAC2) to FAC1",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFA1",
    "hex1": "98",
    "hex2": "",
    "hex3": null,
    "opcode": "TYA",
    "argument": "",
    "comment": "copy sign back ..",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFA2",
    "hex1": "48",
    "hex2": "",
    "hex3": null,
    "opcode": "PHA",
    "argument": "",
    "comment": ".. and save it",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFA3",
    "hex1": "20",
    "hex2": "EA",
    "hex3": "B9",
    "opcode": "JSR",
    "argument": "$B9EA",
    "comment": "perform LOG()",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFA6",
    "hex1": "A9",
    "hex2": "4E",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$4E",
    "comment": "set pointer low byte",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFA8",
    "hex1": "A0",
    "hex2": "00",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$00",
    "comment": "set pointer high byte",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFAA",
    "hex1": "20",
    "hex2": "28",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BA28",
    "comment": "do convert AY, FCA1*(AY)",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFAD",
    "hex1": "20",
    "hex2": "ED",
    "hex3": "BF",
    "opcode": "JSR",
    "argument": "$BFED",
    "comment": "perform EXP()",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFB0",
    "hex1": "68",
    "hex2": "",
    "hex3": null,
    "opcode": "PLA",
    "argument": "",
    "comment": "pull sign from stack",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFB1",
    "hex1": "4A",
    "hex2": "",
    "hex3": null,
    "opcode": "LSR",
    "argument": "",
    "comment": "b0 is to be tested",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFB2",
    "hex1": "90",
    "hex2": "0A",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$BFBE",
    "comment": "if no bit then exit do - FAC1",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFB4",
    "hex1": "A5",
    "hex2": "61",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$61",
    "comment": "get FAC1 exponent",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFB6",
    "hex1": "F0",
    "hex2": "06",
    "hex3": null,
    "opcode": "BEQ",
    "argument": "$BFBE",
    "comment": "exit if FAC1_e = $00",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFB8",
    "hex1": "A5",
    "hex2": "66",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$66",
    "comment": "get FAC1 sign (b7)",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFBA",
    "hex1": "49",
    "hex2": "FF",
    "hex3": null,
    "opcode": "EOR",
    "argument": "#$FF",
    "comment": "complement it",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFBC",
    "hex1": "85",
    "hex2": "66",
    "hex3": null,
    "opcode": "STA",
    "argument": "$66",
    "comment": "save FAC1 sign (b7)",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFBE",
    "hex1": "60",
    "hex2": "",
    "hex3": null,
    "opcode": "RTS",
    "argument": "",
    "comment": "",
    "parent": "perform_power_functi",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_power_functi)"
  },
  {
    "addr": "BFBF",
    "hex1": "81",
    "hex2": "38",
    "hex3": "AA",
    "opcode": "3B",
    "argument": "9",
    "comment": "1.44269504 = 1/LOG(2)",
    "desc": "exp(n) constant and series",
    "parent": "this",
    "entry": true,
    "label": "expn_constant_and_se"
  },
  {
    "addr": "BFC4",
    "hex1": "07",
    "hex2": "",
    "hex3": null,
    "opcode": "",
    "argument": "",
    "comment": "series count",
    "parent": "expn_constant_and_se",
    "entry": false,
    "label": "n/a",
    "desc": "(part of expn_constant_and_se)"
  },
  {
    "addr": "BFC5",
    "hex1": "71",
    "hex2": "34",
    "hex3": "58",
    "opcode": "3E",
    "argument": "6",
    "comment": "2.14987637E-5",
    "parent": "expn_constant_and_se",
    "entry": false,
    "label": "n/a",
    "desc": "(part of expn_constant_and_se)"
  },
  {
    "addr": "BFCA",
    "hex1": "74",
    "hex2": "16",
    "hex3": "7E",
    "opcode": "B3",
    "argument": "B",
    "comment": "1.43523140E-4",
    "parent": "expn_constant_and_se",
    "entry": false,
    "label": "n/a",
    "desc": "(part of expn_constant_and_se)"
  },
  {
    "addr": "BFCF",
    "hex1": "77",
    "hex2": "2F",
    "hex3": "EE",
    "opcode": "E3",
    "argument": "5",
    "comment": "1.34226348E-3",
    "parent": "expn_constant_and_se",
    "entry": false,
    "label": "n/a",
    "desc": "(part of expn_constant_and_se)"
  },
  {
    "addr": "BFD4",
    "hex1": "7A",
    "hex2": "1D",
    "hex3": "84",
    "opcode": "1C",
    "argument": "A",
    "comment": "9.61401701E-3",
    "parent": "expn_constant_and_se",
    "entry": false,
    "label": "n/a",
    "desc": "(part of expn_constant_and_se)"
  },
  {
    "addr": "BFD9",
    "hex1": "7C",
    "hex2": "63",
    "hex3": "59",
    "opcode": "58",
    "argument": "A",
    "comment": "5.55051269E-2",
    "parent": "expn_constant_and_se",
    "entry": false,
    "label": "n/a",
    "desc": "(part of expn_constant_and_se)"
  },
  {
    "addr": "BFDE",
    "hex1": "7E",
    "hex2": "75",
    "hex3": "FD",
    "opcode": "E7",
    "argument": "6",
    "comment": "2.40226385E-1",
    "parent": "expn_constant_and_se",
    "entry": false,
    "label": "n/a",
    "desc": "(part of expn_constant_and_se)"
  },
  {
    "addr": "BFE3",
    "hex1": "80",
    "hex2": "31",
    "hex3": "72",
    "opcode": "18",
    "argument": "0",
    "comment": "6.93147186E-1",
    "parent": "expn_constant_and_se",
    "entry": false,
    "label": "n/a",
    "desc": "(part of expn_constant_and_se)"
  },
  {
    "addr": "BFE8",
    "hex1": "81",
    "hex2": "00",
    "hex3": "00",
    "opcode": "00",
    "argument": "0",
    "comment": "1.00000000",
    "parent": "expn_constant_and_se",
    "entry": false,
    "label": "n/a",
    "desc": "(part of expn_constant_and_se)"
  },
  {
    "addr": "BFED",
    "hex1": "A9",
    "hex2": "BF",
    "hex3": null,
    "opcode": "LDA",
    "argument": "#$BF",
    "comment": "set 1.443 pointer low byte",
    "desc": "perform EXP()",
    "parent": "this",
    "entry": true,
    "label": "perform_exp"
  },
  {
    "addr": "BFEF",
    "hex1": "A0",
    "hex2": "BF",
    "hex3": null,
    "opcode": "LDY",
    "argument": "#$BF",
    "comment": "set 1.443 pointer high byte",
    "parent": "perform_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_exp)"
  },
  {
    "addr": "BFF1",
    "hex1": "20",
    "hex2": "28",
    "hex3": "BA",
    "opcode": "JSR",
    "argument": "$BA28",
    "comment": "do convert AY, FCA1*(AY)",
    "parent": "perform_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_exp)"
  },
  {
    "addr": "BFF4",
    "hex1": "A5",
    "hex2": "70",
    "hex3": null,
    "opcode": "LDA",
    "argument": "$70",
    "comment": "get FAC1 rounding byte",
    "parent": "perform_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_exp)"
  },
  {
    "addr": "BFF6",
    "hex1": "69",
    "hex2": "50",
    "hex3": null,
    "opcode": "ADC",
    "argument": "#$50",
    "comment": "+$50/$100",
    "parent": "perform_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_exp)"
  },
  {
    "addr": "BFF8",
    "hex1": "90",
    "hex2": "03",
    "hex3": null,
    "opcode": "BCC",
    "argument": "$BFFD",
    "comment": "skip rounding if no carry",
    "parent": "perform_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_exp)"
  },
  {
    "addr": "BFFA",
    "hex1": "20",
    "hex2": "23",
    "hex3": "BC",
    "opcode": "JSR",
    "argument": "$BC23",
    "comment": "round FAC1 (no check)",
    "parent": "perform_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_exp)"
  },
  {
    "addr": "BFFD",
    "hex1": "4C",
    "hex2": "00",
    "hex3": "E0",
    "opcode": "JMP",
    "argument": "$E000",
    "comment": "continue EXP()",
    "parent": "perform_exp",
    "entry": false,
    "label": "n/a",
    "desc": "(part of perform_exp)"
  }
];

